{
  "Uuid": "160ad0ac-bb48-4a16-88fa-d70081141424",
  "IsCustomNode": true,
  "Category": "PracticalBIM.GN",
  "Description": "Sets a template to a view",
  "Name": "SetTemplatetoView",
  "ElementResolver": {
    "ResolutionMap": {
      "ScheduleView": {
        "Key": "Revit.Elements.Views.ScheduleView",
        "Value": "RevitNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Views",
      "Id": "36bd5bb2aaf24199992ca93308156568",
      "Inputs": [
        {
          "Id": "da039cbf92b644c78a669d4585fa5389",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n#The inputs to this node will be stored as a list in the IN variables.\ninput = IN[0]\n\nif isinstance(input,list) == False:\n\telements = [input]\nelse:\n\telements = input\n\n#Assign your output to the OUT variable.\nOUT = elements",
      "VariableInputPorts": true,
      "Id": "29afb0773adc4c61a003e8e104a10066",
      "Inputs": [
        {
          "Id": "f30368823e84409097c03928a487a148",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02e5d8e004a84cc5a8e31840145a1a54",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7a8e4678f9bd49c1875d110ead2d0822",
      "Inputs": [
        {
          "Id": "261d216fcd5949d99ae6e474a5fdd715",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f16c3d5867f41079476ef9ce21db005",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df54366215fe47109ee085928e593d73",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "75adf9d1089e4b6aa6474c30ab1d652f",
      "Inputs": [
        {
          "Id": "a768bad3e3294e3eb5a8e1edf6b37c29",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85ff10202a444eb09e0eec4be25aa274",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "afbbea31027f42b48e92ec613672112f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n#The inputs to this node will be stored as a list in the IN variables.\ninput = IN[0]\n\nif isinstance(input,list) == False:\n\telements = [input]\nelse:\n\telements = input\n\n#Assign your output to the OUT variable.\nOUT = elements",
      "VariableInputPorts": true,
      "Id": "e7bd8057cd574933a877fb2fe111cf16",
      "Inputs": [
        {
          "Id": "09ce0bf5790b4c55853a6a02b7bb363c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e492dc3950e40e497c8801f4e627d97",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\ndoc = DocumentManager.Instance.CurrentDBDocument\n\n#The inputs to this node will be stored as a list in the IN variable.\nviews = UnwrapElement(IN[0])\nviewTempName = IN[1]\ntemplateList = []\n\ncollector = FilteredElementCollector(doc).OfClass(View)\nfor j in viewTempName:\n\tfor i in collector:\n\t\tif i.IsTemplate == True and i.Name == j:\n\t\t\ttemplateList.append(i)\n\nTransactionManager.Instance.EnsureInTransaction(doc)\nh = 0\n\nif len(templateList) == 1 and len(views) > 1:\n\tfor i in views:\n\t\tTempTemplate = templateList[0]\n\t\ti.ViewTemplateId = TempTemplate.Id\n\nelse:\n\tfor i in views:\n\t\tTempTemplate = templateList[h]\n\t\ti.ViewTemplateId = TempTemplate.Id\n\t\th=h+1\n\nTransactionManager.Instance.TransactionTaskDone()\n\n#Assign your output to the OUT variable\nOUT = views",
      "VariableInputPorts": true,
      "Id": "619ae702524b4763a76e093940777136",
      "Inputs": [
        {
          "Id": "2b0bf613a6bf4c76a477d7cc9d939b06",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c04aabb398434c25974d01b3e4f0a05a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "313def3d6bc347599e5ee3cf47df3e43",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "SelectedViews",
        "TypeName": "Revit.Elements.Views.ScheduleView",
        "TypeRank": 1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "5fd80bf6149a402ca56b6d71876edfe4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cbaa49b0a22a45838c2dfdeff272fb37",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "TemplateName",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "2a2f7b8dc2f94900a1fb6791e7691531",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e9be1635eab34143b3bda22dfca1ebc2",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "02e5d8e004a84cc5a8e31840145a1a54",
      "End": "a768bad3e3294e3eb5a8e1edf6b37c29",
      "Id": "db5b656e34ec4134a2c3ae742152b0fb"
    },
    {
      "Start": "df54366215fe47109ee085928e593d73",
      "End": "2b0bf613a6bf4c76a477d7cc9d939b06",
      "Id": "7cabe21626dd44728c2735a579fe491c"
    },
    {
      "Start": "afbbea31027f42b48e92ec613672112f",
      "End": "c04aabb398434c25974d01b3e4f0a05a",
      "Id": "62a98512b18d4124b02e4bc7da84baef"
    },
    {
      "Start": "6e492dc3950e40e497c8801f4e627d97",
      "End": "261d216fcd5949d99ae6e474a5fdd715",
      "Id": "b63f267800a24f81a0335b77ad9ba8a3"
    },
    {
      "Start": "313def3d6bc347599e5ee3cf47df3e43",
      "End": "da039cbf92b644c78a669d4585fa5389",
      "Id": "569fd9f57a6e46a59e4728cf695b735a"
    },
    {
      "Start": "cbaa49b0a22a45838c2dfdeff272fb37",
      "End": "09ce0bf5790b4c55853a6a02b7bb363c",
      "Id": "3f705d2b4c6f4ab7bece12e86b4454f5"
    },
    {
      "Start": "e9be1635eab34143b3bda22dfca1ebc2",
      "End": "f30368823e84409097c03928a487a148",
      "Id": "b791caf2491a4bea8d741c7b16ebd4a3"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.2.1.5175",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "36bd5bb2aaf24199992ca93308156568",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1172.2958409205621,
        "Y": 143.28692077954619
      },
      {
        "ShowGeometry": true,
        "Name": "List Assurance",
        "Id": "29afb0773adc4c61a003e8e104a10066",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 587.38924352133677,
        "Y": 253.9336607595215
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "7a8e4678f9bd49c1875d110ead2d0822",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 756.692140640273,
        "Y": 173.63963302838411
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "75adf9d1089e4b6aa6474c30ab1d652f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 756.92190911173009,
        "Y": 252.76356970075631
      },
      {
        "ShowGeometry": true,
        "Name": "List Assurance",
        "Id": "e7bd8057cd574933a877fb2fe111cf16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 582.05116411221377,
        "Y": 173.99245620345741
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "619ae702524b4763a76e093940777136",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1019.054304396745,
        "Y": 143.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "5fd80bf6149a402ca56b6d71876edfe4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 150.40896808653304,
        "Y": 145.4401233861077
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "2a2f7b8dc2f94900a1fb6791e7691531",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 310.00000000000006,
        "Y": 249.048601060255
      }
    ],
    "Annotations": [],
    "X": -283.0,
    "Y": 43.0,
    "Zoom": 1.0
  }
}
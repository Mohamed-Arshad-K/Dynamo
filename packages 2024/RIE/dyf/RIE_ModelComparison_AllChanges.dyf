{
  "Uuid": "35759266-d2d7-42e5-868e-0773631da29c",
  "IsCustomNode": true,
  "Category": "RIE.ModelComparison",
  "Description": "Node for comparing models. Copied from the brilliant Data-Shapes package to have available for the modified RIE.ModelComparison.ByView node.",
  "Name": "RIE_ModelComparison_AllChanges",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Different geometry and parameter values",
      "Id": "656593d1d7794c76973136dc98923a2c",
      "Inputs": [
        {
          "Id": "db23a8074c524806a04bf4f5c3447cd4",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Different geometry, same parameter values",
      "Id": "de195ef1c9164b0da3fc2a833a623088",
      "Inputs": [
        {
          "Id": "2fcff7efdfe04ae39a0df3f1639e7962",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "//same geometry and parameters\nx[0];\n//same geometry different parameter\nx[1];\n//different geometry and same parameter\nx[2];\n//different geometry and parameters\nx[3];\n//report\nx[4];",
      "Id": "2d6a9b4ae35a4c9ebd353ad02fbb970b",
      "Inputs": [
        {
          "Id": "ba982c62d7d54efbabfb68f5bdb7a841",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b724dd7a860f46bcb2efa8845d81520b",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69590d53f1474ffbb8aabf7fde3ff817",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d3995fa52454ababaa21081f613331b",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c463b1e83fcc4f218120aa4a0ab116df",
          "Name": "",
          "Description": "Value of expression at line 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6637051e403746bbb4cf0d6397640d6c",
          "Name": "",
          "Description": "Value of expression at line 10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Same geometry, different parameter values",
      "Id": "46272c7fa13349d1a1164e6191c9e66a",
      "Inputs": [
        {
          "Id": "875de28cdb9d4e819eeb5491ed5516b1",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Same geometry and parameter values",
      "Id": "ca92afccd3004804b158a7aae7b5cf62",
      "Inputs": [
        {
          "Id": "621a150eecbd43de9a24c951b3a057c6",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Report",
      "Id": "94ffbdf0315c45d9b76046e2a3209faa",
      "Inputs": [
        {
          "Id": "6f0b7bc5724b4feda1c7796076509dfe",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2016\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\n#This node was inspired by Jeremy Tammik @Jeremytammik\n\nimport clr\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\n\nif isinstance(IN[0][0],list):\n\telementsA = UnwrapElement(IN[0][0])\n\telementsB = UnwrapElement(IN[0][1])\nelse :\n\telementsA = [UnwrapElement(IN[0][0])]\n\telementsB = [UnwrapElement(IN[0][1])]\n\ndef flatten(container):\n    for i in container:\n        if isinstance(i, (list,tuple)):\n            for j in flatten(i):\n                yield j\n        else:\n            yield i\n\ndef tostring(x):\n\treturn x.ToString()\ndef getgeomlist(x):\n\treturn list(x.get_Geometry(Options()))\n\n\ndef getvertices(x):\n\t#getting geometryelements as list\n\tgeomelems = getgeomlist(x)\n\t#getting nested instance geometry for all geometry instances\n\twhile any('GeometryInstance' in g for g in map(tostring,geomelems)):\n\t\tfor index,i in enumerate(geomelems):\n\t\t\tif 'GeometryInstance' in i.ToString():\n\t\t\t\tgeomelems[index] = i.GetInstanceGeometry()\n\t\t\telse:\n\t\t\t\tcontinue\n\t\t\tgeomelems = list(flatten(geomelems))[0]\n\t#getting all faces, keeping meshes\n\tfaces = []\n\tfor i in geomelems:\n\t\tif 'Solid' in i.ToString():\n\t\t\tfaces.append(list(i.Faces))\n\t\telif 'Mesh' in i.ToString():\n\t\t\tfaces.append(i)\n\t\telse:\n\t\t\tcontinue\n\tfaces = list(flatten(faces))\n\t#getting all meshes\n\tmeshes = []\n\tfor f in faces:\n\t\tif 'Mesh' in f.ToString():\n\t\t\tmeshes.append(f)\n\t\telse:\n\t\t\tmeshes.append(f.Triangulate())\n\t#getting all vertices\n\tvertexlist = []\n\tfor m in meshes:\n\t\tvertexlist.append(list(m.Vertices))\n\tvertexlist = list(flatten(vertexlist))\n\t#creating sorted vertex string representation of object for comparison with other indice of element\n\tvertexstr = ', '.join(sorted(set(map(tostring,vertexlist))))\n\treturn vertexstr\n\ndef parametersnapshot(x):\n\tparameters = x.Parameters\n\tparamnames = [p.Definition.Name for p in parameters]\n\tsortedindex = sorted(range(len(paramnames)), key = lambda k : paramnames[k])\n\tsortedparameters = [paramnames[i] for i in sortedindex]\n\tparamvalues = []\n\tfor p in parameters:\n\t\tif p.AsString() != None:\n\t\t\tparamvalues.append(p.AsString())\n\t\telse :\n\t\t\tparamvalues.append(p.AsValueString())\n\tsortedvalues = [paramvalues[i] for i in sortedindex]\n\treturn ', '.join(['%s : %s' % (param,value) for param,value in zip(sortedparameters,sortedvalues)])\n\n\ngeomtest = []\nparamtest = []\nfor eA,eB in zip(elementsA,elementsB):\n\tgeomtest.append(getvertices(eA) == getvertices(eB))\n\tparamtest.append(parametersnapshot(eA) == parametersnapshot(eB))\n\nsamegeometrysameparameters = [i for (i,gt,pt) in zip(elementsA,geomtest,paramtest) if gt and pt]\ndifferentgeometrysameparameters = [i for (i,gt,pt) in zip(elementsA,geomtest,paramtest) if gt == False and pt == True]\nsamegeometrydifferentparameters = [i for (i,gt,pt) in zip(elementsA,geomtest,paramtest) if gt == True and pt == False]\ndifferentgeometrydifferentparameters = [i for (i,gt,pt) in zip(elementsA,geomtest,paramtest) if gt == False and pt == False]\n\nreport = '%d element(s) tested \\n%d element(s) with same geometry and parameters, \\n%d element(s) with same geometry and different parameters, \\n%d element(s) with different geometry and same parameters, \\n%d element(s) with different geometry and different parameters' %(len(elementsA),len(samegeometrysameparameters),len(samegeometrydifferentparameters),len(differentgeometrysameparameters), len(differentgeometrydifferentparameters))\n\nOUT = samegeometrysameparameters , samegeometrydifferentparameters , differentgeometrysameparameters, differentgeometrydifferentparameters, report",
      "VariableInputPorts": true,
      "Id": "0b4e826e000241fabcbbf73fd3125ac7",
      "Inputs": [
        {
          "Id": "80e26658f573469085bdbcb00f52df9f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d41bf1603249414ababca3cd489e72f7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "ExistingElementsData",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "4cd9dd8239d441feadea4a493f176b56",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9ebd2870d51d431ebe78c94da483a57b",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "b724dd7a860f46bcb2efa8845d81520b",
      "End": "621a150eecbd43de9a24c951b3a057c6",
      "Id": "eb9300f8574b4fa090ac5f290a87dd0d"
    },
    {
      "Start": "69590d53f1474ffbb8aabf7fde3ff817",
      "End": "875de28cdb9d4e819eeb5491ed5516b1",
      "Id": "84cb01c9d6fd4b73ae69d8a0a56cd078"
    },
    {
      "Start": "1d3995fa52454ababaa21081f613331b",
      "End": "2fcff7efdfe04ae39a0df3f1639e7962",
      "Id": "a3faeb5c829643eb9c742220601da2d6"
    },
    {
      "Start": "c463b1e83fcc4f218120aa4a0ab116df",
      "End": "db23a8074c524806a04bf4f5c3447cd4",
      "Id": "94f01315f5734810b2d51c88283f4e38"
    },
    {
      "Start": "6637051e403746bbb4cf0d6397640d6c",
      "End": "6f0b7bc5724b4feda1c7796076509dfe",
      "Id": "40b2d9461ee14680b584164d73d51efc"
    },
    {
      "Start": "d41bf1603249414ababca3cd489e72f7",
      "End": "ba982c62d7d54efbabfb68f5bdb7a841",
      "Id": "2ff81ddb51ce4345940ca8b5725ac27e"
    },
    {
      "Start": "9ebd2870d51d431ebe78c94da483a57b",
      "End": "80e26658f573469085bdbcb00f52df9f",
      "Id": "fa3605cbf6c04aa7ba13d4e7a929f29c"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -38.162926487427619,
      "EyeY": 41.343170361379933,
      "EyeZ": 184.45414468923352,
      "LookX": 38.162926487427619,
      "LookY": -41.343170361379933,
      "LookZ": -184.45414468923352,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "656593d1d7794c76973136dc98923a2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1285.0,
        "Y": 696.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "de195ef1c9164b0da3fc2a833a623088",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1286.0,
        "Y": 632.0
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2d6a9b4ae35a4c9ebd353ad02fbb970b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 791.787614554191,
        "Y": 425.12484392029
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "46272c7fa13349d1a1164e6191c9e66a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1286.0,
        "Y": 570.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "ca92afccd3004804b158a7aae7b5cf62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1285.0,
        "Y": 505.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "94ffbdf0315c45d9b76046e2a3209faa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1289.0,
        "Y": 437.0
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "0b4e826e000241fabcbbf73fd3125ac7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 537.5,
        "Y": 422.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "4cd9dd8239d441feadea4a493f176b56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 251.0,
        "Y": 419.0
      }
    ],
    "Annotations": [],
    "X": 0.0,
    "Y": 0.0,
    "Zoom": 1.0
  }
}
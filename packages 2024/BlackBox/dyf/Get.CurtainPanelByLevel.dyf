<Workspace Version="0.9.0.3067" X="0" Y="0" zoom="1" Name="Get.CurtainPanelByLevel" Description="Select curtain panels by the level they are on. These panels will look to the wall they are hosted in and use the Base Constraint. This hurdles the difficulties in door and windows not reading the level corectly." ID="9f36f4e0-4e09-4634-871b-eba13222e0bb" Category="BlackBox.Get">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Nodes.Symbol guid="f11b990c-3562-48d4-a042-b0d5a9ade7f5" type="Dynamo.Nodes.Symbol" nickname="Input" x="470" y="203" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <Symbol value="Level" />
    </Dynamo.Nodes.Symbol>
    <PythonNodeModels.PythonNode guid="53c25a87-a607-40ad-877b-090367330a07" type="PythonNodeModels.PythonNode" nickname="Python Script" x="592" y="203" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" inputcount="1">
      <Script>#Copyright(c) 2014, Jason Andersen, jason@serialnonstandard.com 
import clr

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

doc =  DocumentManager.Instance.CurrentDBDocument
app =  DocumentManager.Instance.CurrentUIApplication.Application

#levels coming in
level = IN[0]

fec = FilteredElementCollector(doc)
fec.OfCategory(BuiltInCategory.OST_CurtainWallPanels)
fec.OfClass(FamilyInstance)
 
famTypeItr = fec.GetElementIdIterator()
famTypeItr.Reset()

#global Variables
cpAtLevel = []
error =[]

for item in famTypeItr:
	famInst = doc.GetElement(item)
	if famInst.Host.Parameter["Base Constraint"].AsValueString() == level.Name.ToString():
		cpAtLevel.append(famInst)
	else:
		error.append("appears to be no Curtain Panels here...")
#Assign your output to the OUT variable
OUT =  cpAtLevel,error</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Nodes.Output guid="45b1e040-ac68-4ab0-82ce-ac74e586351c" type="Dynamo.Nodes.Output" nickname="Output" x="753" y="203" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False">
      <Symbol value="Curtain Panels" />
    </Dynamo.Nodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="f11b990c-3562-48d4-a042-b0d5a9ade7f5" start_index="0" end="53c25a87-a607-40ad-877b-090367330a07" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="53c25a87-a607-40ad-877b-090367330a07" start_index="0" end="45b1e040-ac68-4ab0-82ce-ac74e586351c" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>
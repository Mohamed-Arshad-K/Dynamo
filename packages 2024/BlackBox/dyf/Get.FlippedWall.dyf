<Workspace Version="0.8.1.1942" X="280" Y="284" zoom="1" Name="Get.FlippedWall" ID="198945be-02e3-4565-909b-6722831fd066" Description="This node creates two lists of walls, one in which the wall has been flipped from original position and on that has not been.  It is useful in Curtain Walls that have complicated Curtain Panels" Category="BlackBox.Get">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Nodes.Symbol guid="2afcdd0a-98a4-4789-b65c-96188c3853e8" type="Dynamo.Nodes.Symbol" nickname="Input" x="-57" y="137.124378662686" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Wall Type [string]" />
    </Dynamo.Nodes.Symbol>
    <DSIronPythonNode.PythonNode guid="e0af5177-2897-4f58-89e3-6f401be0c9f7" type="DSIronPythonNode.PythonNode" nickname="Python Script_v0.7_NOElemUwrap" x="169.671366898081" y="136.6736682132" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>#Copyright(c) 2014, 
# Jason Andersen, andersen.ja@gmail.com

# Default imports
import clr
# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *
# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
doc =  DocumentManager.Instance.CurrentDBDocument
app =  DocumentManager.Instance.CurrentUIApplication.Application

#The inputs to this node will be stored as a list in the IN variable.
typname = IN[0]

collector = FilteredElementCollector(doc)
collector.OfCategory(BuiltInCategory.OST_Walls)
collector.OfClass(Wall)
 
famtypeitr = collector.GetElementIdIterator()
famtypeitr.Reset()

output = []
trues = []
falses = []
for item in famtypeitr:
    famtypeID = item
    faminst = doc.GetElement(famtypeID)
    if faminst.Name == typname:    
    	wall = faminst
    	flippedwall = faminst.Flipped
    	if flippedwall.Equals(True):
    		trues.append(wall)
    	else:
    		falses.append(wall)
    		continue  		     
output.append(trues)
output.append(falses)      
#Assign your output to the OUT variable
OUT = output</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.DoubleInput guid="36e3e6ec-e1c6-4c72-bd54-f49a68da0c49" type="Dynamo.Nodes.DoubleInput" nickname="Number" x="466.045940087036" y="66.97384826673" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.Double value="0" />
    </Dynamo.Nodes.DoubleInput>
    <Dynamo.Nodes.DoubleInput guid="29e5ff2d-a080-4b97-8e20-ced163ed0054" type="Dynamo.Nodes.DoubleInput" nickname="Number" x="468.893346880994" y="279.285512297172" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.Double value="1" />
    </Dynamo.Nodes.DoubleInput>
    <Dynamo.Nodes.DSFunction guid="b5ef63e5-c943-4df2-a207-d1fe97b0fa35" type="Dynamo.Nodes.DSFunction" nickname="List.GetItemAtIndex" x="556.207631871283" y="10" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="DSCoreNodes.dll" function="DSCore.List.GetItemAtIndex@var[]..[],int" />
    <Dynamo.Nodes.DSFunction guid="d3fcc38c-59cc-48ac-84d0-f7bdb5d1e68b" type="Dynamo.Nodes.DSFunction" nickname="List.GetItemAtIndex" x="557.868095045064" y="225.872494890975" isVisible="true" isUpstreamVisible="true" lacing="Shortest" assembly="DSCoreNodes.dll" function="DSCore.List.GetItemAtIndex@var[]..[],int" />
    <Dynamo.Nodes.Output guid="533c7ba4-5eee-4247-8c1c-931d14a57f29" type="Dynamo.Nodes.Output" nickname="Output" x="764.865159869389" y="11.32033658622" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Flipped" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="197ea835-4fc2-4fda-94ac-17997c3a4555" type="Dynamo.Nodes.Output" nickname="Output" x="746.595259812293" y="221.477637673459" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="NOT Flipped" />
    </Dynamo.Nodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="2afcdd0a-98a4-4789-b65c-96188c3853e8" start_index="0" end="e0af5177-2897-4f58-89e3-6f401be0c9f7" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="e0af5177-2897-4f58-89e3-6f401be0c9f7" start_index="0" end="b5ef63e5-c943-4df2-a207-d1fe97b0fa35" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="e0af5177-2897-4f58-89e3-6f401be0c9f7" start_index="0" end="d3fcc38c-59cc-48ac-84d0-f7bdb5d1e68b" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="36e3e6ec-e1c6-4c72-bd54-f49a68da0c49" start_index="0" end="b5ef63e5-c943-4df2-a207-d1fe97b0fa35" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="29e5ff2d-a080-4b97-8e20-ced163ed0054" start_index="0" end="d3fcc38c-59cc-48ac-84d0-f7bdb5d1e68b" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="b5ef63e5-c943-4df2-a207-d1fe97b0fa35" start_index="0" end="533c7ba4-5eee-4247-8c1c-931d14a57f29" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="d3fcc38c-59cc-48ac-84d0-f7bdb5d1e68b" start_index="0" end="197ea835-4fc2-4fda-94ac-17997c3a4555" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
</Workspace>
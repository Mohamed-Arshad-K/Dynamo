{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Editor.Extrusion By Infraworks Buildings (Direct SAT Import)",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "6617c69013d7413cbf28a0af3942cb68",
      "Name": "01.SAT File",
      "Type": "string",
      "Value": "No file selected.",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "72c8f9a6e3264adeb0b30c25d79d19d6",
      "Inputs": [
        {
          "Id": "759a7183ab1242f79835f05da14e5139",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf1c2203697d473793d841127c5d135a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c514fd4d1a6147a39aa4fa052a0992bf",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ff46d137153f481db1d949b8ef768e1f",
      "Inputs": [
        {
          "Id": "9325b1d13475465d8f12b76f70748a0b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2135e114456d4e30915958c48a614d00",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcf0d49c7c654bd9bab0d155e9addd14",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "0a7ac4b2-6560-4840-9433-8c273b061d1e",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "acbbddf20add4779a36c4c869405e1e1",
      "Inputs": [
        {
          "Id": "80665704664c49ecb9e7772215ef8964",
          "Name": "VARsurfaces",
          "Description": "Surface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65b702e95f3e4a47beb2550af9c2fa0b",
          "Name": "VARvertical",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8b6feb3ac8f42cc83a38f235d3799de",
          "Name": "VARisVertical",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef35dd21332e4b9bba61be333b7029ea",
          "Name": "VARhorizontalUp",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "398a549438c5445990c5acc2f5bbbaf7",
          "Name": "VARisHorizontalUp",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4465100c26d4408bb981a26497e9a65e",
          "Name": "VARhorizontalDown",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f96474ea53f4efb8f656e9b3fe1415f",
          "Name": "VARisHorizontalDown",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts surfaces in three lists based on their orientation (vertical, horizontal up & horizontal down) and also returns three corresponding lists of booleans."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "3cf8ed21-8f10-4e09-9673-1971520e8bf2",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "92d6c4d0838c4d1fa4e207251b70221b",
      "Inputs": [
        {
          "Id": "820b8f6eb40c46f79748ed68ce7d477a",
          "Name": "VARobject",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e6ec95e02374e91b93dad077ad9a5d7",
          "Name": "VARclassName",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a076773232e43d4838c949eb1272f75",
          "Name": "VARin",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e7869b559cf4888aecf7dc7bba27159",
          "Name": "VARout",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3aecd077b75b4f4a8f63c1f439534859",
          "Name": "VARbool",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a list of objects by the object's class name. Note that Dynamo elements belong to different classes than their Revit counterparts. Use the Object.Class node to check an object's class."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a240bd1ba61647f18368ddde89b210c7",
      "Inputs": [
        {
          "Id": "ec3fb114cd224bc6938420631c6e8af3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d20522685d0410ea54c52c98fe3803b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2022afb47eae4fb2b2d916fa78478d63",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Surface\";",
      "Id": "1f156dcbbb6a4719a12c7b98e8bb7e78",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5bd768015b6b4562b36ec935e449e9e9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "57cbd65e076b4483ac382bc45b519fa8",
      "Inputs": [
        {
          "Id": "299715926e8d4711addf87f4e18a79ea",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58e970da83024d6eb586a1c6ea1b605b",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Created By Karam Baki : karam@aecedx.com\n# Enable Python support and load DesignScript library\n# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\nimport math\n\n# EXTENSION Enable ToDSType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Enable Revit Elements\nfrom Revit.Elements import *\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Enable Revit API\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\n\n# Enable DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Enable ICollection List Translate\nclr.AddReference(\"System\")\nimport System.Collections.Generic\nfrom System.Collections.Generic import List\nfrom itertools import combinations\n\n# Choose The Current Document\ndoc = DocumentManager.Instance.CurrentDBDocument\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\n# Create Empty List\nresult = []\n\nhordownsurfs = IN[0]\nhorupsurfs = IN[1]\n\ndownpts = []\nfor each in hordownsurfs:\n\tdownpts.append(dg.Surface.PointAtParameter(each,0.5,0.5))\n\nuppts = []\nfor each in horupsurfs:\n\tuppts.append(dg.Surface.PointAtParameter(each,0.5,0.5))\n\npoints = downpts + uppts\nsurfs = hordownsurfs + horupsurfs\n\npairs = combinations(points,2)\nsurfpairs = combinations(surfs,2)\n\nsubextract = []\nfor each in surfpairs:\n\tsubextract.append(each)\n\n\nTransactionManager.Instance.EnsureInTransaction(doc)\ncount = 0\nfor each in pairs:\n\tx1 = round(each[0].X,2)\n\tx2 = round(each[1].X,2)\n\ty1 = round(each[0].Y,2)\n\ty2 = round(each[1].Y,2)\n\tif x1 == x2 and y1 == y2:\n\t\tcurs = dg.Surface.PerimeterCurves(subextract[count][1])\n\t\tmaster = CurveArrArray()\n\t\tarr = CurveArray()\n\t\tfor e in curs:\n\t\t\tarr.Append(e.ToRevitType())\n\t\tmaster.Append(arr)\n\t\ttry:\n\t\t\tl = dg.Line.ByStartPointEndPoint(each[0],each[1]).Length\n\t\t\tsketchplane = SketchPlane.Create(doc,dg.Plane.ByOriginNormal(each[1],dg.Vector.ZAxis()).ToPlane())\n\t\t\tif int(DocumentManager.Instance.CurrentUIApplication.Application.VersionNumber) < 2021:\n\t\t\t\tunittype = UnitType.UT_Length\n\t\t\t\tformatoptions = doc.GetUnits().GetFormatOptions(unittype)\n\t\t\t\tdispunits = formatoptions.DisplayUnits\n\t\t\t\textval = UnitUtils.ConvertToInternalUnits(l,dispunits)\n\t\t\telse:\n\t\t\t\textval = UnitUtils.ConvertToInternalUnits(l,doc.GetUnits().GetFormatOptions(SpecTypeId.Length).GetUnitTypeId())\n\t\t\textru = doc.FamilyCreate.NewExtrusion(True, master, sketchplane, extval)\n\t\t\tresult.append(extru)\n\t\t\tsketchplane.Dispose()\n\t\t\tcount = count + 1\n\t\texcept:\n\t\t\tpass\n\t\t\tcount = count + 1\n\telse:\n\t\tcount = count + 1\n\nTransactionManager.Instance.TransactionTaskDone()\n\nfor each in hordownsurfs:\n\teach.Dispose()\n\nfor each in horupsurfs:\n\teach.Dispose()\n\nOUT = result",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "a410c0d0520b4e8e9c5f432ebb5c8d60",
      "Inputs": [
        {
          "Id": "d04b363e5ea84306872bac8fd8a466de",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28b377cb342145588de3dd95361f3b7b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ee30367d47d44308187b92ada2280f1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "05702df1-2b09-4fc7-a578-83290d1f9291",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8d17ca3b20834921a5a837f5fd14d799",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cc398814d73541169d4b74b6b9bdad08",
          "Name": "VAROut",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Debug Python"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "",
      "InputValue": "No file selected.",
      "NodeType": "ExtensionNode",
      "Id": "6617c69013d7413cbf28a0af3942cb68",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9b6c3a60177248a2921c6275f428db4d",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.ImportFromSAT@var",
      "Id": "e8182c452bea4a3285f45de2c2bbe7c1",
      "Inputs": [
        {
          "Id": "11fafbcd7ce6427c87f63f3dfd96c9e0",
          "Name": "file",
          "Description": "File object representing the SAT file\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1af04cdd22e4fe78e8cee51826a197c",
          "Name": "Geometry[]..[]",
          "Description": "List of imported geometries",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Imports a SAT file and returns an array of imported geometries\n\nGeometry.ImportFromSAT (file: var): Geometry[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f4605c4df0b947adafaebed105342122",
      "Inputs": [
        {
          "Id": "0706951565754c61b905a68d6910ae8e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c437a518377d4897ab2da0e44726aade",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8269213b94c438fb0820df1150264a2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "c514fd4d1a6147a39aa4fa052a0992bf",
      "End": "d04b363e5ea84306872bac8fd8a466de",
      "Id": "9281dc6088b34a4092d97e1e22ea7bd8",
      "IsHidden": "False"
    },
    {
      "Start": "dcf0d49c7c654bd9bab0d155e9addd14",
      "End": "28b377cb342145588de3dd95361f3b7b",
      "Id": "7965ec981d7e47f3ad28745d8b7220ad",
      "IsHidden": "False"
    },
    {
      "Start": "ef35dd21332e4b9bba61be333b7029ea",
      "End": "759a7183ab1242f79835f05da14e5139",
      "Id": "9813e27bd5da4b79b56c256e47376008",
      "IsHidden": "False"
    },
    {
      "Start": "4465100c26d4408bb981a26497e9a65e",
      "End": "9325b1d13475465d8f12b76f70748a0b",
      "Id": "a6889a29f3964e86b84fd0a9813dabfe",
      "IsHidden": "False"
    },
    {
      "Start": "7a076773232e43d4838c949eb1272f75",
      "End": "80665704664c49ecb9e7772215ef8964",
      "Id": "a49e0114423e45579d9657364a0440bc",
      "IsHidden": "False"
    },
    {
      "Start": "2022afb47eae4fb2b2d916fa78478d63",
      "End": "820b8f6eb40c46f79748ed68ce7d477a",
      "Id": "392bc5dac59c4c55855302880806e99f",
      "IsHidden": "False"
    },
    {
      "Start": "5bd768015b6b4562b36ec935e449e9e9",
      "End": "8e6ec95e02374e91b93dad077ad9a5d7",
      "Id": "8f0b6032aa95423aa3bde54180acc3a4",
      "IsHidden": "False"
    },
    {
      "Start": "58e970da83024d6eb586a1c6ea1b605b",
      "End": "ec3fb114cd224bc6938420631c6e8af3",
      "Id": "8db626d3568344308326f90ca2d8a28c",
      "IsHidden": "False"
    },
    {
      "Start": "9b6c3a60177248a2921c6275f428db4d",
      "End": "11fafbcd7ce6427c87f63f3dfd96c9e0",
      "Id": "bcf1239919084095be45de62a9a7326f",
      "IsHidden": "False"
    },
    {
      "Start": "c1af04cdd22e4fe78e8cee51826a197c",
      "End": "0706951565754c61b905a68d6910ae8e",
      "Id": "f0dcf1be7c1c421f80ea4919589639a9",
      "IsHidden": "False"
    },
    {
      "Start": "a8269213b94c438fb0820df1150264a2",
      "End": "299715926e8d4711addf87f4e18a79ea",
      "Id": "dfe21c1c64c240f78d33fdb201757dac",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "0a7ac4b2-6560-4840-9433-8c273b061d1e",
    "3cf8ed21-8f10-4e09-9673-1971520e8bf2",
    "05702df1-2b09-4fc7-a578-83290d1f9291"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Synthesize toolkit",
      "Version": "12.5.1",
      "ReferenceType": "Package",
      "Nodes": [
        "acbbddf20add4779a36c4c869405e1e1",
        "92d6c4d0838c4d1fa4e207251b70221b",
        "8d17ca3b20834921a5a837f5fd14d799"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "karam@aecedx.com",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 60.55188751220703,
      "EyeY": 1184.7347412109375,
      "EyeZ": 76.9602279663086,
      "LookX": 406.0076904296875,
      "LookY": -357.85760498046875,
      "LookZ": -455.8633117675781,
      "UpX": 0.20552465319633484,
      "UpY": 0.9510564804077148,
      "UpZ": -0.23076200485229492
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "72c8f9a6e3264adeb0b30c25d79d19d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2358.34400629972,
        "Y": 480.576646983037
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "ff46d137153f481db1d949b8ef768e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2149.91736989758,
        "Y": 606.081103895957
      },
      {
        "Name": "CW.Surface.FilterByOrientation",
        "ShowGeometry": false,
        "Id": "acbbddf20add4779a36c4c869405e1e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1771.68088435161,
        "Y": 463.923533715417
      },
      {
        "Name": "SP.Filter.ByClassName",
        "ShowGeometry": false,
        "Id": "92d6c4d0838c4d1fa4e207251b70221b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1470.24525281118,
        "Y": 369.69444406572
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "a240bd1ba61647f18368ddde89b210c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1139.04525281118,
        "Y": 357.69444406572
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "1f156dcbbb6a4719a12c7b98e8bb7e78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1254.44525281118,
        "Y": 475.094444065717
      },
      {
        "Name": "Geometry.Explode",
        "ShowGeometry": false,
        "Id": "57cbd65e076b4483ac382bc45b519fa8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 819.614023601713,
        "Y": 262.517787774731
      },
      {
        "Name": "Python Script",
        "ShowGeometry": false,
        "Id": "a410c0d0520b4e8e9c5f432ebb5c8d60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2652.99426547752,
        "Y": 610.873928671965
      },
      {
        "Name": "Debug Python",
        "ShowGeometry": false,
        "Id": "8d17ca3b20834921a5a837f5fd14d799",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 694.609148224469,
        "Y": 634.025304641091
      },
      {
        "Name": "01.SAT File",
        "ShowGeometry": true,
        "Id": "6617c69013d7413cbf28a0af3942cb68",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -170.181036020649,
        "Y": 113.795791036762
      },
      {
        "Name": "Geometry.ImportFromSAT",
        "ShowGeometry": false,
        "Id": "e8182c452bea4a3285f45de2c2bbe7c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4.98890866491615,
        "Y": 162.571539120611
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "f4605c4df0b947adafaebed105342122",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 279.487555994019,
        "Y": 214.893803273905
      }
    ],
    "Annotations": [
      {
        "Id": "be8c1d0ed4314331987d3815c92eb609",
        "Title": "Input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6617c69013d7413cbf28a0af3942cb68"
        ],
        "HasNestedGroups": false,
        "Left": -180.181036020649,
        "Top": 47.795791036762,
        "Width": 182.4,
        "Height": 207.39999999999998,
        "FontSize": 30.0,
        "InitialTop": 113.795791036762,
        "InitialHeight": 145.0,
        "TextblockHeight": 56.0,
        "Background": "#FFD8D8D8"
      }
    ],
    "X": 153.4674422094917,
    "Y": 130.8236377421092,
    "Zoom": 0.5923893969658354
  }
}
{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Conceptual.UV Fixer Family.Prepare For Intersects",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "5bf6e440e0d346249c245ad51b4a867f",
      "Name": "01.Select UV Fixer",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select multiple elements from the Revit document.",
      "SelectedIndex": 0
    },
    {
      "Id": "5868526acfb84d819375217b7ac45dc3",
      "Name": "02.Flip Reference Planes Side",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    },
    {
      "Id": "1da27744612b4842bfec52bd7cdeaf41",
      "Name": "03.Reference Planes Offset",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "ee96b44246ce480c8ef581a0e45f9fc5",
      "Name": "04.Reference Planes Name Prefix",
      "Type": "string",
      "Value": "UV Fixer Ref Plane",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "67c662494f584e71b33f8c93fc25500f",
      "Name": "05.Number of Points ?",
      "Type": "number",
      "Value": "6",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.CurveByPoints.ByReferencePoints@Revit.Elements.ReferencePoint[],bool",
      "Id": "a284b7487695450b90b394e515c5ae70",
      "Inputs": [
        {
          "Id": "8e118f3f0dc046db945360a86b5cc28f",
          "Name": "points",
          "Description": "ReferencePoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0cc72e4adbfd4d1c94400f747435de92",
          "Name": "isReferenceLine",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcf121b5bc9d4cb69d541e08d9ab6f43",
          "Name": "CurveByPoints",
          "Description": "CurveByPoints",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Construct a Revit CurveByPoints Element (a CurveElement) from a collection of ReferencePoint's\n\nCurveByPoints.ByReferencePoints (points: ReferencePoint[], isReferenceLine: bool = false): CurveByPoints"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Import Element wrapper extension methods\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Import geometry conversion extension methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\n# The inputs to this node will be stored as a list in the IN variable.\ndataEnteringNode = IN\n\n# Unwrap elements and convert geometry from Dynamo to Revit:\n\nrPlanes = UnwrapElement(IN[0])\nresult = []\n# Set the reference plane as the sketchplane in the active view in another transaction\nTransactionManager.Instance.EnsureInTransaction(doc)\nfor each in rPlanes:\n\tresult.append(SketchPlane.Create(doc,each.Id))\nTransactionManager.Instance.TransactionTaskDone()\n\nOUT = result",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "3a317d2a6e1341fa911fba5a383c1dd8",
      "Inputs": [
        {
          "Id": "6a0237217e60474bac9bebf836ce7ceb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c426fb4e125643f09ca93b593f640dfa",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\n# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\n\n# EXTENSION Enable ToDSType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Enable Revit Elements\nfrom Revit.Elements import *\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Enable Revit API\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\n\n# Enable DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Enable ICollection List Translate\nclr.AddReference(\"System\")\nimport System.Collections.Generic\nfrom System.Collections.Generic import List\n\ndoc = DocumentManager.Instance.CurrentDBDocument\napp = doc.Application\n\nPointslist = UnwrapElement(IN[0])\nSketchplanes = UnwrapElement(IN[1])\nresult = []\n\n\nTransactionManager.Instance.EnsureInTransaction(doc)\n\nConvertedSketchPlanes = []\nfor each in Sketchplanes:\n\tConvertedSketchPlanes.append(each.GetPlaneReference())\n\ndynpoints=[]\nrefpoints=[]\n\ncount = 0\nfor eachplane in ConvertedSketchPlanes:\n\ttmplist = []\n\tnewcount = 0\n\tfor eachlist in Pointslist[count]:\n\t\tanothertmp = []\n\t\tfor eachpoint in eachlist:\n\t\t\teachpoint.ToXyz()\n\t\t\tdynpoints = PointOnPlane.NewPointOnPlane(doc,eachplane,eachpoint.ToXyz(),XYZ(0,0,1))\n\t\t\tdynpoints.SetPlaneReference(eachplane)\n\t\t\trefpoints = doc.FamilyCreate.NewReferencePoint(dynpoints)\n\t\t\tanothertmp.append(refpoints)\n\t\ttmplist.append(anothertmp)\n\tresult.append(tmplist)\n\tcount = count + 1\t\t\n\nTransactionManager.Instance.TransactionTaskDone()\n\nOUT = result;",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "5e25bb191424490abd4f9fc814b1cdbc",
      "Inputs": [
        {
          "Id": "43fe1cc795cd4bfdbabdc25e82db73dd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c4d7b4d3c90481b8a94cbe0662f52e5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da98cdf8a3a9482f81a1c5818f7b0ef3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "a61da5b4-3730-47d8-be9f-f243b36340b2",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "9867c90605f34dc5b8c6c5d41349bf1b",
      "Inputs": [
        {
          "Id": "7ab6e4c6b300455bb658e8c1319b99a9",
          "Name": "VARReferencePlaneNamePrefix",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f43f6bd0f47b4a4887f197bb9086fda9",
          "Name": "VARFlipReferencePlanesSide",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a55045c6b0045eba9ea49f8830a9321",
          "Name": "VARReferencePlanesOffset",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0111d83ea99946bc85edfc8b6df8bf75",
          "Name": "VARFaces",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "275db3f8cc9e44e8a5094cf0be93c570",
          "Name": "VARElement",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Reference Plane Perpendicular On Face"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "3008d61a470f44dcbbe62f937c49ab3c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "33f252a13098457e98390e6e7b58998f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Curves",
      "Id": "dd705be5e4c14d359160936c8320343f",
      "Inputs": [
        {
          "Id": "163f477322364a5c9f078b49158785a4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d35927f5d3a4a3787d80b5346129bf2",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Curves in this Element\n\nElement.Curves: Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.ByBestFitThroughPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "a2bb696cabb2459bae8139867f6dc9d2",
      "Inputs": [
        {
          "Id": "3fbb5dced8ff41a7b5a3e3f3c5c7ff5d",
          "Name": "points",
          "Description": "List of points to define plane\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e7e61a143ab4a929b3eed8781feff35",
          "Name": "Plane",
          "Description": "Plane created by best fit through points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fits a Plane to the input Points; basically a 3D scatterplot fit.\n\nPlane.ByBestFitThroughPoints (points: Point[]): Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Rectangle.ByWidthLength@Autodesk.DesignScript.Geometry.Plane,double,double",
      "Id": "6d78d20da37c41b7a16cfa24b7936b05",
      "Inputs": [
        {
          "Id": "5a30c7f71b324cedb8147f8930de16a9",
          "Name": "plane",
          "Description": "Plane used to center rectangle\n\nPlane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a00c59eb71714a66926f36002eb17950",
          "Name": "width",
          "Description": "Width of rectangle\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9d9d8f3585043b09bff3048354e45a0",
          "Name": "length",
          "Description": "Length of rectangle\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "542f3074c2be4c5cbb02dafbbce11e80",
          "Name": "Rectangle",
          "Description": "Rectangle created by width and length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Rectangle centered at input Plane root, with input width (Plane X axis length), and length (Plane Y axis length).\n\nRectangle.ByWidthLength (plane: Plane, width: double = 1, length: double = 1): Rectangle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "526afefcbab049789bd07231d8dda4e9",
      "Inputs": [
        {
          "Id": "a9d59bca26ef4e7db470310993825a4d",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcb9474c784e4bb2be2dc1e61faf8457",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "5bf6e440e0d346249c245ad51b4a867f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b823d40caa9a485b9cba65ab4dd69c1b",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "5868526acfb84d819375217b7ac45dc3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6eccd3b9b5a0413d862d2f8bb9093e1b",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "1da27744612b4842bfec52bd7cdeaf41",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "867be6222b9047fc9f32f8c10f1d841f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "UV Fixer Ref Plane",
      "Id": "ee96b44246ce480c8ef581a0e45f9fc5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4ac64b4fd6f54be4b2be1719c90ab3b4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "6812aa54ede54617ba5b46eaaf3b8e8d",
      "Inputs": [
        {
          "Id": "396bf832207946eeba49ca4e94e533d5",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b5c2bf7738c9440ca26fcd2b44593346",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fdf6da70844a4a21820f6071b21a3a97",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "CoreNodeModels.Sequence, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1bb4b380edf94394a0a5037460d8ff76",
      "Inputs": [
        {
          "Id": "cf155a6fbef34e0c9ee8db23435dad55",
          "Name": "start",
          "Description": "Number or letter to start the sequence at\r\nDefault value: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3aacf9205c56465ea6bf76b5e6f95768",
          "Name": "amount",
          "Description": "Amount of numbers in the sequence\r\nDefault value: 10",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04bbfff35eb74f5dac3fb47391a79e65",
          "Name": "step",
          "Description": "Space between numbers or letters\r\nDefault value: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c7283963c8d4de98dba2a1eb6886274",
          "Name": "seq",
          "Description": "New sequence",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Creates a sequence of numbers."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 6.0,
      "Id": "67c662494f584e71b33f8c93fc25500f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a367300c0c2e4d089184bbd0453175f5",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.RemapRange@double[],double,double",
      "Id": "1364886137f74b09af7ec0e2df01a9b2",
      "Inputs": [
        {
          "Id": "e8b45f8079204e39b417242c70d5710c",
          "Name": "numbers",
          "Description": "List of numbers to adjust range of.\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8bd259eda6b4ac592788f48d57257ee",
          "Name": "newMin",
          "Description": "New minimum of the range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c5fbdb0983c4e41b14e993166b39763",
          "Name": "newMax",
          "Description": "New maximum of the range\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "791167eb778b48d0881aea8e9dce358a",
          "Name": "list",
          "Description": "List remapped to new range.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adjusts the range of a list of numbers while preserving the distribution ratio.\n\nMath.RemapRange (numbers: double[], newMin: double = 0, newMax: double = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "500225e8dc2b456ba3f95359a29402ef",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "82f6b6daa3b349c6a1bf8bf02fdb4609",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d97719478c04949a10e44a02b041327",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "c61fcc59cfbc4af4bc2dd3079ac08acd",
      "Inputs": [
        {
          "Id": "2371631d38fb42fcbcc60e29a0f057a7",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e29b6dfeabe9409db0299c7ae83b86a0",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "747c8880548b4168b0fb40a1f03f0da0",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "34484234ef2b45288515e919e3e3d87a",
      "Inputs": [
        {
          "Id": "767b0839ec0f43c494e0588c6ca103e5",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "356f50d51d574d66879d63b3948af8cf",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b38e1bf214f44eb886690d97146d68bc",
      "Inputs": [
        {
          "Id": "c0b0968eff034ccbb75ba8ff6c3742c2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "448e5206ef834f5db969cc993cb6a123",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee1d7abd2f1145a78344b65d0d56ba6c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "05702df1-2b09-4fc7-a578-83290d1f9291",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8d17ca3b20834921a5a837f5fd14d799",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0a40a335629b4f8789934b6ed5385f88",
          "Name": "VAROut",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Debug Python"
    }
  ],
  "Connectors": [
    {
      "Start": "c426fb4e125643f09ca93b593f640dfa",
      "End": "6c4d7b4d3c90481b8a94cbe0662f52e5",
      "Id": "d02cdb7e5c904eed81b0cd902103e1e4",
      "IsHidden": "False"
    },
    {
      "Start": "da98cdf8a3a9482f81a1c5818f7b0ef3",
      "End": "8e118f3f0dc046db945360a86b5cc28f",
      "Id": "e4c56cd4733d4b6d862bba25cea202ed",
      "IsHidden": "False"
    },
    {
      "Start": "275db3f8cc9e44e8a5094cf0be93c570",
      "End": "6a0237217e60474bac9bebf836ce7ceb",
      "Id": "12eb7047856d40c08a3074c35bb9b9fa",
      "IsHidden": "False"
    },
    {
      "Start": "33f252a13098457e98390e6e7b58998f",
      "End": "0cc72e4adbfd4d1c94400f747435de92",
      "Id": "43b66d1b37174190bbe8ffb4e1d60c92",
      "IsHidden": "False"
    },
    {
      "Start": "2d35927f5d3a4a3787d80b5346129bf2",
      "End": "396bf832207946eeba49ca4e94e533d5",
      "Id": "eb2031d0da3f48468931d31d47d52b6a",
      "IsHidden": "False"
    },
    {
      "Start": "2d35927f5d3a4a3787d80b5346129bf2",
      "End": "767b0839ec0f43c494e0588c6ca103e5",
      "Id": "d031e35b5ff14d0b96a990927a45e0d7",
      "IsHidden": "False"
    },
    {
      "Start": "8e7e61a143ab4a929b3eed8781feff35",
      "End": "5a30c7f71b324cedb8147f8930de16a9",
      "Id": "8e82bd32bc26464ea5870f3eaf04e6f6",
      "IsHidden": "False"
    },
    {
      "Start": "542f3074c2be4c5cbb02dafbbce11e80",
      "End": "a9d59bca26ef4e7db470310993825a4d",
      "Id": "f281899e08bc4521886c3b7c5de50c25",
      "IsHidden": "False"
    },
    {
      "Start": "dcb9474c784e4bb2be2dc1e61faf8457",
      "End": "0111d83ea99946bc85edfc8b6df8bf75",
      "Id": "18614f9565574555b9f4a470eaac81c2",
      "IsHidden": "False"
    },
    {
      "Start": "b823d40caa9a485b9cba65ab4dd69c1b",
      "End": "163f477322364a5c9f078b49158785a4",
      "Id": "b48aa041246245c388007cc2acbd1c63",
      "IsHidden": "False"
    },
    {
      "Start": "6eccd3b9b5a0413d862d2f8bb9093e1b",
      "End": "f43f6bd0f47b4a4887f197bb9086fda9",
      "Id": "bfd10180faf14b26bfdb7dc6d75159d7",
      "IsHidden": "False"
    },
    {
      "Start": "867be6222b9047fc9f32f8c10f1d841f",
      "End": "9a55045c6b0045eba9ea49f8830a9321",
      "Id": "454601e12e4c4fd4aa728c6643949ce3",
      "IsHidden": "False"
    },
    {
      "Start": "4ac64b4fd6f54be4b2be1719c90ab3b4",
      "End": "7ab6e4c6b300455bb658e8c1319b99a9",
      "Id": "ad93f2d1bf174d1f8c2f74c94af9702a",
      "IsHidden": "False"
    },
    {
      "Start": "fdf6da70844a4a21820f6071b21a3a97",
      "End": "2371631d38fb42fcbcc60e29a0f057a7",
      "Id": "0e0f290d0097459a9ba7e8549ee5dc23",
      "IsHidden": "False"
    },
    {
      "Start": "7c7283963c8d4de98dba2a1eb6886274",
      "End": "e8b45f8079204e39b417242c70d5710c",
      "Id": "273f816d5925492e8299126ef6a88819",
      "IsHidden": "False"
    },
    {
      "Start": "a367300c0c2e4d089184bbd0453175f5",
      "End": "3aacf9205c56465ea6bf76b5e6f95768",
      "Id": "7c9a0be70fb04696a29e0ea90351a21c",
      "IsHidden": "False"
    },
    {
      "Start": "791167eb778b48d0881aea8e9dce358a",
      "End": "b5c2bf7738c9440ca26fcd2b44593346",
      "Id": "df374672886245eca4b771cb140c543a",
      "IsHidden": "False"
    },
    {
      "Start": "82f6b6daa3b349c6a1bf8bf02fdb4609",
      "End": "e8bd259eda6b4ac592788f48d57257ee",
      "Id": "9fa26757fda44d818403e87be3c940fe",
      "IsHidden": "False"
    },
    {
      "Start": "6d97719478c04949a10e44a02b041327",
      "End": "8c5fbdb0983c4e41b14e993166b39763",
      "Id": "16c40e9ee4e74f3ca9cfefdb144774a6",
      "IsHidden": "False"
    },
    {
      "Start": "747c8880548b4168b0fb40a1f03f0da0",
      "End": "43fe1cc795cd4bfdbabdc25e82db73dd",
      "Id": "497658cc98f84f5da8db26d1c90434fa",
      "IsHidden": "False"
    },
    {
      "Start": "747c8880548b4168b0fb40a1f03f0da0",
      "End": "c0b0968eff034ccbb75ba8ff6c3742c2",
      "Id": "06c421a144ea408aa6e6462d5ed516f8",
      "IsHidden": "False"
    },
    {
      "Start": "356f50d51d574d66879d63b3948af8cf",
      "End": "e29b6dfeabe9409db0299c7ae83b86a0",
      "Id": "4bb2e0657bac47ee9213e92af217b674",
      "IsHidden": "False"
    },
    {
      "Start": "ee1d7abd2f1145a78344b65d0d56ba6c",
      "End": "3fbb5dced8ff41a7b5a3e3f3c5c7ff5d",
      "Id": "46967e01ac8e4c0597125f05c8cb710d",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "a61da5b4-3730-47d8-be9f-f243b36340b2",
    "05702df1-2b09-4fc7-a578-83290d1f9291"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Synthesize toolkit",
      "Version": "12.5.1",
      "ReferenceType": "Package",
      "Nodes": [
        "9867c90605f34dc5b8c6c5d41349bf1b",
        "8d17ca3b20834921a5a837f5fd14d799"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "karam@aecedx.com",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 111.22755432128906,
      "EyeY": 60.619449615478516,
      "EyeZ": -12.735301971435547,
      "LookX": -18.394920349121094,
      "LookY": -59.87080383300781,
      "LookZ": -28.641342163085938,
      "UpX": -0.40159282088279724,
      "UpY": 0.6691306233406067,
      "UpZ": -0.6252898573875427
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "CurveByPoints.ByReferencePoints",
        "ShowGeometry": true,
        "Id": "a284b7487695450b90b394e515c5ae70",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4216.30412935442,
        "Y": 1093.008872888
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "3a317d2a6e1341fa911fba5a383c1dd8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3609.37136708947,
        "Y": 1021.7071291194
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "5e25bb191424490abd4f9fc814b1cdbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3920.06166940722,
        "Y": 922.631554164837
      },
      {
        "Name": "Reference Plane Perpendicular On Face",
        "ShowGeometry": true,
        "Id": "9867c90605f34dc5b8c6c5d41349bf1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3154.91686008555,
        "Y": 673.714725237974
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3008d61a470f44dcbbe62f937c49ab3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4015.52756029511,
        "Y": 1213.14369982579
      },
      {
        "Name": "Element.Curves",
        "ShowGeometry": true,
        "Id": "dd705be5e4c14d359160936c8320343f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 404.106804765366,
        "Y": 975.085437867657
      },
      {
        "Name": "Plane.ByBestFitThroughPoints",
        "ShowGeometry": true,
        "Id": "a2bb696cabb2459bae8139867f6dc9d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2088.28923360345,
        "Y": 1107.02800668137
      },
      {
        "Name": "Rectangle.ByWidthLength",
        "ShowGeometry": true,
        "Id": "6d78d20da37c41b7a16cfa24b7936b05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2363.9452610683,
        "Y": 1013.52363721677
      },
      {
        "Name": "Surface.ByPatch",
        "ShowGeometry": true,
        "Id": "526afefcbab049789bd07231d8dda4e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2607.93222204648,
        "Y": 944.408148111039
      },
      {
        "Name": "01.Select UV Fixer",
        "ShowGeometry": true,
        "Id": "5bf6e440e0d346249c245ad51b4a867f",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -15.0684351764075,
        "Y": 963.825884214718
      },
      {
        "Name": "02.Flip Reference Planes Side",
        "ShowGeometry": true,
        "Id": "5868526acfb84d819375217b7ac45dc3",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4.95711778945451,
        "Y": 1087.48836010701
      },
      {
        "Name": "03.Reference Planes Offset",
        "ShowGeometry": true,
        "Id": "1da27744612b4842bfec52bd7cdeaf41",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4.9973171875464,
        "Y": 1148.99796899453
      },
      {
        "Name": "04.Reference Planes Name Prefix",
        "ShowGeometry": true,
        "Id": "ee96b44246ce480c8ef581a0e45f9fc5",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -20.9438227345671,
        "Y": 1207.90707814531
      },
      {
        "Name": "Curve.PointAtParameter",
        "ShowGeometry": true,
        "Id": "6812aa54ede54617ba5b46eaaf3b8e8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1159.26579436892,
        "Y": 1438.44743605193
      },
      {
        "Name": "Sequence",
        "ShowGeometry": true,
        "Id": "1bb4b380edf94394a0a5037460d8ff76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 381.279664378042,
        "Y": 1441.53043522296
      },
      {
        "Name": "05.Number of Points ?",
        "ShowGeometry": true,
        "Id": "67c662494f584e71b33f8c93fc25500f",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 197.742269476151,
        "Y": 1457.6156451586
      },
      {
        "Name": "Math.RemapRange",
        "ShowGeometry": true,
        "Id": "1364886137f74b09af7ec0e2df01a9b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 661.792214497733,
        "Y": 1470.01223063221
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "500225e8dc2b456ba3f95359a29402ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 473.87281798209,
        "Y": 1580.46640388602
      },
      {
        "Name": "List.Chop",
        "ShowGeometry": true,
        "Id": "c61fcc59cfbc4af4bc2dd3079ac08acd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1620.44260793687,
        "Y": 1161.35489750281
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "34484234ef2b45288515e919e3e3d87a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1192.66558053466,
        "Y": 1287.94375811379
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "b38e1bf214f44eb886690d97146d68bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1875.75263344646,
        "Y": 1131.57659350613
      },
      {
        "Name": "Debug Python",
        "ShowGeometry": false,
        "Id": "8d17ca3b20834921a5a837f5fd14d799",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 694.609148224469,
        "Y": 634.025304641091
      }
    ],
    "Annotations": [
      {
        "Id": "a0b0a67e94ca4cefad2c71cae8196424",
        "Title": "Input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5bf6e440e0d346249c245ad51b4a867f",
          "5868526acfb84d819375217b7ac45dc3",
          "1da27744612b4842bfec52bd7cdeaf41",
          "ee96b44246ce480c8ef581a0e45f9fc5"
        ],
        "HasNestedGroups": false,
        "Left": -30.9438227345671,
        "Top": 897.825884214718,
        "Width": 340.8,
        "Height": 441.88119393059185,
        "FontSize": 30.0,
        "InitialTop": 963.825884214718,
        "InitialHeight": 389.0811939305919,
        "TextblockHeight": 56.0,
        "Background": "#FFD8D8D8"
      }
    ],
    "X": 107.03776768277896,
    "Y": -868.1296207938219,
    "Zoom": 1.04755827246454
  }
}
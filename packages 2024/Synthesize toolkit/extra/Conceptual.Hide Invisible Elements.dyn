{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Conceptual.Hide Invisible Elements",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "1f819040377f4b38a6ca6ebe58eb07a0",
      "Name": "01.Subcategory to Move Invisible Masses Into",
      "Type": "string",
      "Value": "Dynamo Hidden Masses",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "841fc5edabbd4a359d2d4c6b1e70c3b3",
      "Name": "02.Mode: False = Hidden | True = Visible",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\nclr.AddReference(\"RevitAPIUI\")\nfrom Autodesk.Revit.UI import TaskDialog\n\ndoc = DocumentManager.Instance.CurrentDBDocument\n\ndef changesubcat(doc,togolist,subcategory,hideit):\n\tif doc.IsFamilyDocument == True and subcategory != \"\" and subcategory != None:\n\t\ttry:\t\n\t\t\tsubcat1 = subcategory\n\t\t\tcurrent_fam_cat = doc.OwnerFamily.FamilyCategory\n\t\t\tsub_fec = current_fam_cat.SubCategories\n\t\t\tsub_cat = False\n\t\t\tfor sub in sub_fec:\n\t\t\t\tif sub.Name.lower() == subcat1.lower():\n\t\t\t\t\tsub_cat = sub\n\t\t\t\t\tbreak\n\t\t\tif sub_cat == False:\n\t\t\t\tnewsubcat = doc.Settings.Categories.NewSubcategory(current_fam_cat, subcat1)\n\t\t\t\tsub_cat = newsubcat\n\t\t\tfor s2 in togolist:\n\t\t\t\ttry:\n\t\t\t\t\ts2.Subcategory = sub_cat\n\t\t\t\texcept:\n\t\t\t\t\tpass\n\t\t\tdoc.ActiveView.SetCategoryHidden(sub_cat.Id,hideit)\n\t\texcept: pass\n\treturn \"Done\"\n\nsubcategory = IN[0]\nhideit = IN[1]\n\nif hideit:\n\thideit = False\nelse:\n\thideit = True\n\ntohide = []\n\nisgood = True\n\nif doc.IsFamilyDocument == False:\n\tisgood = False\n\ttitle = \"AECedx - Karam\"\n\tTaskDialog.Show(title, \"Works In Conceptual Mass Only\")\n\tOUT = \"Nothing to Do\"\nelse:\n\tif doc.OwnerFamily.FamilyCategory.Name != \"Mass\":\n\t\tisgood =False\n\t\ttitle = \"AECedx - Karam\"\n\t\tTaskDialog.Show(title, \"Works In Conceptual Mass Only\")\n\tOUT = \"Nothing to Do\"\nif isgood:\n\tsub_fec = doc.OwnerFamily.FamilyCategory.SubCategories\n\tfor sub in sub_fec:\n\t\tif sub.Name.lower() == \"form\":\n\t\t\tdefaultsubcat = sub.Id\n\t\t\tbreak\n\t\n\tTransactionManager.Instance.EnsureInTransaction(doc)\n\tcollector = FilteredElementCollector(doc).WhereElementIsNotElementType().ToElements();\n\tfor c in collector:\n\t\tparam = c.LookupParameter(\"Visible\")\n\t\tif param != None:\n\t\t\tif param.AsInteger() == 0:\n\t\t\t\ttohide.append(c)\n\t\t\telse:\n\t\t\t\tcurrentsubparam = c.LookupParameter(\"Subcategory\")\n\t\t\t\tif currentsubparam != None:\n\t\t\t\t\ttry:\n\t\t\t\t\t\tcurrentsub = doc.GetElement(currentsubparam.AsElementId()).Name == subcategory\n\t\t\t\t\t\tcurrentsubparam.Set(defaultsubcat)\n\t\t\t\t\texcept:\n\t\t\t\t\t\tpass\n\tchangesubcat(doc,tohide,subcategory,hideit)\n\tTransactionManager.Instance.TransactionTaskDone()\n\t\n\tOUT = tohide",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "6e7c27b0659943708c75c2e55c009c28",
      "Inputs": [
        {
          "Id": "27dbc8eb1ea044faa1816ab8e25f6089",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f263e12888547e4a441f1bde26d2f9a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "146c04cb73664008aae58bb9028b7791",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Dynamo Hidden Masses",
      "Id": "1f819040377f4b38a6ca6ebe58eb07a0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "859a8309607b42a2ba8f70369198d025",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "841fc5edabbd4a359d2d4c6b1e70c3b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e4e700547e05455b93033d8773c8579d",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "e3b15dcf-8a04-4048-81bc-0e3c0480d780",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "c39fea23f794478cb8c745d7cc1af321",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9e2ffbcd6a584d53a8fe482b9d88b8ce",
          "Name": "VAROut",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Debug Python"
    }
  ],
  "Connectors": [
    {
      "Start": "859a8309607b42a2ba8f70369198d025",
      "End": "27dbc8eb1ea044faa1816ab8e25f6089",
      "Id": "f85f135ff13c40ac8a962290c7ec01cc",
      "IsHidden": "False"
    },
    {
      "Start": "e4e700547e05455b93033d8773c8579d",
      "End": "8f263e12888547e4a441f1bde26d2f9a",
      "Id": "1c94836dd04042bbbe0f2b1c8553fef3",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "e3b15dcf-8a04-4048-81bc-0e3c0480d780"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Synthesize toolkit",
      "Version": "12.5.1",
      "ReferenceType": "Package",
      "Nodes": [
        "c39fea23f794478cb8c745d7cc1af321"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "karam@aecedx.com",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "6e7c27b0659943708c75c2e55c009c28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 334.242147801966,
        "Y": 77.1239312232592
      },
      {
        "Name": "01.Subcategory to Move Invisible Masses Into",
        "ShowGeometry": true,
        "Id": "1f819040377f4b38a6ca6ebe58eb07a0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -19.8922060764984,
        "Y": 100.607316530866
      },
      {
        "Name": "02.Mode: False = Hidden | True = Visible",
        "ShowGeometry": true,
        "Id": "841fc5edabbd4a359d2d4c6b1e70c3b3",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -11.7181031160153,
        "Y": 172.021371598297
      },
      {
        "Name": "Debug Python No Message",
        "ShowGeometry": true,
        "Id": "c39fea23f794478cb8c745d7cc1af321",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 343.132543428775,
        "Y": 249.758731565902
      }
    ],
    "Annotations": [
      {
        "Id": "9e539ee1382943c7ac7693b483b609a8",
        "Title": "Input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1f819040377f4b38a6ca6ebe58eb07a0",
          "841fc5edabbd4a359d2d4c6b1e70c3b3"
        ],
        "HasNestedGroups": false,
        "Left": -29.8922060764984,
        "Top": 34.607316530866,
        "Width": 439.2,
        "Height": 269.214055067431,
        "FontSize": 30.0,
        "InitialTop": 100.607316530866,
        "InitialHeight": 216.41405506743104,
        "TextblockHeight": 56.0,
        "Background": "#FFD8D8D8"
      }
    ],
    "X": 62.23220961855809,
    "Y": 61.268622730992696,
    "Zoom": 1.13758205229474
  }
}
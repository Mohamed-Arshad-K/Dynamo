{
  "Uuid": "28516fa0-9953-4926-8679-bfd3c449d55d",
  "IsCustomNode": true,
  "Category": "Synthesize.Automate.Geometry",
  "Description": "Fractle Tree Lines",
  "Name": "Fractle Tree Lines",
  "ElementResolver": {
    "ResolutionMap": {
      "Autodesk.DesignScript.Geometry": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "Line": {
        "Key": "Autodesk.DesignScript.Geometry.Line",
        "Value": "ProtoGeometry.dll"
      },
      "Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      },
      "Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "fefaefe2db414ab3b3c1bba55601e476",
      "Inputs": [
        {
          "Id": "8f39935a8dc0451084f9dcc6b6fe6079",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c884a8dc8a4844b6b79ba26cfe321541",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ce162fe72d64b6e8056d2044a5bf5ca",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "b47a9d54b7ee4e799f5c35647c6b7597",
      "Inputs": [
        {
          "Id": "d7c53aceefa84443b712cdbeb39e8a11",
          "Name": "comb",
          "Description": "Combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71f238c3d8be4714b14c89fe6a293f25",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02cde88955ad446c9319654ea3db0af8",
          "Name": "list2",
          "Description": "List #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2e455f4e5074a4f9b0ad788c80a7430",
          "Name": "combined",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "5b847bbdb349411888dfc0646b00490a",
      "Inputs": [
        {
          "Id": "ba05b067ead04c7cb544e789a4ee95da",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b7bd6ccb8eaa45f3a59da93021cd1e0e",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3179516c1434658804a9fe65593956f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "c8b42ad538c941419e77453cfca56f1c",
      "Inputs": [
        {
          "Id": "107d71926d4d4b059fcbfb21728b546d",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8545ef3ed33943f288e090454bdfe269",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54421509aac64ce69e40bd59e166d396",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "a61767c281f549859f0272995175e181",
      "Inputs": [
        {
          "Id": "8747080b1ad846f2a6e56c66d18a1b96",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a4c7acb666174c87bdb308da9a885205",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "73af94d8eeee4267b88c7b90a4a567a5",
      "Inputs": [
        {
          "Id": "115db4c7d23948c08b0bfb2b4b9b37d5",
          "Name": "x",
          "Description": "x value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "edbb2d9f1ef74e92bc05bfa69d4f1585",
          "Name": "y",
          "Description": "y value.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e5d3de5565447efa6e40995d8f310ec",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides x by y.\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "a9a036d8eca54f61bf0d604a2dd0a404",
      "Inputs": [
        {
          "Id": "d083f481ce1141ff930cc5efb68a514b",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5223a8727a1944088154c47a83863cfb",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "c933c34b61b248698db42157a0469b37",
      "Inputs": [
        {
          "Id": "c3ea1aaf8038412d9383cee4f1877828",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e50a7012374f40b9b9c8cef35029bd39",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Created By Karam Baki : karam@aecedx.com\n# Enable Python support and load DesignScript library\n# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\n\n# EXTENSION Enable ToDSType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Enable Revit Elements\nfrom Revit.Elements import *\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Enable Revit API\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\n\n# Enable DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Enable ICollection List Translate\nclr.AddReference(\"System\")\nimport System.Collections.Generic\nfrom System.Collections.Generic import List\n\nimport sys\nsys.path.append(r'C:\\Program Files (x86)\\IronPython 2.7\\DLLs')\nsys.path.append(r'C:\\Program Files (x86)\\IronPython 2.7\\Lib')\n\nimport random\n\ndataEnteringNode = IN\n# Use UnwrapElement(IN[0]) When Translating From Dynamo to Revit\ncurves=UnwrapElement(IN[0])\nscale=UnwrapElement(IN[1])\ndegrees=UnwrapElement(IN[2])\nrepetition=UnwrapElement(IN[3])\nrandomness=UnwrapElement(IN[4])\nrandommin = randomness[0]\nrandommax= randomness[1]\n# Choose The Current Document\ndoc = DocumentManager.Instance.CurrentDBDocument\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\ndef flatten(x):\n    result = []\n    for el in x:\n        if hasattr(el, \"__iter__\") and not isinstance(el, basestring):\n            result.extend(flatten(el))\n        else:\n            result.append(el)\n    return result\n\ndef tree(curve, degrees, scaleing):\n\tresult = []\n\tfor each in curve:\n\t\ttmplist = []\n\t\tfor e in degrees:\n\t\t\trandomdegree = (random.uniform(randommin,randommax)*e)\n\t\t\tendpoint = each.EndPoint\n\t\t\tvector_to_rot = dg.Vector.ByTwoPoints(each.StartPoint,endpoint)\n\t\t\trotvec = dg.Vector.Rotate(vector_to_rot,dg.Vector.YAxis(),randomdegree)\n\t\t\tscaled = each.Length * scaleing\n\t\t\trandomscaling = (random.uniform(randommin,randommax)*scaled)\n\t\t\tline = dg.Line.ByStartPointDirectionLength(endpoint,rotvec,randomscaling)\n\t\t\ttmplist.append(line)\n\t\tresult.append(tmplist)\n\t\tresult = flatten(result)\n\treturn result\n\nfinalresult = []\nfinalresult.append(tree(curves,degrees,scale))\n\nwhile repetition != 0:\n\ttakecurve = finalresult[-1]\n\tnewlines = tree(takecurve,degrees,scale)\n\tfinalresult.append(newlines)\n\trepetition = repetition - 1\n\n# Assign your output to the OUT variable.\nOUT = finalresult",
      "VariableInputPorts": true,
      "Id": "f5c36bfab97c4ebb91ab63a7dd2fa246",
      "Inputs": [
        {
          "Id": "0feff69ca0bf4787a2425bc73a9092c1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee489d3733a140a5bd6c17c294747167",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "993dfa77dc394e3090db39e32089790f",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5f3b3e3e21a451d9fd3507386e6dabe",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "726026a533ba4ef58a051f2c2f8be032",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94cb190893724daa960fd4d851f3de20",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARInitialCurves",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "b340ef64c12f4521a068e88027a204f8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34f0b5fca00f4005be78b3b768fe3075",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARBushesScale",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "6b6f15966dd94f6a90210af40e8250cd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c8da7c18ec2a4ea880aaceeaad61080e",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARcombined",
      "Id": "10b0a90985584c58bedea2916dfc583d",
      "Inputs": [
        {
          "Id": "3e71ec4623fb45479f18f81c2ed6e8a1",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "2b0f57d65d3c44f5895cf621ef460ed2",
      "Inputs": [
        {
          "Id": "50ca689c370d45199f32b819de01b5be",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d0e16e19e53404b99f4b52c2e644817",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84450a51ee074424b9d8fd82b27a055b",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "a45cf0ac76ad412893f6dc80a1784a70",
      "Inputs": [
        {
          "Id": "0a64b8331030446aac5094aee13d40bf",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "205e3464f19e4942a396cfb7c90c03a8",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "842ebec150ea4ecba5d920575e16fd39",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARAngleMin",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "f1cc97dab072411ca3c7d730708e604a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "292ff364f175419094e6780622268995",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARAngleMax",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "dc3737868ebb43548c8bcad3b46e5b8d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cda10986d93f47cba43c53836572f62b",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARRepetition",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "40047cd877014143857728ac9b6720a6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "00bd61079f9942c1b6620e10575985a4",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARRandomnessMin",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "fd0221752f344b6a9fb66a29d27e7b88",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f5402f2dcad6443bb8ac446b9c9facd7",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARRandomnessMax",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "470b701713064b4a81405c66b3672083",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "73d1b9c23e2443d2b3bf1fdf49246aef",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "5ce162fe72d64b6e8056d2044a5bf5ca",
      "End": "d7c53aceefa84443b712cdbeb39e8a11",
      "Id": "a1c9ba0cfaa84b79b33b8117c9aab00e"
    },
    {
      "Start": "f2e455f4e5074a4f9b0ad788c80a7430",
      "End": "3e71ec4623fb45479f18f81c2ed6e8a1",
      "Id": "a6d7c268763149c2ac30b662114f6687"
    },
    {
      "Start": "b3179516c1434658804a9fe65593956f",
      "End": "02cde88955ad446c9319654ea3db0af8",
      "Id": "7927dbabce534467a6136ad84a6133c7"
    },
    {
      "Start": "54421509aac64ce69e40bd59e166d396",
      "End": "8747080b1ad846f2a6e56c66d18a1b96",
      "Id": "a89792c081784c9ba37ecc6748349f46"
    },
    {
      "Start": "a4c7acb666174c87bdb308da9a885205",
      "End": "ba05b067ead04c7cb544e789a4ee95da",
      "Id": "150ec1adb0804879ab8ee79ec8fdaa3d"
    },
    {
      "Start": "7e5d3de5565447efa6e40995d8f310ec",
      "End": "8545ef3ed33943f288e090454bdfe269",
      "Id": "16814401d1d341ef922cfebb36ffa894"
    },
    {
      "Start": "5223a8727a1944088154c47a83863cfb",
      "End": "115db4c7d23948c08b0bfb2b4b9b37d5",
      "Id": "ba8fdba48e304b3cbc1fba674783bed7"
    },
    {
      "Start": "e50a7012374f40b9b9c8cef35029bd39",
      "End": "edbb2d9f1ef74e92bc05bfa69d4f1585",
      "Id": "c50a0ab0f24c400ea9eddb9b3fb5b50a"
    },
    {
      "Start": "94cb190893724daa960fd4d851f3de20",
      "End": "d083f481ce1141ff930cc5efb68a514b",
      "Id": "9b58dd4031284895951b6c47ef9003e9"
    },
    {
      "Start": "94cb190893724daa960fd4d851f3de20",
      "End": "107d71926d4d4b059fcbfb21728b546d",
      "Id": "fbdb129188174805b1a4274d867db1ac"
    },
    {
      "Start": "34f0b5fca00f4005be78b3b768fe3075",
      "End": "71f238c3d8be4714b14c89fe6a293f25",
      "Id": "f00a2827bff5473ea95a920bb09c092a"
    },
    {
      "Start": "34f0b5fca00f4005be78b3b768fe3075",
      "End": "c3ea1aaf8038412d9383cee4f1877828",
      "Id": "3727e80916a342899fd4c1c5b4748cbc"
    },
    {
      "Start": "34f0b5fca00f4005be78b3b768fe3075",
      "End": "0feff69ca0bf4787a2425bc73a9092c1",
      "Id": "d9aecf5caac54af9830e8d38fa575b6d"
    },
    {
      "Start": "c8da7c18ec2a4ea880aaceeaad61080e",
      "End": "ee489d3733a140a5bd6c17c294747167",
      "Id": "8e1a4ffe61c840eb87b36b438839aae2"
    },
    {
      "Start": "84450a51ee074424b9d8fd82b27a055b",
      "End": "993dfa77dc394e3090db39e32089790f",
      "Id": "ff5cba35a8514bff9ade8a7885e64415"
    },
    {
      "Start": "842ebec150ea4ecba5d920575e16fd39",
      "End": "726026a533ba4ef58a051f2c2f8be032",
      "Id": "30357617ab074c368630ff6d60ed07ae"
    },
    {
      "Start": "292ff364f175419094e6780622268995",
      "End": "50ca689c370d45199f32b819de01b5be",
      "Id": "d1525955a654422887f923de7d88a545"
    },
    {
      "Start": "cda10986d93f47cba43c53836572f62b",
      "End": "5d0e16e19e53404b99f4b52c2e644817",
      "Id": "b25856916a1e4cfda9025c1ff9067d14"
    },
    {
      "Start": "00bd61079f9942c1b6620e10575985a4",
      "End": "f5f3b3e3e21a451d9fd3507386e6dabe",
      "Id": "74a0d0a1f46243eaa9e66b16be862697"
    },
    {
      "Start": "f5402f2dcad6443bb8ac446b9c9facd7",
      "End": "0a64b8331030446aac5094aee13d40bf",
      "Id": "85ec5c05cfe045418db45d12b6422ef3"
    },
    {
      "Start": "73d1b9c23e2443d2b3bf1fdf49246aef",
      "End": "205e3464f19e4942a396cfb7c90c03a8",
      "Id": "97312f92e3b8409a8876bc920bb2a6fd"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 21.378005981445313,
      "EyeY": 11.578340530395508,
      "EyeZ": 53.356742858886719,
      "LookX": -7.8964529037475586,
      "LookY": -14.253307342529297,
      "LookZ": -40.209072113037109,
      "UpX": -0.022816944867372513,
      "UpY": 0.99296551942825317,
      "UpZ": -0.11618471890687943
    },
    "NodeViews": [
      {
        "Id": "fefaefe2db414ab3b3c1bba55601e476",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 2065.59347528117,
        "Y": 13.147519359463
      },
      {
        "Id": "b47a9d54b7ee4e799f5c35647c6b7597",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Combine",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 2344.67682796144,
        "Y": 105.363275281641
      },
      {
        "Id": "5b847bbdb349411888dfc0646b00490a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 1924.79154115286,
        "Y": 174.791815595536
      },
      {
        "Id": "c8b42ad538c941419e77453cfca56f1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 1075.44546469362,
        "Y": 173.217536428764
      },
      {
        "Id": "a61767c281f549859f0272995175e181",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 1523.96289750051,
        "Y": 241.620525504006
      },
      {
        "Id": "73af94d8eeee4267b88c7b90a4a567a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "/",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 783.664975451348,
        "Y": 118.142366846521
      },
      {
        "Id": "a9a036d8eca54f61bf0d604a2dd0a404",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 473.580465271529,
        "Y": 235.253850573215
      },
      {
        "Id": "c933c34b61b248698db42157a0469b37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 351.788503914329,
        "Y": 0.0
      },
      {
        "Id": "f5c36bfab97c4ebb91ab63a7dd2fa246",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 250.0,
        "Y": 166.884649138843
      },
      {
        "Id": "b340ef64c12f4521a068e88027a204f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -880.637755293616,
        "Y": 115.344235471857
      },
      {
        "Id": "6b6f15966dd94f6a90210af40e8250cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -879.453990098531,
        "Y": 225.993918596096
      },
      {
        "Id": "10b0a90985584c58bedea2916dfc583d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2583.67682796144,
        "Y": 0.0
      },
      {
        "Id": "2b0f57d65d3c44f5895cf621ef460ed2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": -156.88996366018,
        "Y": 241.100303640483
      },
      {
        "Id": "a45cf0ac76ad412893f6dc80a1784a70",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": false,
        "Excluded": false,
        "X": -79.108997365447,
        "Y": 580.964362285337
      },
      {
        "Id": "f1cc97dab072411ca3c7d730708e604a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -876.903815926136,
        "Y": 379.819179854689
      },
      {
        "Id": "dc3737868ebb43548c8bcad3b46e5b8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -870.225230970604,
        "Y": 447.954038325068
      },
      {
        "Id": "40047cd877014143857728ac9b6720a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -904.332728738505,
        "Y": 636.803527796299
      },
      {
        "Id": "fd0221752f344b6a9fb66a29d27e7b88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -910.244202975325,
        "Y": 725.324512054522
      },
      {
        "Id": "470b701713064b4a81405c66b3672083",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -928.90321918801,
        "Y": 816.165951201222
      }
    ],
    "Annotations": [],
    "X": 379.755196626963,
    "Y": 63.7061227104929,
    "Zoom": 0.443366721850649
  }
}
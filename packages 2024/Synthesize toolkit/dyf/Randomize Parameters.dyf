{
  "Uuid": "c7374c63-3d88-479c-8320-25152cdd0ab1",
  "IsCustomNode": true,
  "Category": "Synthesize.Automate.Parameter",
  "Description": "Randomize Parameters",
  "Name": "Randomize Parameters",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "ef1b1fa558b64f26b7509d66e15d0a0d",
      "Inputs": [
        {
          "Id": "f2fa85abb9854a75b8fdfc5e7ea4048b",
          "Name": "list",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5546c515ea344f48f72a7d3e72ec336",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data such that non-trailing nulls may not be filtered out\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "360ea76a51914b46804253a7fb944998",
          "Name": "var[]..[]",
          "Description": "A list cleaned of nulls and empty lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ff095490483e4b009b8735d2064691f4",
      "Inputs": [
        {
          "Id": "4885bc4d3e454e4ebb646b0eb7fa870a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66fe7d27b88b4787b66cb0219769180a",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0370cc7d4c0d4d878252303d43f2d52a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "627c4bf4b33c4dd3af279e4f0589c194",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1bd29f9ae65d46fb89af08c60a21953e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARAdditive",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "6a56e9c5e6a04e0c84ea17dbbc68a017",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b697eeb4b5b64a6a9648f28d37208e3d",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARRounding",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "cb29f6af17e542f48b1f95a03578f15b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e7522f97b5c6442697efdf32e8f37afd",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARProceed",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "10212621d7b24f0cbf73647542fe01a6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3bb7bd5407c94bae8fa22ce7ba2edd08",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARIntegernumbersofRandomizing",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "2aa0a577600f408dbddb073070ae5b05",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fd7d0d5613d34d4f810a2bf80137f83b",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARMinimumValue",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "60785f3cf7f943469a59a08c91ea2cea",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b5503fda5c0c4a4fbe80fb64975eb110",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARMaximumValue",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "9ec11081499e4800a921e90bcb70fd85",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d15e7ac93c544eb8a09e9b92eb72180d",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARListofParameterstoRandomize",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "dba67d51184848ffaa5153fa9a958f6d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca56cc49ce0b49caae69b8845c009860",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARElementstoWorkon",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "71675f7d02fe46008a976460cc64d057",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4c6d13ef7cbc4245875b7f9544106925",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARValuesGenerated",
      "Id": "e635a8fa11fd42c3889b544d9baf8128",
      "Inputs": [
        {
          "Id": "42a9decb54c54684a771256b381d2283",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "120023e2bd684b04b4defc0966f9f68d",
      "Inputs": [
        {
          "Id": "a90a5d0d47a84015bd92f72d02cd68f8",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aef929f77c114f29bb6ef19d04616c1e",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "597def74-6997-4484-bb18-67a97819c8bd",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "4a5fe7b642614ceb9b24741100a46b88",
      "Inputs": [
        {
          "Id": "882fcc9d298849c19e259e945e129af4",
          "Name": "VARtest",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f18578f2c534b1ab48507dfaffa6f76",
          "Name": "VARtrue",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b499b080baa4f07ac316f598e2aa9db",
          "Name": "VARfalse",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a854ced0af204942be4a74521d3d37cf",
          "Name": "VARresult",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "A (hopefully) more robust implementation of ScopeIf. Tests a single boolean and returns a value accordingly."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARIsTypeParameters",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "58f18aecbae748b591a9a0c3e5156c8a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "41fb766792f045c68c765c052cd9ac2f",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Created By Karam Baki : karam@aecedx.com\n# Enable Python support and load DesignScript library\n# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\n\n# EXTENSION Enable ToDSType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Enable Revit Elements\nfrom Revit.Elements import *\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Enable Revit API\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\n\n# Enable DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Enable ICollection List Translate\nclr.AddReference(\"System\")\nimport System.Collections.Generic\nfrom System.Collections.Generic import List\n\nimport sys\nsys.path.append(r'C:\\Program Files (x86)\\IronPython 2.7\\DLLs')\nsys.path.append(r'C:\\Program Files (x86)\\IronPython 2.7\\Lib')\nimport random\nimport math\n\ndef tolist(obj1):\n\tif hasattr(obj1,'__iter__'): return obj1\n\telse: return [obj1]\n\t\ndataEnteringNode = IN\n# Use UnwrapElement(IN[0]) When Translating From Dynamo to Revit\nelems=UnwrapElement(tolist(IN[0]))\nparams=UnwrapElement(tolist(IN[1]))\nmin=IN[2]\nmax=IN[3]\nrounding=IN[4]\ninteger=IN[5]\nadditive=IN[6]\nproceed=IN[7]\n\nif integer == True:\n\tmin = int(math.floor(min))\n\tmax = int(math.floor(max))\n\nloweredparams = []\nfor p in params:\n\tloweredparams.append(p.lower())\n\ndef randomvalue(min,max,rounding,integer):\n\tif integer == True:\n\t\tval = random.randint(min,max)\n\telse:\n\t\tval = round(random.uniform(min, max)/rounding)*rounding\n\treturn val\n\n# Choose The Current Document\ndoc = DocumentManager.Instance.CurrentDBDocument\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\n# Create Empty List\nresult = []\nvalues = []\n\nif int(DocumentManager.Instance.CurrentUIApplication.Application.VersionNumber) < 2022:\n\toldrevit = True\nelse:\n\toldrevit = False\n\n# Start a Transaction with Current Document (doc)\nTransactionManager.Instance.EnsureInTransaction(doc)\n\nfor each in elems:\n\teachparams = each.GetOrderedParameters()\n\ttmp = []\n\tfor e in eachparams:\n\t\tpname = e.Definition.Name.lower()\n\t\tstoragetype = str(e.StorageType)\n\t\tif pname in loweredparams:\n\t\t\ttry:\n\t\t\t\tif additive == True:\n\t\t\t\t\tif storagetype == \"Integer\":\n\t\t\t\t\t\texisted = e.AsInteger()\n\t\t\t\t\t\tnewvalue = existed + (randomvalue(min,max,rounding,integer))\n\t\t\t\t\telse:\n\t\t\t\t\t\texisted = e.AsDouble()\n\t\t\t\t\t\tif oldrevit:\n\t\t\t\t\t\t\tunit_type = e.Definition.UnitType\n\t\t\t\t\t\t\tformatoptions = doc.GetUnits().GetFormatOptions(unit_type)\n\t\t\t\t\t\t\tdispunits = formatoptions.DisplayUnits\n\t\t\t\t\t\t\ttoconvert = randomvalue(min,max,rounding,integer)\n\t\t\t\t\t\t\tadded = UnitUtils.ConvertToInternalUnits(toconvert,dispunits)\n\t\t\t\t\t\t\tnewvalue = existed + added\n\t\t\t\t\t\t\treport = toconvert + UnitUtils.ConvertFromInternalUnits(existed,dispunits)\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tunit_type = e.Definition.GetDataType()\n\t\t\t\t\t\t\ttoconvert = randomvalue(min,max,rounding,integer)\n\t\t\t\t\t\t\tadded = UnitUtils.ConvertToInternalUnits(toconvert,doc.GetUnits().GetFormatOptions(unit_type).GetUnitTypeId())\n\t\t\t\t\t\t\tnewvalue = existed + added\n\t\t\t\t\t\t\treport = toconvert + UnitUtils.ConvertFromInternalUnits(existed,doc.GetUnits().GetFormatOptions(unit_type).GetUnitTypeId())\n\t\t\t\t\tif proceed == True:\n\t\t\t\t\t\tresult.append(e.Set(newvalue))\n\t\t\t\t\ttmp.append(report)\n\t\t\t\telse:\n\t\t\t\t\tif storagetype == \"Integer\":\n\t\t\t\t\t\tnewvalue = randomvalue(min,max,rounding,integer)\n\t\t\t\t\telse:\n\t\t\t\t\t\tif oldrevit:\n\t\t\t\t\t\t\tunit_type = e.Definition.UnitType\n\t\t\t\t\t\t\tformatoptions = doc.GetUnits().GetFormatOptions(unit_type)\n\t\t\t\t\t\t\tdispunits = formatoptions.DisplayUnits\n\t\t\t\t\t\t\treport = randomvalue(min,max,rounding,integer)\n\t\t\t\t\t\t\tnewvalue = UnitUtils.ConvertToInternalUnits(report,dispunits)\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tunit_type = e.Definition.GetDataType()\n\t\t\t\t\t\t\treport = randomvalue(min,max,rounding,integer)\n\t\t\t\t\t\t\tnewvalue = UnitUtils.ConvertToInternalUnits(report,doc.GetUnits().GetFormatOptions(unit_type).GetUnitTypeId())\n\t\t\t\t\tif proceed == True:\n\t\t\t\t\t\tresult.append(e.Set(newvalue))\n\t\t\t\t\tif storagetype == \"Integer\":\n\t\t\t\t\t\ttmp.append(newvalue)\n\t\t\t\t\telse:\n\t\t\t\t\t\ttmp.append(report)\n\t\t\texcept:\n\t\t\t\tresult.append(False)\n\t\t\t\ttmp.append(\"ERROR\")\n\tif len(tmp) == 1:\n\t\tvalues.append(tmp[0])\n\telif len(tmp) == 0:\n\t\tvalues.append(\"ERROR\")\n\telse:\n\t\tvalues.append(tmp)\n\n# End the Transaction with Current Document ()\nTransactionManager.Instance.TransactionTaskDone()\n\n# Assign your output to the OUT variable.\nOUT = values",
      "VariableInputPorts": true,
      "Id": "2823af58e8dc4393851253eb630ff807",
      "Inputs": [
        {
          "Id": "35de503f2dac455c9fe422314cb25daa",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ff0b43572e841af88156a9e8424cb2e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3363fe557324400694d4af76baeb5a37",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ecdc71747f5402ab4c6400ab86b25d8",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fb886e5e1124cdb8b9bbbfd1fdda626",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4707c7757c4f44f6be148fda72e6cca7",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa6926e32f604b999d75b19f1b295357",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3c7be0418734d75b08909ac04c8b3aa",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "514050489c894e4a8f37ad75ea48da14",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "a7a8d612051649ccad368a317fe6cdd1",
      "Inputs": [
        {
          "Id": "e9b823b0b41049d2bfa9eb604618fcf3",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48f1e047d16d447c926e2d5a9a45e480",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the FamilyType for this Element. Returns null if the Element cannot have a FamilyType assigned.\n\nElement.ElementType: Element"
    }
  ],
  "Connectors": [
    {
      "Start": "360ea76a51914b46804253a7fb944998",
      "End": "4885bc4d3e454e4ebb646b0eb7fa870a",
      "Id": "53e69dbd3b0a4ab68051d0f0e932c5f8"
    },
    {
      "Start": "0370cc7d4c0d4d878252303d43f2d52a",
      "End": "35de503f2dac455c9fe422314cb25daa",
      "Id": "31893419e6b44362b91c18b9b853728e"
    },
    {
      "Start": "1bd29f9ae65d46fb89af08c60a21953e",
      "End": "c5546c515ea344f48f72a7d3e72ec336",
      "Id": "86c551f79c7548a28379d03a7b70387f"
    },
    {
      "Start": "b697eeb4b5b64a6a9648f28d37208e3d",
      "End": "fa6926e32f604b999d75b19f1b295357",
      "Id": "ca705523b07849c6ada6d27da6620992"
    },
    {
      "Start": "e7522f97b5c6442697efdf32e8f37afd",
      "End": "6fb886e5e1124cdb8b9bbbfd1fdda626",
      "Id": "0157bdafb70541bc874371fe73170ea8"
    },
    {
      "Start": "3bb7bd5407c94bae8fa22ce7ba2edd08",
      "End": "f3c7be0418734d75b08909ac04c8b3aa",
      "Id": "54223665847d4cef8cea812674884b5a"
    },
    {
      "Start": "fd7d0d5613d34d4f810a2bf80137f83b",
      "End": "4707c7757c4f44f6be148fda72e6cca7",
      "Id": "22c2c31149b44342823eb25e31d964ac"
    },
    {
      "Start": "b5503fda5c0c4a4fbe80fb64975eb110",
      "End": "3363fe557324400694d4af76baeb5a37",
      "Id": "909aced1aca241be9bcc81e4d4967e85"
    },
    {
      "Start": "d15e7ac93c544eb8a09e9b92eb72180d",
      "End": "1ecdc71747f5402ab4c6400ab86b25d8",
      "Id": "cd7c219180a5441187dd1b4bfa332d16"
    },
    {
      "Start": "ca56cc49ce0b49caae69b8845c009860",
      "End": "9ff0b43572e841af88156a9e8424cb2e",
      "Id": "85e46722316e4ca3bddef1e4ea82c4b1"
    },
    {
      "Start": "4c6d13ef7cbc4245875b7f9544106925",
      "End": "5b499b080baa4f07ac316f598e2aa9db",
      "Id": "5d2d1cb18857474992b4877813786790"
    },
    {
      "Start": "4c6d13ef7cbc4245875b7f9544106925",
      "End": "e9b823b0b41049d2bfa9eb604618fcf3",
      "Id": "bf057b728bd44f6784fd7d89db94dcc3"
    },
    {
      "Start": "aef929f77c114f29bb6ef19d04616c1e",
      "End": "1f18578f2c534b1ab48507dfaffa6f76",
      "Id": "0fde8d6a2dbe46e68d7d224a3019758a"
    },
    {
      "Start": "a854ced0af204942be4a74521d3d37cf",
      "End": "f2fa85abb9854a75b8fdfc5e7ea4048b",
      "Id": "daabf88b93764f34b80e8ebd79b24c6e"
    },
    {
      "Start": "41fb766792f045c68c765c052cd9ac2f",
      "End": "882fcc9d298849c19e259e945e129af4",
      "Id": "60db6ab2734448a487173c30f7cfd00a"
    },
    {
      "Start": "514050489c894e4a8f37ad75ea48da14",
      "End": "42a9decb54c54684a771256b381d2283",
      "Id": "abe643ea20ff4be692bbc35c2917e6e3"
    },
    {
      "Start": "48f1e047d16d447c926e2d5a9a45e480",
      "End": "a90a5d0d47a84015bd92f72d02cd68f8",
      "Id": "4542956fe38641ec9fd5eadf5c85367a"
    }
  ],
  "Dependencies": [
    "597def74-6997-4484-bb18-67a97819c8bd"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Synthesize toolkit",
      "Version": "12.7.2",
      "ReferenceType": "Package",
      "Nodes": [
        "4a5fe7b642614ceb9b24741100a46b88"
      ]
    }
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.2.15696",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "List.Clean",
        "Id": "ef1b1fa558b64f26b7509d66e15d0a0d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 250.821042717816,
        "Y": 389.794656621685
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "ff095490483e4b009b8735d2064691f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 574.526149708006,
        "Y": 414.434063172254
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "627c4bf4b33c4dd3af279e4f0589c194",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 107.506272706236,
        "Y": 521.744821552057
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "6a56e9c5e6a04e0c84ea17dbbc68a017",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1487.64381683614,
        "Y": -26.6694531748258
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "cb29f6af17e542f48b1f95a03578f15b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1487.64381683614,
        "Y": 123.330546825174
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "10212621d7b24f0cbf73647542fe01a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1487.64381683614,
        "Y": 273.330546825174
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "2aa0a577600f408dbddb073070ae5b05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1487.64381683614,
        "Y": 723.330546825174
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "60785f3cf7f943469a59a08c91ea2cea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1487.64381683614,
        "Y": 873.330546825174
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "9ec11081499e4800a921e90bcb70fd85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1487.64381683614,
        "Y": 1023.33054682517
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "dba67d51184848ffaa5153fa9a958f6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1487.64381683614,
        "Y": 1473.33054682517
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "71675f7d02fe46008a976460cc64d057",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1487.64381683614,
        "Y": 1623.33054682517
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "e635a8fa11fd42c3889b544d9baf8128",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1326.2350506171,
        "Y": 516.466710010376
      },
      {
        "ShowGeometry": true,
        "Name": "List.UniqueItems",
        "Id": "120023e2bd684b04b4defc0966f9f68d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -511.701793587865,
        "Y": 590.69899820123
      },
      {
        "ShowGeometry": true,
        "Name": "CW.ScopeIf+",
        "Id": "4a5fe7b642614ceb9b24741100a46b88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -297.460270107466,
        "Y": 479.637857400461
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "58f18aecbae748b591a9a0c3e5156c8a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1454.40076580103,
        "Y": 1786.89748538149
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "2823af58e8dc4393851253eb630ff807",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 993.863895117807,
        "Y": 521.356295867895
      },
      {
        "ShowGeometry": true,
        "Name": "Element.ElementType",
        "Id": "a7a8d612051649ccad368a317fe6cdd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -827.77057539709949,
        "Y": 479.26264169617031
      }
    ],
    "Annotations": [],
    "X": -336.30758094715264,
    "Y": -197.20216681211926,
    "Zoom": 0.62384284769697351
  }
}
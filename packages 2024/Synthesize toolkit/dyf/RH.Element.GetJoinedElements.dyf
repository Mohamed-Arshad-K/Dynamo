{
  "Uuid": "2236eeda-1b57-466c-bdc0-dcd0ab209a0d",
  "IsCustomNode": true,
  "Category": "Synthesize.Packages.Rhythm.Revit.Elements.Element",
  "Description": "This will obtain the elements joined to the input element.",
  "Name": "RH.Element.GetJoinedElements",
  "ElementResolver": {
    "ResolutionMap": {
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nfrom System.Collections.Generic import *\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\n#The inputs to this node will be stored as a list in the IN variable.\r\ndataEnteringNode = IN\r\n\r\n#unwrap all elements to use with API\r\nitems = UnwrapElement(IN[0])\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n#get the joined element ids\r\ntypelist = list()\r\nfor i in items:\r\n\ttry:\r\n\t\ttypelist.append(JoinGeometryUtils.GetJoinedElements(doc,i))\r\n\texcept:\r\n\t\ttypelist.append(List())\r\n\r\n# \"End\" the transaction\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n#Assign your output to the OUT variable\r\nOUT = typelist",
      "VariableInputPorts": true,
      "Id": "b9ff6bede40642228747e16f19fb46c6",
      "Inputs": [
        {
          "Id": "c8422f6eef7a415ab0d42d66722cb496",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dfed7b83a3d2429d8907c44214cb3a5a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nitems = UnwrapElement(IN[0])\r\n\r\nelementlist = list()\r\nunmatched = list()\r\nfor item in items:\r\n\ttry: \r\n\t\telementlist.append(doc.GetElement(item).ToDSType(True))\r\n\texcept:\r\n\t\tunmatched.append(item)\r\nOUT = (elementlist, unmatched)",
      "VariableInputPorts": true,
      "Id": "8f5fdeb5f0864091bca1219aec6ddae1",
      "Inputs": [
        {
          "Id": "27bfc3968aca48fbb5507ce77ddbcf16",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9abb7f0fc3744578bdf5ed219a241c1f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.Flatten([item]);",
      "Id": "fdbf085b7e764638b6d152ba2118694e",
      "Inputs": [
        {
          "Id": "4326f8f0250e4a1faf4b0dd5b22321c6",
          "Name": "item",
          "Description": "item",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da9d10cd3a9042a7884b1f83172bb8a3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARelement",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "851edec824434a51978d201dbb2033b9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "097b24728c4345a6abbc96172ce214cf",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARjoinedElements",
      "Id": "9ef691ae816442879df59843cd08dcd3",
      "Inputs": [
        {
          "Id": "2702831b03fc4fed9aab30adf2ce2aae",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];",
      "Id": "e4c1a0fec5044585af0d8005e8d3f141",
      "Inputs": [
        {
          "Id": "4277967154b6446ca3d1eb2fbeca1444",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65e06cf0419e4ec98f451d6f34b5bf48",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f1d09ff18799458d8a57734eabe66d42",
      "Inputs": [
        {
          "Id": "27958f00e8be4a98a63111f9ee790e77",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f9dcbe189f04d61b4cb0aebe2e17f07",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7eeeb711e55441fba9b09dd57a0c1755",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "b007646a2b274d71a348cc958d35781a",
      "Inputs": [
        {
          "Id": "c3c7a5f398904daa8ff5eeb8fbd07b6f",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba590cc4b4c846d2b4f8b04b35e3b15f",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "5002b06aed50474d912ad4dc30613873",
      "Inputs": [
        {
          "Id": "699298f146174ddfba5a44da8d1249d4",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "818874acf4654ea58e20527bc8350b14",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31a4d3fd3b06419da5c37388fee6d2e5",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "dfed7b83a3d2429d8907c44214cb3a5a",
      "End": "27958f00e8be4a98a63111f9ee790e77",
      "Id": "11c64416504c46b9a3ef37f806261ac3"
    },
    {
      "Start": "dfed7b83a3d2429d8907c44214cb3a5a",
      "End": "c3c7a5f398904daa8ff5eeb8fbd07b6f",
      "Id": "bb615e2167144f758617ec548fb230ad"
    },
    {
      "Start": "9abb7f0fc3744578bdf5ed219a241c1f",
      "End": "4277967154b6446ca3d1eb2fbeca1444",
      "Id": "4bc79b296df74bcdb562521ab2cfe2e9"
    },
    {
      "Start": "da9d10cd3a9042a7884b1f83172bb8a3",
      "End": "c8422f6eef7a415ab0d42d66722cb496",
      "Id": "06d9d136bd7e4386b542689d3792232e"
    },
    {
      "Start": "097b24728c4345a6abbc96172ce214cf",
      "End": "4326f8f0250e4a1faf4b0dd5b22321c6",
      "Id": "83d2b2427a7d4b44ad45b2c00eb387ba"
    },
    {
      "Start": "65e06cf0419e4ec98f451d6f34b5bf48",
      "End": "699298f146174ddfba5a44da8d1249d4",
      "Id": "f0e10e786b77425daef03923a36d7dad"
    },
    {
      "Start": "7eeeb711e55441fba9b09dd57a0c1755",
      "End": "27bfc3968aca48fbb5507ce77ddbcf16",
      "Id": "a826374f06024f45b1e3e741b463ab1c"
    },
    {
      "Start": "ba590cc4b4c846d2b4f8b04b35e3b15f",
      "End": "818874acf4654ea58e20527bc8350b14",
      "Id": "ebe45f6aa8c246f490d57dca00f5db8f"
    },
    {
      "Start": "31a4d3fd3b06419da5c37388fee6d2e5",
      "End": "2702831b03fc4fed9aab30adf2ce2aae",
      "Id": "0bb2a11471784f26937c12d67afcb303"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "b9ff6bede40642228747e16f19fb46c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1030.9186735177,
        "Y": 540.084979949187
      },
      {
        "Id": "8f5fdeb5f0864091bca1219aec6ddae1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1503.08487439968,
        "Y": 529.789195597118
      },
      {
        "Id": "fdbf085b7e764638b6d152ba2118694e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 766.560800870552,
        "Y": 544.593329815008
      },
      {
        "Id": "851edec824434a51978d201dbb2033b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 639.686512756277,
        "Y": 535.36203718217
      },
      {
        "Id": "9ef691ae816442879df59843cd08dcd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1932.43767216912,
        "Y": 662.395388107132
      },
      {
        "Id": "e4c1a0fec5044585af0d8005e8d3f141",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1707.63848269871,
        "Y": 529.78019494015
      },
      {
        "Id": "f1d09ff18799458d8a57734eabe66d42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1233.00698707639,
        "Y": 541.340077225698
      },
      {
        "Id": "b007646a2b274d71a348cc958d35781a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1235.99600709816,
        "Y": 678.087743221392
      },
      {
        "Id": "5002b06aed50474d912ad4dc30613873",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Chop",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1765.05255095035,
        "Y": 642.966757965667
      }
    ],
    "Annotations": [
      {
        "Id": "5cd784ef9192433987220b2e496edc18",
        "Title": "borrowed from Andreas Dieckmann's awesome clockwork package :)",
        "Nodes": [
          "8f5fdeb5f0864091bca1219aec6ddae1"
        ],
        "Left": 1493.08487439968,
        "Top": 452.589195597118,
        "Width": 144.8,
        "Height": 145.0,
        "FontSize": 14.0,
        "InitialTop": 529.789195597118,
        "InitialHeight": 98.0,
        "TextblockHeight": 67.2,
        "Background": "#FFC1D676"
      }
    ],
    "X": -362.18216573105849,
    "Y": -142.6916069876267,
    "Zoom": 0.59748709481578655
  }
}
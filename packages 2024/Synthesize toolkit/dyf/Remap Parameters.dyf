{
  "Uuid": "65eeb1fb-5f0c-4054-96e6-b0fd557f7e18",
  "IsCustomNode": true,
  "Category": "Synthesize.Automate.Parameter",
  "Description": "Randomize Parameters",
  "Name": "Remap Parameters",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARProceed",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "10212621d7b24f0cbf73647542fe01a6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "097bb2eac3e24adebad1fa3be33ed471",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARListofParameterstoRemap",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "dba67d51184848ffaa5153fa9a958f6d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c1c15d8adb914c2b8ea251f8a03443c9",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARElementstoWorkon",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "71675f7d02fe46008a976460cc64d057",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0dc97a329af149049e14601bfdabc6e8",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARNumberofElements",
      "Id": "7c3757bf51d347d09b0b38b861dd9bd0",
      "Inputs": [
        {
          "Id": "f8e4cd21e5614afcb2767732edc53b93",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARElementstoselect",
      "Id": "a4fa7b20872848479709e5e6bb670b95",
      "Inputs": [
        {
          "Id": "599b3d49668449e0a48ebbf06e53d609",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARIsTypeParameters",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "58f18aecbae748b591a9a0c3e5156c8a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "35fba9fd36864ba8887ea1dbf9423db4",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARValuetoAdd",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "75dccba8efd346c7914c087610e4b9c9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a304ccb59c19476aaa8bc2d369f2bd09",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\n# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\n\n# EXTENSION Enable ToDSType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Enable Revit Elements\nfrom Revit.Elements import *\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Enable Revit API\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\n\n# Enable DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Enable ICollection List Translate\nclr.AddReference(\"System\")\nimport System.Collections.Generic\nfrom System.Collections.Generic import List\n\nclass WarnSwallowSimple(IFailuresPreprocessor):\n\tdef PreprocessFailures(self, failuresAccessor):\n\t\tfailuresAccessor.DeleteAllWarnings()\n\t\treturn FailureProcessingResult.Continue\n\ndef tolist(obj1):\n\tif hasattr(obj1,'__iter__'): return obj1\n\telse: return [obj1]\n\ndef flatten(x):\n    result = []\n    for el in x:\n        if hasattr(el, \"__iter__\") and not isinstance(el, basestring):\n            result.extend(flatten(el))\n        else:\n            result.append(el)\n    return result\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\nif int(DocumentManager.Instance.CurrentUIApplication.Application.VersionNumber) < 2021:\n\tToInternalfactor = UnitUtils.ConvertToInternalUnits(1,doc.GetUnits().GetFormatOptions(UnitType.UT_Length).DisplayUnits)\nelse:\n\tToInternalfactor = UnitUtils.ConvertToInternalUnits(1,doc.GetUnits().GetFormatOptions(SpecTypeId.Length).GetUnitTypeId())\n\nproceed=IN[0]\nparams=flatten(tolist(IN[1]))\nelements=UnwrapElement(flatten(tolist(IN[2])))\nisType=IN[3]\nvalues=flatten(tolist(IN[4]))\n\n# Create Empty List\nresult = []\n\nhandledTypesIds = []\nTransactionManager.Instance.ForceCloseTransaction()\ntrans1 = Transaction(doc, 'Remap Parameters')\ntrans1.Start()\nwarnhandle = WarnSwallowSimple()\nfoptions = trans1.GetFailureHandlingOptions()\nfoptions.SetFailuresPreprocessor(warnhandle)\ntrans1.SetFailureHandlingOptions(foptions)\nfor elem in elements:\n\ttry:\n\t\tif isType:\n\t\t\ttid = elem.GetTypeId()\n\t\t\tif tid in handledTypesIds:\n\t\t\t\tcontinue\n\t\t\telem = doc.GetElement(tid)\n\t\t\thandledTypesIds.append(tid)\n\t\taccepted = False\n\t\tcount = 0\n\t\tfor param in params:\n\t\t\tlookup = elem.LookupParameter(param)\n\t\t\tif lookup != None:\n\t\t\t\tif proceed:\n\t\t\t\t\tif lookup.StorageType  == StorageType.Integer:\n\t\t\t\t\t\tif lookup.HasValue:\n\t\t\t\t\t\t\tlookup.Set(lookup.AsInteger() + int(values[count]))\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tlookup.Set(int(values[count]))\n\t\t\t\t\telif lookup.StorageType == StorageType.Double:\n\t\t\t\t\t\tif lookup.HasValue:\n\t\t\t\t\t\t\tlookup.Set(lookup.AsDouble() + (float(values[count])*ToInternalfactor))\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tlookup.Set(float(values[count])*ToInternalfactor)\n\t\t\t\taccepted = True\n\t\t\tcount += 1\n\t\tif accepted:\n\t\t\tresult.append(elem)\n\texcept:\n\t\tcontinue\ntrans1.Commit()\n\n# Assign your output to the OUT variable.\nOUT = result",
      "VariableInputPorts": true,
      "Id": "b255e39a522c4be48df23e88dfa6abda",
      "Inputs": [
        {
          "Id": "5ae353d6e46247caaff68056a6cdca9f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12fac291abbe4fec9a4bde2680787d06",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e64ea80984e447bd8097b6dbd0ce9e69",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b99d7444c1ed4ef49429c1a658bc9e4c",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c2e28d4cb8f47619d3b2adefc015664",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6095dac99b41446f87a596d8b0322f2a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "b43309308421432c950049ad69259e85",
      "Inputs": [
        {
          "Id": "2c150644a4c1481c8709eb69a829d2eb",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03aef2ed6a66413db07d6806b70e41d7",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    }
  ],
  "Connectors": [
    {
      "Start": "097bb2eac3e24adebad1fa3be33ed471",
      "End": "5ae353d6e46247caaff68056a6cdca9f",
      "Id": "c6a172601f1540f4bd182ce7d2e492b6"
    },
    {
      "Start": "c1c15d8adb914c2b8ea251f8a03443c9",
      "End": "12fac291abbe4fec9a4bde2680787d06",
      "Id": "aec2c5bd872945b8bbb1ab81a70dcdb6"
    },
    {
      "Start": "0dc97a329af149049e14601bfdabc6e8",
      "End": "e64ea80984e447bd8097b6dbd0ce9e69",
      "Id": "f6a1fecc40024300aed74aa767747bd2"
    },
    {
      "Start": "35fba9fd36864ba8887ea1dbf9423db4",
      "End": "b99d7444c1ed4ef49429c1a658bc9e4c",
      "Id": "02ddc23a05064c14a0e751baf476cb1c"
    },
    {
      "Start": "a304ccb59c19476aaa8bc2d369f2bd09",
      "End": "3c2e28d4cb8f47619d3b2adefc015664",
      "Id": "c92d33a0745e404d8734069fc6c7f947"
    },
    {
      "Start": "6095dac99b41446f87a596d8b0322f2a",
      "End": "599b3d49668449e0a48ebbf06e53d609",
      "Id": "7828410071f344a8885ae80fc4982822"
    },
    {
      "Start": "6095dac99b41446f87a596d8b0322f2a",
      "End": "2c150644a4c1481c8709eb69a829d2eb",
      "Id": "f0eec0c986c545529680801bcc591326"
    },
    {
      "Start": "03aef2ed6a66413db07d6806b70e41d7",
      "End": "f8e4cd21e5614afcb2767732edc53b93",
      "Id": "3a56ec36bad64235b52d6c98a4cb18b0"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "10212621d7b24f0cbf73647542fe01a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1376.56764869445,
        "Y": 612.493982093037
      },
      {
        "Id": "dba67d51184848ffaa5153fa9a958f6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1452.60586708465,
        "Y": 710.126818775293
      },
      {
        "Id": "71675f7d02fe46008a976460cc64d057",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1435.67485547217,
        "Y": 814.171215827139
      },
      {
        "Id": "7c3757bf51d347d09b0b38b861dd9bd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -538.253428569892,
        "Y": 702.253851931319
      },
      {
        "Id": "a4fa7b20872848479709e5e6bb670b95",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -491.930082977954,
        "Y": 796.326885911783
      },
      {
        "Id": "58f18aecbae748b591a9a0c3e5156c8a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1424.20024793882,
        "Y": 916.060897795148
      },
      {
        "Id": "75dccba8efd346c7914c087610e4b9c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1414.83813756064,
        "Y": 1018.67919345076
      },
      {
        "Id": "b255e39a522c4be48df23e88dfa6abda",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1045.78310347296,
        "Y": 698.611953883742
      },
      {
        "Id": "b43309308421432c950049ad69259e85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Count",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -741.03329047441,
        "Y": 612.87123225892
      }
    ],
    "Annotations": [],
    "X": 1577.53324942736,
    "Y": -449.045304439757,
    "Zoom": 0.930962280932678
  }
}
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Autodesk.Civil3DToolkit</name>
    </assembly>
    <members>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.BlockExtensions">
            <summary>
            Represents a BlockReference in AutoCAD
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockExtensions.GetParameters(Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Returns the Block parameters
            </summary>
            <param name="block">The Dynamo Block</param>
            <returns>A dictionary of the parameters</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockExtensions.GetParameterByName(Autodesk.AutoCAD.DynamoNodes.Block,System.String)">
            <summary>
            Returns a Block Parameter value by name
            </summary>
            <param name="name">The name of the parameter</param>
            <returns>The value associated to the paraterms if it exists, otherwise null.</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockExtensions.SetParameterValueByName(Autodesk.AutoCAD.DynamoNodes.Block,System.String,System.Object)">
            <summary>
            Sets the parameter value
            </summary>
            <param name="block">The Block</param>
            <param name="parameter">The parameter name</param>
            <param name="value">The value</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockExtensions.Overkill(Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Runs the Overkill command on the Block
            </summary>
            <param name="block">The Block</param>
            <param name="objects">The Objects to process</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockExtensions.GetObjectId(Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Utility to return the Block ObjectId
            </summary>
            <param name="block">The Block</param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.DBPoint">
            <summary>
            Represents a DBPoint in AutoCAD
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.DBPoint.Geometry">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.DBPoint.X">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.DBPoint.Y">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.DBPoint.Z">
            <excluded/>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DBPoint.ByObject(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Returns a DBPoint from an AutoCAD DBPoint object
            </summary>
            <param name="obj">The object</param>
            <returns>A DBPoint</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DBPoint.ByGeometry(Autodesk.DesignScript.Geometry.Point,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a DBPoint in AutoCAD from a Dynamo Point
            </summary>
            <param name="point">The Dynamo Point</param>
            <param name="layer">The destination layer</param>
            <param name="block">The block of the DBPoint, by default is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DBPoint.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.PropertySetsExtensions">
            <summary>
            Collection of propertyset extensions
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PropertySetsExtensions.PropertySetDefinitionByParameters(System.String,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Create a PropertySetDefinition by parameters. applyTo = AcDbSolid3d, Solid (3D), AcDb3dSolid ...
            </summary>
            <param name="name">The Property Set Definition Name</param>
            <param name="description">The Property Set Definition description</param>
            <param name="applyTo">The list of Class names the Property Set definition applies to</param>
            <param name="appliesToAll">If true discards the applyTo filter and applies the property set definition to all object types</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PropertySetsExtensions.PropertyDefinitionByParameters(Autodesk.AutoCAD.DynamoNodes.PropertySetDefinition,System.String,System.String,System.String,Autodesk.AutoCAD.DynamoNodes.TempPSE.ListDefinition)">
            <summary>
            Adds a PropertyDefiniton to a PropertySetDefinition.
            </summary>
            <param name="psetDef">The Property Set Definition</param>
            <param name="name">The Property Definition Name</param>
            <param name="description">The Property definition description</param>
            <param name="dataType">Integer, Real, Text, TrueFalse</param>
            <param name="source">The ListDefinition source</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PropertySetsExtensions.SetPropertyValue(Autodesk.AutoCAD.DynamoNodes.Property,System.Object)">
            <summary>
            Sets the Property Value
            </summary>
            <param name="property">The Property</param>
            <param name="propertyValue">The new value</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PropertySetsExtensions.SetPropertyValueByName(Autodesk.AutoCAD.DynamoNodes.Object,System.String,System.String,System.Object)">
            <summary>
            Sets the Property value on the Object by name
            </summary>
            <param name="obj">The Object</param>
            <param name="propertySetName"></param>
            <param name="propertyName"></param>
            <param name="propertyValue"></param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListDefinition">
            <summary>
            Represents a ListDefinition in AutoCAD
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListDefinition.Name">
            <summary>
            The ListDefinition name
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListDefinition.Items">
            <summary>
            Returns the ListItems in the definition
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListDefinition.ByName(System.String,System.String)">
            <summary>
            Returns a ListDefinition by name and description
            </summary>
            <param name="name">The list definition name</param>
            <param name="description">The list definition description</param>
            <returns>A Listdefinition</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListDefinition.ByNameItems(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Returns a ListDefinition by name and ListItems
            </summary>
            <param name="name">The list definition name</param>
            <param name="items">The name of the ListItems</param>
            <param name="descriptions">The description of the ListItems</param>
            <returns>A Listdefinition</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListDefinition.GetItemByName(System.String)">
            <summary>
            Returns a ListItem by Name if it exists in the ListDefinition
            </summary>
            <param name="name">The ListItem name</param>
            <returns>A ListItem</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListDefinition.AddItemByNameDescription(System.String,System.String)">
            <summary>
            Adds or updates a ListItem in the definition
            </summary>
            <param name="name">The ListItem Name</param>
            <param name="description">The ListItem description</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListDefinition.RemoveItemByName(System.String)">
            <summary>
            Removes a ListItem in the definition if it exists
            </summary>
            <param name="name">The ListItem Name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListDefinition.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListItem">
            <summary>
            Represents a ListItem in AutoCAD
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListItem.Name">
            <summary>
            The ListItem name
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListItem.Description">
            <summary>
            The ListItem description
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.TempPSE.ListItem.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.Table">
            <summary>
            Represents a Table in AutoCAD
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Table.Rows">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Table.Columns">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Table.Width">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Table.Height">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Table.BreakEnabled">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Table.Style">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Table.Position">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Table.Data">
            <excluded/>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.ByObject(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Returns a Table from an AutoCAD Table object
            </summary>
            <param name="obj">The object</param>
            <returns>A Table</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.ByPointData(Autodesk.DesignScript.Geometry.Point,System.Collections.Generic.List{System.Collections.Generic.List{System.Object}},System.Double,System.Double,System.Double,System.String,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a Table in AutoCAD.
            </summary>
            <param name="point">The inseriton point of the Table</param>
            <param name="rowHeight">The row height</param>
            <param name="columnWidth">The column width</param>
            <param name="textHeight">The text height</param>
            <param name="cellAlignment">The cell alignment</param>
            <param name="data">The data in the table</param>
            <param name="layer">The destination layer</param>
            <param name="block">The block of the table, by default is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.SetStyle(System.String)">
            <summary>
            Sets the Table style
            </summary>
            <param name="style">The style name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.SetValueByRowColumn(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the value in the Table cell
            </summary>
            <param name="row">The index of the row</param>
            <param name="column">The index of the column</param>
            <param name="value">The new value</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.SetRowHeight(System.Int32,System.Double)">
            <summary>
            Sets the row height in the Table
            </summary>
            <param name="row">The index of the row</param>
            <param name="height">The row height</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.SetColumnWidth(System.Int32,System.Double)">
            <summary>
            Sets the column width in the Table
            </summary>
            <param name="column">The index of the column</param>
            <param name="width">The column width</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.SetContentColorByRowColumn(System.Int32,System.Int32,DSCore.Color)">
            <summary>
            Sets the content color in the Table cell
            </summary>
            <param name="row">The index of the row</param>
            <param name="column">The index of hte column</param>
            <param name="color">The new color</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.SetBackgroundColorByRowColumn(System.Int32,System.Int32,DSCore.Color)">
            <summary>
            Sets the background color in the Table cell
            </summary>
            <param name="row">The index of the row</param>
            <param name="column">The index of hte column</param>
            <param name="color">The new color</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.SetBorderByRowColumn(System.Int32,System.Int32,System.String,DSCore.Color,System.Boolean,System.Double,System.Double,System.String,System.String,System.String)">
            <summary>
            Sets the appearance of cell borders in the Table
            </summary>
            <param name="row">The cell row index</param>
            <param name="column">The cell column index</param>
            <param name="border">The cell border</param>
            <param name="color">The border color</param>
            <param name="visible">Sets the border visible</param>
            <param name="lineSpacing">The border line spacing</param>
            <param name="margin">The border margin</param>
            <param name="lineWeight">The border lineweight</param>
            <param name="lineStyle">The border line style</param>
            <param name="linetype">The border line type</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.AddColumns(System.Int32,System.Double,System.Int32)">
            <summary>
            Inserts columns in the Table
            </summary>
            <param name="column">The index of the column where to insert new columns</param>
            <param name="width">The column width</param>
            <param name="amount">The amount columns to add</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.AddRows(System.Int32,System.Double,System.Int32)">
            <summary>
            Inserts rows in the Table
            </summary>
            <param name="column">The index of the row where to insert new rows</param>
            <param name="height">The row height</param>
            <param name="amount">The amount rows to add</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Table.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.PlotStyle">
            <summary>
            Represents a PlotStyle in AutoCAD
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PlotStyle.GetPlotStyles">
            <summary>
            Returns the Plot Styles
            </summary>
            <returns>The list of Plot Styles in the Document</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PlotStyle.IsPlotColorDependent">
            <summary>
            Returns true it the Plot Style Mode is color dependent, otherwise false
            </summary>
            <returns>A boolean</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PlotStyle.SetPlotStyles(System.String,System.String,System.String,System.String,System.Boolean,Autodesk.DesignScript.Geometry.Point,System.String,System.String,System.String,System.String,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Sets the Plot Styles
            </summary>
            <returns>True if successful</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PlotStyle.GetPlotStyleNames">
            <summary>
            Returns the Plot Style names
            </summary>
            <returns>The list of Plot Styles names in the Document</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PlotStyle.GetPlotDevices">
            <summary>
            Returns the Plot Device names
            </summary>
            <returns>The list of Plot devices</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PlotStyle.GetCanonicalMedia(System.String)">
            <summary>
            Returns the Canonical Media Sizes for the device Plot Configuration (PC3) file
            </summary>
            <param name="deviceName">The </param>
            <returns>The list of Canonical Media Sizes</returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.MLeader">
            <summary>
            Represents an MText in AutoCAD
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.MLeader.MText">
            <summary>
            The MText associated to the MLeader
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.MLeader.ByObject(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Returns a MLeader from an AutoCAD MLeader object
            </summary>
            <param name="obj">The object</param>
            <returns>A MLeader</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.MLeader.ByObjectMText(Autodesk.AutoCAD.DynamoNodes.Object,Autodesk.AutoCAD.DynamoNodes.Temp.MText,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a MLeader for an Object in AutoCAD from a Dynamo MText
            </summary>
            <param name="obj">The object used to calculate the starting point of the MLeader</param>
            <param name="mtext">The MText</param>
            <param name="block">The block of the MLeader, by default is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.MLeader.ByObjectBlock(Autodesk.AutoCAD.DynamoNodes.Object,Autodesk.AutoCAD.DynamoNodes.Block,System.String,System.String,Autodesk.DesignScript.Geometry.Vector,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a MLeader for an Object in AutoCAD with a block reference label
            </summary>
            <param name="obj">The object used to calculate the starting point of the MLeader</param>
            <param name="label">The Block used in the MLeader label</param>
            <param name="tag">The named attribute of the label</param>
            <param name="layer">The layer of the MLeader</param>
            <param name="text">The text to pass to the label</param>
            <param name="displacement">The Vector used to find the insertion point of the label</param>
            <param name="block">The block of the MLeader, by default is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.MLeader.ByObjectText(Autodesk.AutoCAD.DynamoNodes.Object,System.String,Autodesk.DesignScript.Geometry.Vector,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a MLeader for an Object in AutoCAD with a text label
            </summary>
            <param name="obj">The object used to calculate the starting point of the MLeader</param>
            <param name="layer">The layer of the MLeader</param>
            <param name="text">The text to pass to the label</param>
            <param name="displacement">The Vector used to find the insertion point of the label</param>
            <param name="block">The block of the MLeader, by default is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.MLeader.ByObjectPoint(Autodesk.AutoCAD.DynamoNodes.Object,Autodesk.DesignScript.Geometry.Point,Autodesk.AutoCAD.DynamoNodes.Block,System.String,System.String,System.Double,System.Double,Autodesk.DesignScript.Geometry.Vector,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a MLeader for an Object in AutoCAD with a block reference label or a MText
            </summary>
            <param name="point">The starting Point of the MLeader, if null it will be the center point of the object bounding box</param>
            <param name="obj">The object used to calculate the starting point of the MLeader</param>
            <param name="label">The Block used in the MLeader label, if null it will create a MText instead</param>
            <param name="tag">The named attribute of the label</param>
            <param name="layer">The layer of the MLeader</param>
            <param name="text">The text to pass to the label or the MText</param>
            <param name="textHeight">The heihgt of the MText</param>
            <param name="textRotation">The rotation of the MText</param>
            <param name="displacement">The Vector used to find the insertion point of the label</param>
            <param name="block">The block of the MLeader, by default is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.MLeader.AddLeaders(System.Int32)">
            <summary>
            Adds leaders to the MLeader
            </summary>
            <param name="leaders">The number of leaders to add</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.MLeader.RemoveLeaderByIndex(System.Int32)">
            <summary>
            removes a leader by index from the MLeader
            </summary>
            <param name="leaders">The index of the leader to remove</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.MLeader.UseBackgroundFill(System.Boolean)">
            <summary>
            Sets the MLeader Background on and off
            </summary>
            <param name="active">If true, the background is active</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.MLeader.UseBackgroundColorFill(System.Object)">
            <summary>
            Sets the MLeader Background color
            </summary>
            <param name="colorInput">An input for the color. In case of Color Index it's an integer between 0 and 255, in case of RGB is a list of three integers with values between 0 and 255, in case of a name is a list of two strings wiht the color name and the dictionary</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.MLeader.SetTextContent(System.String)">
            <summary>
            Sets the text of the MText if present.
            </summary>
            <param name="text">The new text</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.MLeader.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions">
            <summary>
            Represents an MText in AutoCAD
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.AddHyperlink(Autodesk.AutoCAD.DynamoNodes.Object,System.String,System.String)">
            <summary>
            Adds an hyperlink to an AutoCAD Object
            </summary>
            <param name="obj">The AutoCAD Dynamo object</param>
            <param name=" hyperlink">The URL as a string</param>
            <param name="description">The Description of the hyperlink</param>
            <returns>An Arc</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.AddNotes(Autodesk.AutoCAD.DynamoNodes.Object,System.String)">
            <summary>
            Adds notes to an AutoCAD Object
            </summary>
            <param name="obj">The AutoCAD Dynamo object</param>
            <param name=" notes">The Notes text</param>
            <returns>An Arc</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.AddReferenceDocuments(Autodesk.AutoCAD.DynamoNodes.Object,System.String,System.String)">
            <summary>
            Adds Reference Documents to an AutoCAD object
            </summary>
            <param name="obj">The AutoCAD Dynamo object</param>
            <param name=" notes">The Notes text</param>
            <returns>An Arc</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.GetMaterial(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Returns the material name associated to an AutoCAD Object
            </summary>
            <param name="obj">The AutoCAD Dynamo object</param>
            <returns>An Arc</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.SetMaterial(Autodesk.AutoCAD.DynamoNodes.Object,System.String)">
            <summary>
            Sets the material name for an AutoCAD Object.
            </summary>
            <param name="obj">The AutoCAD Dynamo object</param>
            <param name="material">The name of the material.</param>
            <returns>An Arc</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.GetParameters(System.Object)">
            <summary>
            Collection of Parameters
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.ObjGetParameters(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Collection of Parameters
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.SetParameterValueByName(Autodesk.AutoCAD.DynamoNodes.Object,System.String,System.Object)">
            <summary>
            Sets the parameter value
            </summary>
            <param name="obj">The object</param>
            <param name="parameter">The parameter name</param>
            <param name="value">The value</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.SetParameterValueByName(System.Object,System.String,System.Object)">
            <summary>
            Sets the parameter value by name
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.GetParameterByName(System.Object,System.String)">
            <summary>
            Returns a Parameter value by name
            </summary>
            <param name="name">The name of the parameter</param>
            <returns>The value associated to the paraterms if it exists, otherwise null.</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.GetXData(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Returns the XData associated to an AutoCAD Object
            </summary>
            <param name="obj">The AutoCAD Dynamo object</param>
            <returns>A Dictionary of the XData</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.AddXData(Autodesk.AutoCAD.DynamoNodes.Object,System.String,System.Int32[],System.Object[])">
            <summary>
            Adds XData to an AutoCAD Object.
            </summary>
            <param name="obj">The AutoCAD Dynamo object</param>
            <param name="appName"> The name of the application used to add XData</param>
            <param name="typeCodes">Str=1000, Layer=1003, Hand=1005, 3Real=1010, Pos=1011, Disp=1012, Dir=1013, Real=1040, Dist=1041, Scale=1042, Int=1070, Long=1071</param>
            <param name="values">A list of values to add</param>
            <returns>An Arc</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.ObjectExtensions.RemoveXData(Autodesk.AutoCAD.DynamoNodes.Object,System.String)">
            <summary>
            Removes XData from an AutoCAD Object.
            </summary>
            <param name="obj">The AutoCAD Dynamo object</param>
            <param name="appName"> The name of the application used to remove XData</param>
            <returns>An Arc</returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.LineExtensions">
            <summary>
            Represents a Line in AutoCAD
            </summary>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LineExtensions.ByGeometry(Autodesk.DesignScript.Geometry.Line,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a Line in AutoCAD from a Dynamo Line
            </summary>
            <param name="line">The Dynamo Line</param>
            <param name="layer">The destination layer</param>
            <param name="block">The block of the Line, by default is ModelSpace</param>
            <returns></returns>
            
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.Hatch">
            <summary>
            Represents a Hatch in AutoCAD
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Hatch.Geometry">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Hatch.Pattern">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Hatch.Scale">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Hatch.Rotation">
            <excluded/>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Hatch.ByObject(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Returns a Hatch from an AutoCAD Hatch object
            </summary>
            <param name="obj">The object</param>
            <returns>A Hatch</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Hatch.ByGeometry(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.PolyCurve},System.String,System.Double,System.Double,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a Hatch in AutoCAD from Dynamo PolyCurves. The curves needs to be sorted from outermost to innermost.
            </summary>
            <param name="boundary">The Dynamo PolyCurves</param>
            <param name="pattern">The name of the AutoCAD hatch pattern</param>
            <param name="scale">The pattern scale</param>
            <param name="rotation">The pattern rotation</param>
            <param name="layer">The destination layer</param>
            <param name="block">The block of the Arc, by default is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Hatch.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.Regen(Autodesk.AutoCAD.DynamoNodes.Document)">
            <summary>
            Regenerates the Document
            </summary>
            <param name="document">The AutoCAD Document</param>
            <returns>The Document</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.GetPoint(Autodesk.AutoCAD.DynamoNodes.Document)">
            <summary>
            Returns a Dynamo point picked from the AutoCAD document.
            </summary>
            <param name="document">The AutoCAD Document</param>
            <returns>The Dynamo Point</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.ObjectByHandle(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Select an Object in the Document by its handle
            </summary>
            <param name="document">The AutoCAD Document</param>
            <param name="handle">The handle</param>
            <returns>The Object in Dynamo</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.ObjectHandle(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Returns the Object handle
            </summary>
            <param name="obj">The Object</param>
            <returns>The Object Handle</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.ObjectByObjectId(Autodesk.AutoCAD.DynamoNodes.Document,System.Int64)">
            <summary>
            Select an Object in the Document by its Object Id
            </summary>
            <param name="document">The AutoCAD Document</param>
            <param name="objectId">The ObjectId</param>
            <returns>The Object in Dynamo</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.EntitySetStyle(Autodesk.AutoCAD.DatabaseServices.Entity,System.String)">
            <summary>
            Sets the Style for the CivilObject
            </summary>
            <param name="civil">The Civil Entity</param>
            <param name="styleName">The name of the style, if empty it will try to apply the default style</param>
            <returns>The CivilObject</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.SetStyle(Autodesk.AutoCAD.DynamoNodes.Object,System.String)">
            <summary>
            Sets the Style for the Object
            </summary>
            <param name="obj">The Object</param>
            <param name="styleName">The name of the style, if empty it will try to apply the default style</param>
            <returns>The Object</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.GetStyle(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Gets the Style of the Object
            </summary>
            <param name="obj">The Object</param>
            <returns>The Style Name</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.GetDocumentStyles">
            <summary>
            Gets the Styles in the document
            </summary>
            <returns>The Styles</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.AddNewTypes">
            <summary>
            Adds object types defined in the Civil 3D Toolkit
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.GetCoordinateSystemCode(Autodesk.AutoCAD.DynamoNodes.Document)">
            <summary>
            Return the current Coordinate System code
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.SetCoordinateSystemCode(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Sets the current Coordinate System code
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.GetLayouts(Autodesk.AutoCAD.DynamoNodes.Document)">
            <summary>
            Returns the Layouts in the Document
            </summary>
            <param name="document">The AutoCAD Document</param>
            <returns>The list of Layouts in the Document</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.GetXRefs(Autodesk.AutoCAD.DynamoNodes.Document)">
            <summary>
            Returns the External References in the Document
            </summary>
            <param name="document">The AutoCAD Document</param>
            <returns>The list of External References in the Document</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.GetRXClasses">
            <summary>
            Returns The RXClass names of the Object Types in the Document
            </summary>        
            <returns>A Dictionary of (Type, RXClass) pairs</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.GetXmlNamespaceManager(System.Xml.XmlDocument)">
            <summary>
            Gets the XML namespace manager.
            </summary>
            <param name="xmlDoc">The XML document.</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.ImportLandXMLAsync(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Imports a LandXML using the default settings
            </summary>
            <param name="document">The AutoCAD Document</param>
            <param name="path">The path to the LandXML</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.DocumentExtensions.GetLandXMLCrossSectData(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Imports a LandXML using the default settings.
            Alignments contained in the LandXML must be already imported in Civil 3D.
            It might contain redundant coordinates.
            </summary>
            <param name="document">The AutoCAD Document</param>
            <param name="path">The path to the LandXML</param>
            <returns></returns>
            
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.BlockReferenceExtensions">
            <summary>
            Represents a BlockReference in AutoCAD
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockReferenceExtensions.GetInsertionPoint(Autodesk.AutoCAD.DynamoNodes.BlockReference)">
            <summary>
            Returns the insertion point of an AutoCAD BlockReference
            </summary>
            <param name="blockReference">The Dynamo BlockReference</param>
            <returns>An Arc</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockReferenceExtensions.ByGeometry(System.Object[],Autodesk.DesignScript.Geometry.CoordinateSystem,System.String,System.String,Autodesk.AutoCAD.DynamoNodes.Block,System.Boolean,System.Boolean)">
            <summary>
            Creates a BlockReference from a list of geometries. If the name is not unique it creates a BlockReference based on the existing block.
            </summary>
            <param name="geometry">The list of Dynamo Geometries in the WCS origin</param>
            <param name="location">The CoordinateSystem of the BlockReference that will be used to transform te Dynamo geometries</param>
            <param name="name">The name of the Block</param>
            <param name="layer">The layer of the Block entities and the BlockReference</param>
            <param name="block">The block of the BlockReference</param>
            <param name="useExisting">If the name already exists and this is true it uses the definition otherwise it adds a counter suffix</param>
            <param name="append">If the name already exists it appends objects to the definition otherwise it overwrites the definition</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockReferenceExtensions.ByCoordinateSystem(Autodesk.AutoCAD.DynamoNodes.Block,Autodesk.DesignScript.Geometry.CoordinateSystem,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a BlockReference from a source block.
            </summary>
            <param name="source">The source block</param>
            <param name="location">The CoordinateSystem of the BlockReference</param>        
            <param name="layer">The layer of the BlockReference</param>
            <param name="block">The target block</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockReferenceExtensions.AddHyperlink(Autodesk.AutoCAD.DynamoNodes.BlockReference,System.String,System.String)">
            <summary>
            Adds a hyperlink to an AutoCAD BlockReference
            </summary>
            <param name="blockReference">The Dynamo BlockReference</param>
            <param name=" hyperlink">The URL as a string</param>
            <param name="description">The Description of the hyperlink</param>
            <returns>An Arc</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockReferenceExtensions.ByObject(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Converts an Object to a Dynamo BlockReference
            </summary>
            <param name="obj">The Dynamo Object</param>
            <returns>A BlockReference</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockReferenceExtensions.SwapBlock(Autodesk.AutoCAD.DynamoNodes.BlockReference,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Swaps the Block definition of a BlockReference
            </summary>
            <param name="blockReference">The AutoCAD Dynamo BlockReference</param>
            <param name=" block">The new block definition</param>
            <returns>The BlockReference</returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockReferenceExtensions.GetDynamicBlockReferences(Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Gets the BlockReferences of the Dynamic Blocks in the document.
            </summary>
            <param name=" block">The source block, if null it considers the Model Space</param>
            <returns>A Dictionary with the name of the Block and a list of BlockReferences</returns>
            https://adndevblog.typepad.com/autocad/2012/06/finding-all-block-references-of-a-dynamic-block.html#:~:text=As%20a%20reminder%20%E2%80%93%20when%20you,dynamic%20block%20in%20the%20drawing
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.BlockReferenceExtensions.GetGeometry(Autodesk.AutoCAD.DynamoNodes.BlockReference)">
            <summary>
            Gets the geometry associated to the block reference
            </summary>
            <param name="blockReference">The Block Reference</param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.Layout">
            <summary>
            Layout
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Layout.Name">
            <excluded/>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Layout.PlotPaperMarginsMinPoint">
            <excluded/>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Layout.ByName(System.String)">
            <summary>
            Returns a Layout with a given name
            </summary>
            <param name="name">The name of the Layout</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Layout.ByObject(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Casts an AutoCAD Object to a Layout type
            </summary>
            <param name="obj">The object</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Layout.SetName(System.String)">
            <summary>
            Sets the Layout Name
            </summary>
            <param name="name">The neew name for the Layout</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Layout.GetViewports(Autodesk.AutoCAD.DynamoNodes.Layout)">
            <summary>
            Returns the Viewports in the Layout
            </summary>
            <param name="layout">The Layout</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Layout.GetViewportByPoint(Autodesk.AutoCAD.DynamoNodes.Layout,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Returns the Viewport in the Layout that contains the specified Point
            </summary>
            <param name="layout">The Layout</param>
            <param name="point">The Point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Layout.ToString">
            <summary>
            String representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.PolylineExtensions">
            <summary>
            Represents a Polyline in AutoCAD
            </summary>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PolylineExtensions.ObjectByGeometry(Autodesk.DesignScript.Geometry.PolyCurve,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a Polyline in AutoCAD from a Dynamo PolyCurve
            </summary>
            <param name="curve">The Dynamo PolyCurve</param>
            <param name="layer">The destination layer</param>
            <param name="block">The block of the Arc, by default is ModelSpace</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PolylineExtensions.ObjectByTessellatedGeometry(Autodesk.DesignScript.Geometry.PolyCurve,System.Double,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a Polyline in AutoCAD from a Dynamo PolyCurve using a tessellation for non-horizontal curves
            </summary>
            <param name="curve">The Dynamo PolyCurve</param>
            <param name="midordinate">The midordinate value used to tessellate the geometry</param>
            <param name="layer">The destination layer</param>
            <param name="block">The block of the Object, by default is ModelSpace</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PolylineExtensions.GetGeometry(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Extracts the polyline geometry
            </summary>
            <param name="polyline">The Polyline</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PolylineExtensions.GetVertices(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Extracts the polyline vertices and their Latitude, Longitude and Elevation
            </summary>
            <param name="polyline">The Polyline</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.PolylineExtensions.Offset(Autodesk.AutoCAD.DynamoNodes.Polyline,System.Double,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Offsets the Polyline in AutoCAD by the given value.
            </summary>
            <param name="polyline">The Polyline object</param>
            <param name="offset">The offset value</param>
            <param name="block">The block of the Polyline, by default is ModelSpace</param>
            <returns></returns>
            
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.Viewport">
            <summary>
            Viewport
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.Width">
            <summary>
            Viewport Width
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.Height">
            <summary>
            Viewport Height
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.Center">
            <summary>
            Viewport Center Point
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.Scale">
            <summary>
            Viewport Scale
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.Elevation">
            <summary>
            Viewport Elevation
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.FrontClipDistance">
            <summary>
            Viewport Front Clip Distance
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.LensLength">
            <summary>
            Viewport Lens Length
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.Number">
            <summary>
            Viewport Number
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.TwistAngle">
            <summary>
            Viewport Twist Angle
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.ViewCenter">
            <summary>
            Viewport View Center
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.ViewTarget">
            <summary>
            Viewport View Target
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.ViewHeight">
            <summary>
            Viewport View Height
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.ViewDirection">
            <summary>
            Viewport View Direction
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.CoordinateSystem">
            <summary>
            The CoordinateSystem Centered in the Viewport
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.Boundary">
            <summary>
            Viewport Boundary
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.ModelToPaperCS">
            <summary>
            Viewport Model To Paper CoordinateSystem
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Viewport.PaperToModelCS">
            <summary>
            Viewport Paper To modle CoordinateSystem
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Viewport.PointFromPaperToModelSpace(Autodesk.AutoCAD.DynamoNodes.Viewport,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Returns a Point in the Paper Space coordinates to the Model Space coordinates.
            </summary>
            <param name="viewport">The Viewport</param>
            <param name="point">The Point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Viewport.ToString">
            <summary>
            String representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.Legend">
            <summary>
            Represents a Legend
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Legend.Title">
            <summary>
            The Legend title
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Legend.Items">
            <summary>
            The Legend items
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Legend.Auto(System.String)">
            <summary>
            Creates a Legend of the Layer-Linetype-LinetypeScale combinations in AutoCAD
            </summary>
            <param name="title">The Legend title</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Legend.ByItems(System.String,System.Collections.Generic.IList{Autodesk.AutoCAD.DynamoNodes.LegendItem})">
            <summary>
            Creates a Legend from a list of LegendItems
            </summary>
            <param name="title">The Legend title</param>
            <param name="items">The list of LegendItems</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Legend.ToAutoCAD(Autodesk.DesignScript.Geometry.Point,System.String,System.Double,System.Double,System.Double,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a legend in AutoCAD. The Legend Items sample lines will preserve their Layer definition.
            </summary>
            <param name="point">The insertion point</param>
            <param name="layer">The layer for the MTexts of the legend</param>
            <param name="textHeight">The height of the sample text</param>
            <param name="sampleLength">The length of the sample lines</param>
            <param name="spacing">The vertical spacing betwen items</param>
            <param name="block">The block, if null is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Legend.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.LegendItem">
            <summary>
            Represents a Legend
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.LegendItem.Layer">
            <summary>
            The Layer
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.LegendItem.Linetype">
            <summary>
            The line type
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.LegendItem.LinetypeScale">
            <summary>
            The line type scale
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.LegendItem.Text">
            <summary>
            The text displayed in the legend
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LegendItem.ByLayerLinetypeScale(System.String,System.String,System.String,System.Double)">
            <summary>
            Creates a LegendItem object
            </summary>
            <param name="layer">The Layer</param>
            <param name="linetype">The Linetype</param>
            <param name="linetypeScale">The linetype Scale</param>
            <param name="text">The text displayed in the legend</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LegendItem.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.LayerExtensions">
            <summary>
            Represents an MText in AutoCAD
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.ByNameColor(System.String,DSCore.Color)">
            <summary>
            Creates a Layer in AutoCAD, if the layer exists it assigns the color.
            </summary>
            <param name="name">The layer name</param>
            <param name="color">The color of the layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.GetPlotStyle(Autodesk.AutoCAD.DynamoNodes.Layer)">
            <summary>
            Gets the PlotStyle of a Layer
            </summary>
            <param name="layer">The layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.SetPlotStyle(Autodesk.AutoCAD.DynamoNodes.Layer,System.String)">
            <summary>
            Sets the PlotStyle of a Layer
            </summary>
            <param name="layer">The layer</param>
            <param name="plotStyle">The plot style name</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.SetIsOn(Autodesk.AutoCAD.DynamoNodes.Layer,System.Boolean)">
            <summary>
            Sets the Layer visibility on or off.
            </summary>
            <param name="layer">The layer</param>
            <param name="on">If true it sets the visibility on</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.SetIsFrozen(Autodesk.AutoCAD.DynamoNodes.Layer,System.Boolean)">
            <summary>
            Sets the Layer freeze on or off.
            </summary>
            <param name="layer">The layer</param>
            <param name="frozen">If true it freezes the Layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.IsHidden(Autodesk.AutoCAD.DynamoNodes.Layer)">
            <summary>
            Gets if the Layer is hidden
            </summary>
            <param name="layer">The layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.SetIsHidden(Autodesk.AutoCAD.DynamoNodes.Layer,System.Boolean)">
            <summary>
            Hides the Layer
            </summary>
            <param name="layer">The layer</param>
            <param name="hide">If true hides the Layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.IsLocked(Autodesk.AutoCAD.DynamoNodes.Layer)">
            <summary>
            Gets if the Layer is locked.
            </summary>
            <param name="layer">The layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.SetIsLocked(Autodesk.AutoCAD.DynamoNodes.Layer,System.Boolean)">
            <summary>
            Locks the Layer
            </summary>
            <param name="layer">The layer</param>
            <param name="lockLayer">If true hides the Layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.IsPlottable(Autodesk.AutoCAD.DynamoNodes.Layer)">
            <summary>
            Gets if the Layer is plottable.
            </summary>
            <param name="layer">The layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.SetIsPlottable(Autodesk.AutoCAD.DynamoNodes.Layer,System.Boolean)">
            <summary>
            Sets if the Layer is plottable
            </summary>
            <param name="layer">The layer</param>
            <param name="plottable">If true plots the Layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.IsReconciled(Autodesk.AutoCAD.DynamoNodes.Layer)">
            <summary>
            Gets if the Layer is reconciled.
            </summary>
            <param name="layer">The layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.SetIsReconciled(Autodesk.AutoCAD.DynamoNodes.Layer,System.Boolean)">
            <summary>
            Sets if the Layer is reconciled
            </summary>
            <param name="layer">The layer</param>
            <param name="reconciled">If true reconciles the Layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.IsUsed(Autodesk.AutoCAD.DynamoNodes.Layer)">
            <summary>
            Gets if the Layer is used.
            </summary>
            <param name="layer">The layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.GetTransparency(Autodesk.AutoCAD.DynamoNodes.Layer)">
            <summary>
            Gets the Layer transparency
            </summary>
            <param name="layer">The layer</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.LayerExtensions.SetTransparency(Autodesk.AutoCAD.DynamoNodes.Layer,System.Double)">
            <summary>
            Sets the Layer transparency.
            </summary>
            <param name="layer">The layer</param>
            <param name="transparency">The transparency value</param>
            <returns></returns>
            
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.Arc">
            <summary>
            Represents an Arc in AutoCAD
            </summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DynamoNodes.Arc.Geometry">
            <excluded/>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Arc.ByObject(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Returns an Arc from an AutoCAD Arc object
            </summary>
            <param name="obj">The object</param>
            <returns>An Arc</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Arc.ByGeometry(Autodesk.DesignScript.Geometry.Arc,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates an Arc in AutoCAD from a Dynamo Arc
            </summary>
            <param name="arc">The Dynamo Arc</param>
            <param name="layer">The destination layer</param>
            <param name="block">The block of the Arc, by default is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Arc.ByThreePoints(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates an Arc in AutoCAD by three Dynamo points
            </summary>
            <param name="firstPoint">The first point on the Arc</param>
            <param name="secondPoint">The second point on the Arc</param>
            <param name="thirdPoint">The third point on the Arc</param>
            <param name="layer">The destination layer</param>
            <param name="block">The block of the Arc, by default is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Arc.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.Temp.MText">
            <summary>
            Represents an MText in AutoCAD
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Temp.MText.ByObject(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Returns an MText from an AutoCAD MText object
            </summary>
            <param name="obj">The object</param>
            <returns>An Arc</returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Temp.MText.ByPointTextRotation(Autodesk.DesignScript.Geometry.Point,System.String,System.String,System.Double,System.Double,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates an MText in AutoCAD
            </summary>
            <param name="location">The insertion point of the MText</param>
            <param name="text">The contents of the MText</param>
            <param name="layer">The destination layer</param>
            <param name="height">The height of the MText</param>
            <param name="rotation">The rotation of the MText</param>
            <param name="block">The block of the MText, by default is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Temp.MText.ByText(Autodesk.AutoCAD.DynamoNodes.Text,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a MText from a DBText object.
            </summary>
            <param name="text">The DBText object</param>
            <param name="layer">The layer name of the MText</param>
            <param name="block">The block of the MText, by default is ModelSpace</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.Temp.MText.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo">
            <summary>
            Utilities to convert geometry objects from AutoCAD to Dynamo
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToPoint(Autodesk.AutoCAD.DatabaseServices.DBPoint)">
            <summary>
            Converts an AutoCAD DBPoint into a Dynamo Point
            </summary>
            <param name="acadPoint">The AutoCAD DBPoint</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToPoint(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>
            Converts an AutoCAD Geometry Point 2D into a Dynamo Point
            </summary>
            <param name="acadPoint">The AutoCAD Geometry Point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToPoint(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>
            Converts an AutoCAD Geometry Point 3D into a Dynamo Point
            </summary>
            <param name="acadPoint">The AutoCAD Geometry Point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToVector(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>
            Converts an AutoCAD Geometry Vector 2D into a Dynamo Vector
            </summary>
            <param name="acadVector">The AutoCAD Geometry Vector</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToVector(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>
            Converts an AutoCAD Geometry Vector 3D into a Dynamo Vector
            </summary>
            <param name="acadVector">The AutoCAD Geometry Vector</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToSolid(Autodesk.AutoCAD.DatabaseServices.Solid3d)">
            <summary>
            Converts an AutoCAD Solid 3d into a Dynamo Solid
            </summary>
            <param name="acadSolid">The AutoCAD Solid3d</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToSolid(Autodesk.AutoCAD.DatabaseServices.Solid)">
            <summary>
            Converts an AutoCAD Solid 3d into a Dynamo Solid
            </summary>
            <param name="acadSolid">The AutoCAD Solid3d</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToCurve(Autodesk.AutoCAD.Geometry.Curve2d)">
            <summary>
            Converts an AutoCAD Curve into a Dynamo Curve
            </summary>
            <param name="acadCurve">The AutoCAD Curve</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToCurve(Autodesk.AutoCAD.DatabaseServices.Curve)">
            <summary>
            Converts an AutoCAD Curve into a Dynamo Curve
            </summary>
            <param name="acadCurve">The AutoCAD Curve</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToLine(Autodesk.AutoCAD.DatabaseServices.Line)">
            <summary>
            Converts an AutoCAD Line into a Dynamo Line
            </summary>
            <param name="acadLine">The AutoCAD Line</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToLine(Autodesk.AutoCAD.Geometry.Line2d)">
            <summary>
            Converts an AutoCAD Line into a Dynamo Line
            </summary>
            <param name="acadLine">The AutoCAD Line</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToLine(Autodesk.AutoCAD.Geometry.Line3d)">
            <summary>
            Converts an AutoCAD Line into a Dynamo Line
            </summary>
            <param name="acadLine">The AutoCAD Line</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToLine(Autodesk.AutoCAD.Geometry.LineSegment2d)">
            <summary>
            Converts an AutoCAD Line into a Dynamo Line
            </summary>
            <param name="acadLine">The AutoCAD Line</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToLine(Autodesk.AutoCAD.Geometry.LineSegment3d)">
            <summary>
            Converts an AutoCAD Line into a Dynamo Line
            </summary>
            <param name="acadLine">The AutoCAD Line</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToArc(Autodesk.AutoCAD.DatabaseServices.Arc)">
            <summary>
            Converts an AutoCAD Arc into a Dynamo Arc
            </summary>
            <param name="acadArc">The AutoCAD Arc</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToArc(Autodesk.AutoCAD.Geometry.CircularArc2d)">
            <summary>
            Converts an AutoCAD Arc into a Dynamo Arc
            </summary>
            <param name="acadArc">The AutoCAD Arc</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToArc(Autodesk.AutoCAD.Geometry.CircularArc3d)">
            <summary>
            Converts an AutoCAD Arc into a Dynamo Arc
            </summary>
            <param name="acadArc">The AutoCAD Arc</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToCircle(Autodesk.AutoCAD.DatabaseServices.Circle)">
            <summary>
            Converts an AutoCAD Circle into a Dynamo Circle
            </summary>
            <param name="acadCircle">The AutoCAD Circle</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToPolyCurve(Autodesk.AutoCAD.DatabaseServices.Polyline)">
            <summary>
            Converts an AutoCAD Polyline into a Dynamo PolyCurve
            </summary>
            <param name="acadPolyline"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToPolyCurve(Autodesk.AutoCAD.DatabaseServices.Polyline2d)">
            <summary>
            Converts an AutoCAD Polyline2d into a Dynamo PolyCurve
            </summary>
            <param name="acadPolyline"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToPolyCurve(Autodesk.AutoCAD.DatabaseServices.Polyline3d)">
            <summary>
            Converts an AutoCAD Polyline3d into a Dynamo PolyCurve
            </summary>
            <param name="acadPolyline"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToNurbsCurve(Autodesk.AutoCAD.Geometry.CubicSplineCurve2d)">
            <summary>
            Converts an AutoCAD CubicSplineCurve2d into a Dynamo NurbsCurve
            </summary>
            <param name="spline"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToNurbsCurve(Autodesk.AutoCAD.Geometry.CubicSplineCurve3d)">
            <summary>
            Converts an AutoCAD CubicSplineCurve3d into a Dynamo NurbsCurve
            </summary>
            <param name="spline"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToNurbsCurve(Autodesk.AutoCAD.Geometry.SplineEntity2d)">
            <summary>
            Converts an AutoCAD SplineEntity2d into a Dynamo NurbsCurve
            </summary>
            <param name="spline"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToNurbsCurve(Autodesk.AutoCAD.Geometry.SplineEntity3d)">
            <summary>
            Converts an AutoCAD SplineEntity3d into a Dynamo NurbsCurve
            </summary>
            <param name="spline"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToNurbsCurve(Autodesk.AutoCAD.Geometry.NurbCurve2d)">
            <summary>
            Converts an AutoCAD NurbCurve2d into a Dynamo NurbsCurve
            </summary>
            <param name="curve"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToNurbsCurve(Autodesk.AutoCAD.Geometry.NurbCurve3d)">
            <summary>
            Converts an AutoCAD NurbCurve3d into a Dynamo NurbsCurve
            </summary>
            <param name="curve"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToNurbsCurve(Autodesk.AutoCAD.DatabaseServices.Spline)">
            <summary>
            Converts an AutoCAD Spline into a Dynamo NurbsCurve
            </summary>
            <param name="spline"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToPlane(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>
            Converts an AutoCAD plane into a Dynamo plane
            </summary>
            <param name="plane"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToNurbsSurface(Autodesk.AutoCAD.Geometry.NurbSurface)">
            <summary>
            Converts an AutoCAD NurbCurve3d into a Dynamo NurbsCurve
            </summary>
            <param name="curve"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToCoordinateSystem(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>
            Converts an AutoCAD Matrix3d into a Dynamo CoordinateSystem
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToSphere(Autodesk.AutoCAD.Geometry.Sphere)">
            <summary>
            Converts an AutoCAD sphere into a Dynamo sphere
            </summary>
            <param name="sphere"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToCone(Autodesk.AutoCAD.Geometry.Cone)">
            <summary>
            Converts an AutoCAD cone into a Dynamo cone
            </summary>
            <param name="cone"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToCylinder(Autodesk.AutoCAD.Geometry.Cylinder)">
            <summary>
            Converts an AutoCAD cylinder into a Dynamo cylinder
            </summary>
            <param name="cylinder"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToEllipseArc(Autodesk.AutoCAD.Geometry.EllipticalArc2d)">
            <summary>
            Converts an AutoCAD EllipticalArc2d into a Dynamo EllipseArc
            </summary>
            <param name="arc"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToEllipseArc(Autodesk.AutoCAD.Geometry.EllipticalArc3d)">
            <summary>
            Converts an AutoCAD EllipticalArc3d into a Dynamo EllipseArc
            </summary>
            <param name="arc"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToEllipse(Autodesk.AutoCAD.DatabaseServices.Ellipse)">
            <summary>
            Converts an AutoCAD Ellipse into a Dynamo Ellipse
            </summary>
            <param name="arc"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ToHelix(Autodesk.AutoCAD.DatabaseServices.Helix)">
            <summary>
            Converts an AutoCAD Helix into a Dynamo Helix
            </summary>
            <param name="arc"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.AutoCADToDynamo.ExtractSolids(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Collections.Generic.IList{Autodesk.AutoCAD.DatabaseServices.Solid3d})">
            <summary>
            Recursive function that adds Solid3d objects to an output list.
            </summary>
            <param name="obj">The DBObject ot process.</param>
            <param name="output">The output Solid3d list.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD">
            <summary>
            Utilities to convert geometry objects from Dynamo to AutoCAD
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD.ToPoint2d(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Converts a Dynamo Point into an AutoCAD Geometry Point 2D 
            </summary>
            <param name="dynPoint">The Dynamo Geometry Point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD.ToPoint3d(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Converts a Dynamo Point into an AutoCAD Geometry Point 3D 
            </summary>
            <param name="dynPoint">The Dynamo Geometry Point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD.ToVector2d(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Converts a Dynamo Vector into an AutoCAD Geometry Vector 2D 
            </summary>
            <param name="dynVector">The Dynamo Geometry Vector</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD.ToVector3d(Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Converts a Dynamo Vector into an AutoCAD Geometry Vector 3D 
            </summary>
            <param name="dynVector">The Dynamo Geometry Vector</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD.ToLineSegment2d(Autodesk.DesignScript.Geometry.Line)">
            <summary>
            Converts a Dynamo Line into an AutoCAD Geometry LineSegment2D
            </summary>
            <param name="dynLine">The Dynamo Geometry Line</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD.ToLineSegment3d(Autodesk.DesignScript.Geometry.Line)">
            <summary>
            Converts a Dynamo Line into an AutoCAD Geometry LineSegment3D
            </summary>
            <param name="dynLine">The Dynamo Geometry Line</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD.ToCircularArc2d(Autodesk.DesignScript.Geometry.Arc)">
            <summary>
            Converts a Dynamo Arc into an AutoCAD Geometry CircularArc2d
            </summary>
            <param name="dynArc">The Dynamo Geometry Arc</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD.ToCircularArc3d(Autodesk.DesignScript.Geometry.Arc)">
            <summary>
            Converts a Dynamo Arc into an AutoCAD Geometry Curve3d
            </summary>
            <param name="dynArc">The Dynamo Geometry Arc</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD.ToPolyline(Autodesk.DesignScript.Geometry.PolyCurve)">
            <summary>
            Converts a Dynamo PolyCurve into an AutoCAD Polyline
            </summary>
            <param name="dynPolyCurve"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD.ToPlane(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Converts a Dynamo Plane into an AutoCAD Plane
            </summary>
            <param name="plane"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.DynamoToAutoCAD.ToMatrix3d(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Converts a Dynamo CoordinateSystem into an AutoCAD Matrix3d
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.Utils">
            <summary>
            Utilities to convert units
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.Utils.DegToRad(System.Double)">
            <summary>
            Converts an angle from Degrees to Radians
            </summary>
            <param name="angle">The angle value to convert from</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.Utils.RadToDeg(System.Double)">
            <summary>
            Converts an angle from Radians to Degrees
            </summary>
            <param name="angle">The angle value to convert from</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.Utils.BoundingBoxCenterPoint(Autodesk.DesignScript.Geometry.BoundingBox)">
            <summary>
            Returns the center point of a Dynamo BoundingBox
            </summary>
            <param name="bb">The BoundingBox</param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.GeoJSONToDynamo">
            <summary>
            Utilities to convert geometry objects from GeoJSON to Dynamo
            </summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DynamoNodes.GeometryConversion.GeoJSONToDynamo.Convert(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Converts an GeoJSON Geometry into a Dynamo Geometry
            </summary>
            <param name="obj">The GeoJSON Geometry object</param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationCurve">
            <summary>
            Collection of alignment superelevation cruve
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationCurve.Name">
            <summary>
            The Curve Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationCurve.EndStation">
            <summary>
            End station
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationCurve.StartStation">
            <summary>
            Start station
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationCurve.Alignment">
            <summary>
            The Parent Alignment
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationCurve.SuperelevationData">
            <summary>
            Superelevation Critical Stations Data
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationCurve.CANTData">
            <summary>
            CANT Critical Stations Data
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationCurve.SetName(System.String)">
            <summary>
            Sets the curve name
            </summary>
            <param name="name">The new name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationCurve.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData">
            <summary>
            Collection of alignment superelevation data
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.TransitionRegionType">
            <summary>
            Transition Region Type
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.TransitionDescription">
            <summary>
            Transition Description
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.CurveName">
            <summary>
            Superelevation Curve Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.StationType">
            <summary>
            Station Type
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.Station">
            <summary>
            Station
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.Alignment">
            <summary>
            The Parent Alignment
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.GetSlope(System.String)">
            <summary>
            Gets the slope of the cross segment type
            </summary>
            <param name="segmentType">Cross Segment Type</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.SetSlope(System.String,System.Double)">
            <summary>
            Sets the Slope for for the cross segment type
            </summary>
            <param name="segmentType">Cross Segment Type</param>
            <param name="slope">The slope value</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.BreakSegment(System.String)">
            <summary>
            Breaks segment 
            </summary>
            <param name="segmentType">Cross Segment Type</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.GetSmoothingLength(System.String)">
            <summary>
            Gets the smoothing length
            </summary>
            <param name="segmentType">Cross Segment Type</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.IsGradeBreak(System.String)">
            <summary>
            Checks if the cross segment type is a Grade Break
            </summary>
            <param name="segmentType">Cross Segment Type</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.RemoveGradeBreak(System.String)">
            <summary>
            Removes a Grade Break
            </summary>
            <param name="segmentType">Cross Segment Type</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.SetSmoothingLength(System.String,System.Double)">
            <summary>
            Sets the smoothing length of the cross segment type
            </summary>
            <param name="segmentType">Cross Segment Type</param>
            <param name="length">The length</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.SetStation(System.Double)">
            <summary>
            Sets the station
            </summary>
            <param name="station">The station value</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.SetTransitionDescription(System.String)">
            <summary>
            Sets the transition description
            </summary>
            <param name="description">The description</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSuperelevationDataExtensions.AlignmentSuperelevationData.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly">
            <summary>
            Assembly
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly.Type">
            <summary>
            Assembly Type
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly.IsUsed">
            <summary>
            Checks if the Assembly is used
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly.GetAssemblies">
            <summary>
            Returns the Assemblies in the current Document
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly.GetAssemblyByName(System.String)">
            <summary>
            Returns the Assembly in the current Document by name
            </summary>
            <param name="name">The assembly name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly.ByNamePoint(System.String,Autodesk.DesignScript.Geometry.Point,System.Int32)">
            <summary>
             Creates an Assembly if the name is new
             </summary>
             <param name="name">The name of the assembly</param>
             <param name="location">The location of the assembly</param>
             <param name="assemblyType">1-UndividedCrownedRoad, 2-UndividedPlanarRoad, 3-DividedCrownedRoad, 4-DividedPlanarRoad, 5-Other, 6-Railway</param>
             <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly.AddSubassembly(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
             Adds a Subassembly to the Assembly. If it is the first, it will also create an AssemblyGroup
             </summary>
             <param name="subassemblyName">The nickname of the Subassembly to add</param>
             <param name="groupName">The name of the group where to add the Subassembly</param>
             <param name="hookPoint">The index of the SubassemblyPoint use to hook the new Subassembly</param>
             <param name="hookSubassembly">The name of the Subassembly to use as a hook</param>
             <param name="name">The name of the new Subassembly in the group</param>
             <param name="side">0-Left, 1-Right</param>
             <returns></returns>
             
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly.GetGroups">
            <summary>
            Returns the Assembly Groups
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly.GetOffsetAssemblies">
            <summary>
            Returns the OffsetAssemblies associated to the Assembly
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly.GetGroupByName(System.String)">
            <summary>
            Returns the Assembly Group by Name
            </summary>
            <param name="name">The group name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.CorridorExtensions.OffsetAssembly">
            <summary>
            Offset Assembly
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.OffsetAssembly.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.OffsetAssembly.Offset">
            <summary>
            Offset Vector
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.OffsetAssembly.Type">
            <summary>
            OffsetAssembly Type
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.OffsetAssembly.Assembly">
            <summary>
            The Assembly associated to the OffsetAssembly
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.OffsetAssembly.GetGroups">
            <summary>
            Returns the OffsetAssembly Groups
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.OffsetAssembly.GetGroupByName(System.String)">
            <summary>
            Returns the Assembly Group by Name
            </summary>
            <param name="name">The group name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.OffsetAssembly.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.CorridorExtensions.AssemblyGroup">
            <summary>
            AssemblyGroup
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.AssemblyGroup.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.AssemblyGroup.GetSubassemblies">
            <summary>
            Returns a list of Subassemblies associated to the AssemblyGroup
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.AssemblyGroup.GetSubassemblyByName(System.String)">
            <summary>
            Returns a Subassembly in the AssemblyGroup
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.AssemblyGroup.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly">
            <summary>
            Subassembly
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.Name">
            <summary>
            Display Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.HasSide">
            <summary>
            Has Side
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.HasParent">
            <summary>
            Has Parent Assembly
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.Origin">
            <summary>
            The Subassembly origin
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.Points">
            <summary>
            The Subassembly Points
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.Links">
            <summary>
            The Subassembly Links
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.Shapes">
            <summary>
            The Subassembly Shapes
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.Parameters">
            <summary>
            The Subassembly parameters
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.GetSubassemblies">
            <summary>
            Returns the subassemblies in the Document
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.GetSubassembliesByName(System.String)">
            <summary>
            Returns the subassemblies with a given name in the Document
            </summary>
            <param name="name">The subassembly name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.ImportStockSubassembly(System.String,System.String,System.String,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Imports the stock subassembly in the Document. The Subassembly must then be added to an Assembly.
            </summary>
            <param name="toolName">The subassembly tool name</param>
            <param name="className">The class name as defined in the Subassembly</param>
            <param name="name">A nickname to recall the subassembly</param>
            <param name="location">The inseriton point of the Subassembly</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.ImportSubassembly(System.String,System.String,Autodesk.DesignScript.Geometry.Point,System.String)">
            <summary>
            Imports a custom Subassembly in the Document. The Subassembly must then be added to an Assembly.
            </summary>
            <param name="toolName">The subassembly tool name</param>
            <param name="name">A nickname to recall the subassembly</param>
            <param name="location">The insertion point of the subassembly</param>
            <param name="path">The path to the folder that contains folders with the Subassembly data (.dll, .atc, ...)</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.GetParameterValueByName(System.String)">
            <summary>
            Gets the Subassembly parameter value by name
            </summary>
            <param name="parameter">The parameter name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.SetParameterValueByName(System.String,System.Object,System.Boolean)">
            <summary>
            Sets the Subassembly parameter value 
            </summary>
            <param name="parameter">The parameter name</param>
            <param name="value">The new value</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.Subassembly.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyPoint">
            <summary>
            SubassemblyPoint
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyPoint.Codes">
            <summary>
            Codes
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyPoint.Index">
            <summary>
            The Subassembly Point index
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyPoint.Location">
            <summary>
            The Subassembly Point Location
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyPoint.Elevation">
            <summary>
            The SubassemblyPoint Elevation
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyPoint.Offset">
            <summary>
            The SubassemblyPoint Offset
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyPoint.IsHidden">
            <summary>
            The SubassemblyPoint hidden status
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyPoint.Station">
            <summary>
            The SubassemblyPoint Station
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyPoint.IsLoopPoint">
            <summary>
            Returns if a point is a loop point
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyPoint.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyLink">
            <summary>
            SubassemblyLink
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyLink.Codes">
            <summary>
            Codes
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyLink.Index">
            <summary>
            The SubassemblyLink index
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyLink.Points">
            <summary>
            The SubassemblyLink Points
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyLink.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyShape">
            <summary>
            SubassemblyShape
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyShape.Codes">
            <summary>
            Codes
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyShape.Index">
            <summary>
            The SubassemblyShape index
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyShape.Links">
            <summary>
            The SubassemblyShape Links
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyShape.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo">
            <summary>
            SubassemblyTarget
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo.TargetType">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo.DisplayName">
            <summary>
            The Display Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo.TargetToOption">
            <summary>
            The target to option
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo.SubassemblyName">
            <summary>
            The Subassembly Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo.LogicalName">
            <summary>
            The target Logical Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo.AssemblyGroupName">
            <summary>
            The target AssemblyGroup Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo.Targets">
            <summary>
            The targets objects
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo.SetTargets(System.Collections.Generic.List{Autodesk.AutoCAD.DynamoNodes.Object})">
            <summary>
            Sets the target 
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo.SetTargetsOption(System.Int32)">
            <summary>
            Sets the targets option
            </summary>
            <param name="option">0-Nearest, 1-Farthest, 2-Flattest, 3-Steepest</param>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter">
            <summary>
            Toolkit Subassembly Parameter
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter.ParameterType">
            <summary>
            The Parameter Type
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter.Name">
            <summary>
            The Parameter Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter.Comment">
            <summary>
            The Parameter Comment
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter.Description">
            <summary>
            The Parameter Description
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter.Order">
            <summary>
            The Parameter display order
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter.Access">
            <summary>
            The Parameter access
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter.IsReadOnly">
            <summary>
            True if the Parameter is read-only
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter.Value">
            <summary>
            The Parameter Value
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter.Subassembly">
            <summary>
            The Subassembly that contains the parameter
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter.SetValue(System.Object,System.Boolean)">
            <summary>
            Sets the TkSubassemblyParameter value
            </summary>
            <param name="value">The new value</param>
            <param name="rebuild">If true attempts to rebuild the corridor</param>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkSubassemblyParameter.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions">
            <summary>
            Collection of Corridor extensions
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.GetTkFeatureLines(Autodesk.Civil.DynamoNodes.Baseline)">
            <summary>
            Returns a dictionary of the Baseline Toolkilt Corridor Feature Lines grouped by Code
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions._GetTkFeatureLines(Autodesk.Civil.DynamoNodes.Corridor)">
            <summary>
            Returns a dictionary of the Toolkit Corridor Feature Lines grouped by Code
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.GetTkFeatureLines(Autodesk.Civil.DynamoNodes.Corridor)">
            <summary>
            Returns a dictionary of the Toolkit Corridor Feature Lines grouped by Code
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.GetTkFeatureLinesByCode(Autodesk.Civil.DynamoNodes.Baseline,System.String)">
            <summary>
            Returns a list of Toolkit Corridor Feauture Lines for the given code
            </summary>
            <param name="baseline"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.GetTkFeatureLinesByCode(Autodesk.Civil.DynamoNodes.Corridor,System.String)">
            <summary>
            Returns a list of Toolkit Corridor Feauture Lines for the given code
            </summary>
            <param name="corridor"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.ByName(System.String)">
            <summary>
            If it doesn't exist it creates a new Corridor otherwise it returns the exisitng Corridor
            </summary>
            <param name="name">The name of the corridor</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.ByAlignmentProfile(System.String,Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.Profile,System.String)">
            <summary>
            If it doesn't exist it creates a new Corridor otherwise it returns the exisitng Corridor
            </summary>
            <param name="name">The name of the corridor</param>
            <param name="alignment">The alignment</param>
            <param name="profile">The profile defined on the Alignment</param>
            <param name="baselineName">The name of the Baseline</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.ByAlignmentProfileNames(System.String,System.String,System.String,System.String)">
            <summary>
            If it doesn't exist it creates a new Corridor otherwise it returns the exisitng Corridor
            </summary>
            <param name="name">The name of the corridor</param>
            <param name="alignmentName">The alignment name</param>
            <param name="profileName">The profile name defined on the Alignment</param>
            <param name="baselineName">The name of the Baseline</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.AddBaseline(Autodesk.Civil.DynamoNodes.Corridor,System.String,System.String,System.String,System.Boolean)">
            <summary>
            If it doesn't exist it creates a new Corridor otherwise it returns the exisitng Corridor
            </summary>
            <param name="name">The name of the corridor</param>
            <param name="alignmentName">The alignment name</param>
            <param name="profileName">The profile name defined on the Alignment</param>
            <param name="baselineName">The name of the Baseline</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.AddRegion(Autodesk.Civil.DynamoNodes.Baseline,System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Adds a BaselineRegion to the Baseline
            </summary>
            <param name="baseline">The Baseline</param>
            <param name="name">The BaselineRegion name</param>
            <param name="assemblyName">The assembly name</param>
            <param name="start">The starting station</param>
            <param name="end">The ending station</param>
            <param name="curveFreq">The sampling frequency along alignment curves</param>
            <param name="profileFreq">The sampling frequency along profile curves</param>
            <param name="spiralFreq">The sampling frequency along alignment spirals</param>
            <param name="tangentFreq">The sampling frequency along tangents</param>
            <param name="midOrdinate">The value of the mid-ordinate</param>
            <param name="curveOption">0-Increment, 1-Curvature, 2-Both</param>
            <param name="targetOption">0-None, 1-Increment, 2-Curvature</param>
            <param name="rebuild">If true it rebuilds the corridor</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.AddStationToRegion(Autodesk.Civil.DynamoNodes.BaselineRegion,System.Double,System.String)">
            <summary>
            Adds a station to a BaselineRegion
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="rawstation">The station value</param>
            <param name="description">The description of the station</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.AddStationToBaseline(Autodesk.Civil.DynamoNodes.Baseline,System.Double,System.String)">
            <summary>
            Adds a station to a Baseline
            </summary>
            <param name="baseline">The Baseline</param>
            <param name="rawstation">The station value</param>
            <param name="description">The description of the station</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.AddStationToCorridor(Autodesk.Civil.DynamoNodes.Corridor,System.Double,System.String)">
            <summary>
            Adds a station to all the Baselines in the Corridor
            </summary>
            <param name="corridor">The Corridor</param>
            <param name="rawstation">The station value</param>
            <param name="description">The description of the station</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.GetAdditionalStations(Autodesk.Civil.DynamoNodes.BaselineRegion)">
            <summary>
            Returns only the additional stations in the BaselineRegion
            </summary>
            <param name="region">The BaselineRegion</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.ClearAdditionalStations(Autodesk.Civil.DynamoNodes.BaselineRegion,System.Boolean)">
            <summary>
            Removes the additional stations from the BaselineRegion
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="rebuild">If true rebuilds the corridor</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.DeleteStation(Autodesk.Civil.DynamoNodes.BaselineRegion,System.Double,System.Boolean)">
            <summary>
            Removes the station from the BaselineRegion
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="station">The raw station to remove</param>
            <param name="rebuild">If true rebuilds the corridor</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.GetOverriddenStations(Autodesk.Civil.DynamoNodes.BaselineRegion)">
            <summary>
            Returns the overridden station infos for the BaselineRegion
            </summary>
            <param name="region">The BaselineRegion</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.RemoveOverriddenStation(Autodesk.Civil.DynamoNodes.BaselineRegion,System.Double,System.Boolean)">
            <summary>
            Removes the overridden station from the BaselineRegion
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="station">The overridden station to be removed</param>
            <param name="rebuild">If true rebuilds the corridor</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.SetStartStation(Autodesk.Civil.DynamoNodes.BaselineRegion,System.Double,System.Boolean)">
            <summary>
            Sets the starting station of the BaselineRegion
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="startStation">The new starting station</param>
            <param name="rebuild">If true it rebuilds the corridor</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.SetEndStation(Autodesk.Civil.DynamoNodes.BaselineRegion,System.Double,System.Boolean)">
            <summary>
            Sets the ending station of the BaselineRegion
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="endStation">The new ending station</param>
            <param name="rebuild">If true it rebuilds the corridor</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.SetRegionName(Autodesk.Civil.DynamoNodes.BaselineRegion,System.String,System.Boolean)">
            <summary>
            Sets the ending station of the BaselineRegion
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="name">The new name</param>
            <param name="rebuild">If true it rebuilds the corridor</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.GetAssembly(Autodesk.Civil.DynamoNodes.BaselineRegion)">
            <summary>
            Gets the Assembly associated to the BaselineRegion
            </summary>
            <param name="region">The BaselineRegion</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.SetAssembly(Autodesk.Civil.DynamoNodes.BaselineRegion,Autodesk.Civil.DynamoNodes.CorridorExtensions.Assembly,System.Boolean,System.Boolean)">
            <summary>
            Sets the Assembly associated to the BaselineRegion
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="assembly">The assembly</param>
            <param name="keepTargets">If true tries to maintain the targets in the BaselineRegion</param>
            <param name="rebuild">If true rebuilds the corridor</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.GetRegionTargetInfos(Autodesk.Civil.DynamoNodes.BaselineRegion)">
            <summary>
            Gets the BaselineRegion target infos
            </summary>
            <param name="region">The BaselineRegion</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.GetTargetInfoByParameters(Autodesk.Civil.DynamoNodes.BaselineRegion,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the BaselineRegion target info by its parameters
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="assemblyGroup">The assembly group name</param>
            <param name="subassembly">The subassembly name</param>
            <param name="name">The target name</param>
            <param name="targetType">The target type</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.AddTargetInfoToRegion(Autodesk.Civil.DynamoNodes.BaselineRegion,Autodesk.Civil.DynamoNodes.CorridorExtensions.SubassemblyTargetInfo,System.Boolean)">
            <summary>
            Adds the SubassemblyTargetInfo to the BaselineRegion 
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="targetInfo">The target info to add</param>
            <param name="rebuild">If true rebuilds the corridor</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.SetFrequency(Autodesk.Civil.DynamoNodes.BaselineRegion,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the BaselineRegion sampling frequency settings
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="atOffsetTargetsStartEnds">If true samples at Start and End of each target</param>
            <param name="atHorizontalGeomPoints">If true samples at every geometry point of the horizontal alignment</param>
            <param name="atTargetGeomPoints">If true samples at every geometry point of the targets</param>
            <param name="atProfileGeomPoints">If true samples at every geometry point of the profile</param>
            <param name="atHighLowPoints">If true samples at the high and low points of the profile</param>
            <param name="atSuperPoints">If true samples at every superelevation critical point</param>
            <param name="curveFreq">The sampling frequency along curves</param>
            <param name="profileFreq">The sampling frequency along the profile</param>
            <param name="spiralFreq">The sampling frequency along spirals</param>
            <param name="tangentFreq">The sampling frequency along tangents</param>
            <param name="targetFreq">The sampling frequency along targets</param>
            <param name="midOrdinate">The mid-oridinate along curves</param>
            <param name="midOrdinateTarget">The mid-oridinate along targets</param>
            <param name="curveOption">0-Increment, 1-Curvature, 2-Both</param>
            <param name="targetOption">0-None, 1-Increment, 2-Curvature</param>
            <param name="rebuild"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.MatchRegions(Autodesk.Civil.DynamoNodes.BaselineRegion,Autodesk.Civil.DynamoNodes.BaselineRegion,System.Int32,System.Boolean)">
            <summary>
            Tries to match the frequency parameters of a source BaselineRegion onto a target BaselineRegion.
            </summary>
            <param name="source">The source BaselineRegion</param>
            <param name="target">The target BaselineRegion</param>
            <param name="option">0-AssemblyTarget, 1-Frequency, 2-All</param>
            <param name="rebuild">If true rebuilds the Corridor that contains the target BaselineRegion</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.MergeRegions(Autodesk.Civil.DynamoNodes.BaselineRegion,System.Boolean,System.Boolean)">
            <summary>
            Tries to merge the BaselineRegion with the previous or the following
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="previous">If true merges the region with the previous, otherwise with the following</param>
            <param name="rebuild">If true rebuilds the Corridor that contains the target BaselineRegion</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.SplitRegion(Autodesk.Civil.DynamoNodes.BaselineRegion,System.Double)">
            <summary>
            Tries to split the BaselineRegion at the specified station
            </summary>
            <param name="region">The BaselineRegion</param>
            <param name="station">The split station</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.CorridorExtensions.GetRegionByName(Autodesk.Civil.DynamoNodes.Baseline,System.String)">
            <summary>
            Returns a Baseline Region by name
            </summary>
            <param name="baseline">The Baseline</param>
            <param name="name">The Region name, if it is an empty sting it returns all regions</param>
            <returns></returns>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkCorridorFeatureLine.StartStation">
            <summary>
            Get the start station of the feature line.
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkCorridorFeatureLine.EndStation">
            <summary>
            Get the end station of the feature line.
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkCorridorFeatureLine.Side">
            <summary>
            Get the side of the feature line. If side is left, this returns -1.0; otherwise, this returns 1.0.
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkCorridorFeatureLine.PointByStation(System.Double)">
            <summary>
            Get the point at a specified station.
            </summary>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkCorridorFeatureLine.ContainsStation(System.Double)">
            <summary>
            Checks if the TkCorridorFeautureLine contains the specified station
            </summary>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkCorridorFeatureLine.OffsetElevationByStation(System.Double)">
            <summary>
            Get the offset and elevation at a specified station.
            </summary>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkCorridorFeatureLine.CoordinateSystemByStation(System.Double,System.Boolean)">
            <summary>
            Get the coordinate system at a specified station.
            </summary>
            <param name="station"></param>
            <param name="vertical"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkCorridorFeatureLine.ExportAsPolylines(System.Object,System.Boolean)">
            <summary>
            Export the corridor feature line to a collection of AutoCAD polylines
            </summary>
            <param name="layer">The destination layer</param>
            <param name="matchStyle">If true tries to match the layer of the corridor feature line style in plan</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkCorridorFeatureLine.ExportAsAlignment(System.String,Autodesk.AutoCAD.DynamoNodes.Layer,Autodesk.Civil.DynamoNodes.LandDevelopment.Site,System.String,System.String,System.Int32)">
            <summary>
            Export the corridor feature line to an alignment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkCorridorFeatureLine.ExportAsGradingFeatureLine(System.String,Autodesk.AutoCAD.DynamoNodes.Layer,Autodesk.Civil.DynamoNodes.LandDevelopment.Site,System.Boolean,System.String,System.Boolean,System.Double,System.Double,System.Double)">
            <summary>
            Export the corridor feature line to a grading feature line
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CorridorExtensions.TkCorridorFeatureLine.ExportAsProfile(System.String,Autodesk.Civil.DynamoNodes.Alignment,Autodesk.AutoCAD.DynamoNodes.Layer,System.String,System.String)">
            <summary>
            Export the corridor feature line to a profile associated to an alignment
            </summary>
            <param name="profileName">The profile name</param>
            <param name="alignment">The alignment used to calculate the profile</param>
            <param name="layer">The layer</param>
            <param name="style"></param>
            <param name="lableSet"></param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.QTO">
            <summary>
            Collection of Corridor extensions
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.QTO.GetQTOReport(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Exports a PayItem QTO report from Civil 3D in JSON format.
            It uses the QTO XML report extracted by Civil 3D and allows for a more granular control of how the quantities are grouped.
            It looks for a single code set style to be applied to all corridors and it makes sure that all corridors have it assigned before the Takeoff takes place.
            It will reset the code set style on each corridor before the Takeoff if needed.
            Objects can have a PropertySet that contains a WBS and a Name.
            The WBS is used to separate the quantities with the same PayItem associated based on the project needs.
            The Name is used to override the Civil Objects name if needed and have a uniform representation in the QTO report.
            It also allows AutoCAD objects that can have PayItem assigned such as block references, lines, polylines, hatches, solids to be named and contribute to the QTO report.
            If a such a PropertySet cannot be found on the objects, the naming in the report will use the name of the Civil objects or the handle of the AutoCAD ones.
            It also allows to process TinVolumeSurfaces extracting the associated PayItems quantities for Cut/Fill without the need to extract the solids.
            The JSON report will be named after the Civil 3D file name with a trailing '_QTO' and saved in the specified working folder (by default the %temp% folder is used).
            The JSON report is a collection of items in this form:
            {
                "Rec": [
                    {
                        "ID": Pay Item Id as defined in the Pay Item file,
                        "Description": the same description in the Pay Item File,
                        "Unit": the unit of measure as defined in the Pay Item File,
                        "WBS": a text that defines the first grouping for the quantities based on the project needs
                        "Total": the total amount of the Pay Item Id for the WBS
                        "Partials": [
                            {
                                "Object1Name": partial quantity,
                                "Object2Name": partial quantity,
                            }
                        ]
                    }
                ]
            }
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.QTO.GetXMLQuantities(Autodesk.AutoCAD.ApplicationServices.Document,System.String,System.String,System.String,System.String)">
            <summary>
            Reads the QTO XML report exported from Civil 3D and collects the data based on objects.
            If the objects have a PropertySet attached with Name and WBS properties, they can be used to orgnanize the quantities in the results.
            </summary>
            <param name="adoc">The AutoCAD document</param>
            <param name="propertySetName">The name of the property</param>
            <param name="propertyName">The property in the property set used to name the object</param>
            <param name="propertyWBS">The property in the property set used to assign a WBS to the object</param>
            <param name="folder">The path to the folder used to read the QTO XML report</param>
            <returns>A list of Dictionaries with the quantities</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.QTO.GetObjectPropertyByName(Autodesk.AutoCAD.DatabaseServices.Transaction,Autodesk.AutoCAD.DatabaseServices.DBObject,System.String,System.String)">
            <summary>
            Looks for a property set and a property on an object and tries to return the value associated as a string
            </summary>
            <param name="t">The open transaction on the AutoCAD Document</param>
            <param name="obj">the Object</param>
            <param name="propertySetName">The name of the PropertySet</param>
            <param name="propertyName">The name of the Property in the PropertySet</param>
            <returns>the value associated to the property as a string</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.QTO.GetDetailedReport(Autodesk.AutoCAD.ApplicationServices.Document,Autodesk.Civil.ApplicationServices.CivilDocument,System.Boolean,System.String)">
            <summary>
            Extracts a QTO Report in XML in the %temp% folder.
            It creates separate CSV files for Count, Linear, Area and Volume quantities.
            </summary>
            <param name="adoc">the AutoCAD Document</param>
            <param name="cdoc">the Civil 3D Document</param>
            <param name="export">if true it exports a new XML, it might be time consuming</param>
            <param name="folder">the working folder</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.QTO.CreateQTODetail(System.String,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Cretes a GenerateQTODetail object necessary to export the QTO report
            </summary>
            <param name="alignmentName">the Alignment name</param>
            <param name="summary">if true creates a summary report</param>
            <param name="extents">0-Drawing, 1-Selection, 2-Sheet</param>
            <param name="onlySelectedPayItems">if true exports only the selected payitems</param>
            <param name="sheetOnly">if true exports the quantities of hte obejcts on the sheet only</param>
            <returns>a GenerateQTODetail object</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.QTO.CaptureCorridorCodeSetStyle(Autodesk.AutoCAD.ApplicationServices.Document,Autodesk.Civil.ApplicationServices.CivilDocument,System.String)">
            <summary>
            Collects the current code set styles associated to the corridor and asisgns the new one.
            It returns a dictionary of the corridor names and the code set style names.
            </summary>
            <param name="adoc">the AutoCAD document</param>
            <param name="cdoc">the Civil Document</param>
            <param name="code">the name of the code set style to assign</param>
            <returns>the dictionary that represents the status before executing the function to roll back to a previous state</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.QTO.ResetCorridorsCodeSetStyles(Autodesk.AutoCAD.ApplicationServices.Document,Autodesk.Civil.ApplicationServices.CivilDocument,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Resets the corridor code set styles.
            </summary>
            <param name="adoc">the AutoCAD document</param>
            <param name="cdoc">the Civil Document</param>
            <param name="previous">the dictionary that represents the status before executing the function to roll back </param>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.QTO.GetTINVolumeSurfaceCutFill(Autodesk.AutoCAD.ApplicationServices.Document,Autodesk.Civil.ApplicationServices.CivilDocument,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns the Cut/Fill quantities from Tin Volume Surfaces
            </summary>
            <param name="adoc">the AutoCAD Document</param>
            <param name="cdoc">the Civil 3D Document</param>
            <param name="propertySetName"></param>
            <param name="propertyName"></param>
            <param name="propertyWBS"></param>
            <param name="cutCode"></param>
            <param name="fillCode"></param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.Section">
            <summary>
            SectionView
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.Section.Name">
            <summary>
            The Name of the Section
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.Section.SourceName">
            <summary>
            SourceName of the Section
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.Section.SourceType">
            <summary>
            The SourceType of the Section
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.Section.GetGeometry(Autodesk.Civil.DynamoNodes.Section)">
            <summary>
            Return the Geometry of the Section if possible
            </summary>
            <param name="section">The Section</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.Section.GetSourceObject(Autodesk.Civil.DynamoNodes.Section)">
            <summary>
            Get the Source Object of the Section
            </summary>
            <param name="section">The Section</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.Section.GetSections(Autodesk.Civil.DynamoNodes.SectionView)">
            <summary>
            Return Sections associated to the SectionView
            </summary>
            <param name="sectionView">The SectionView</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.Section.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.VisibilityChecks.VisibilityChecks">
            <summary>
            Collection of Visibility Checks
            </summary>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.VisibilityChecks.VisibilityChecks.ByAlignmentProfile(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.Profile,System.Collections.Generic.List{Autodesk.Civil.DynamoNodes.Surface},System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Performs a visibility check for the Alignment and Profile against the Surfaces
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="profile">The Profile associated to the Alignment</param>
            <param name="start">The starting station</param>
            <param name="end">The ending station</param>
            <param name="interval">The interval along the Alignment, must be greater than zero</param>
            <param name="surfaces">The list of surfaces</param>
            <param name="minDistance">The minimum sight distance, must be greater than zero</param>
            <param name="eyeHeight">The eye eight from the Profile</param>
            <param name="eyeOffset">The eye offset from the Alignment</param>
            <param name="targetHeight">The target height from the Profile</param>
            <param name="targetOffset">The target offset from the Alignment</param>
            <param name="straight">If false uses the minimum distance as a station incerement along the Alignment</param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints">
            <summary>
            Collection of alignment constraints
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSSCSByArc1Angle(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="arc1Angle"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="sp3Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp4Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSSCSByArc1Length(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="arc1Len"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="sp3Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp4Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSSCSByArc1PassPt(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="passThroughPt"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="sp3Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp4Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSSCSByArc2Angle(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="arc2Angle"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="sp3Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp4Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSSCSByArc2Length(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="arc2Len"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="sp3Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp4Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSSCSByArc2PassPt(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="passThroughPt"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="sp3Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp4Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSSCSByEndPoint(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="end"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="sp3Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp4Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSSCSByStartPoint(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="start"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="sp3Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp4Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSCSByArc1Angle(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="arc1Angle"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp3Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSCSByArc1Length(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="arc1Len"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp3Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSCSByArc1Length(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="passThroughPt"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp3Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSCSByArc2Angle(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="arc2Angle"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp3Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSCSByArc2Length(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="arc2Len"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp3Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSCSByArc2PassPt(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="passThroughPt"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp3Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSCSByEndPoint(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="end"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp3Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSCSByStartPoint(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="start"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp3Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSCSByTan1Length(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="extTan1Len"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp3Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints.SCSCSByTan2Length(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates an AlignmentConstraints
            </summary>
            <param name="extTan2Len"></param>
            <param name="sp1Param"></param>
            <param name="arc1Radius"></param>
            <param name="sp2Param"></param>
            <param name="arc2Radius"></param>
            <param name="sp3Param"></param>
            <param name="isParamAValue"></param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities">
            <summary>
            Collection of alignment extensions
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.GetSpiralDefinitionType(System.Int32)">
            <summary>
            Get the spiral definition type. 
            </summary>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Add Fixed Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="passThrough">The passthrough Point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedLineOrCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Add Fixed Line or Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="passThroughPt1">The passthrough point 1</param>
            <param name="directionAtPt1">The direction at passthrough point 1</param>
            <param name="passThroughPt2">The passthrough point 2</param>
            <param name="directionAtPt2">The direction at passthrough point 2</param>
            <param name="passThroughPt3">The passthrough point 3</param>
            <param name="directionAtPt3">The direction at passthrough point 3</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedLinesOrCurves(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Add Fixed Lines or Curves to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="curve">The Dynamo curve</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Add Fixed Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="passThroughPt1">The passthrough point 1</param>
            <param name="passThroughPt2">The passthrough point 2</param>
            <param name="directionAtPt2">The direction at passthrough point 2</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Boolean)">
            <summary>
            Add Fixed Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="centerPt">The center point of the arc</param>
            <param name="passThroughPt">The passthrough point</param>
            <param name="isClockwise">If true the curve is clockwise</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,System.Boolean)">
            <summary>
            Add Fixed Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="passThroughPt1">The passthrough point 1</param>
            <param name="passThroughPt2">The passthrough point 2</param>
            <param name="radius">The arc radius</param>
            <param name="isClockwise">If true the curve is clockwise</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Add Fixed Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="passThroughPt1">The passthrough point 1</param>
            <param name="directionAtPt1">The direction a passthrough point 1</param>
            <param name="passThroughPt2">The passthrough point 2</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double,System.Boolean)">
            <summary>
            Add Fixed Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="passThroughPt1">The passthrough point 1</param>
            <param name="directionAtPt1">The direction a passthrough point 1</param>
            <param name="radius">The arc radius</param>
            <param name="isClockwise">If true the curve is clockwise</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point,System.Double,System.Boolean)">
            <summary>
            Add Fixed Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="centerPt">The center point of the arc</param>
            <param name="radius">The arc radius</param>
            <param name="isClockwise">If true the curve is clockwise</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Add Fixed Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The preivous AlignmentSubEntity</param>
            <param name="start">The start point</param>
            <param name="middle">The middle point</param>
            <param name="end">The end point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Add Fixed Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The preivous AlignmentSubEntity</param>
            <param name="passThroughPt1">The passthrough point 1</param>
            <param name="passThroughPt2">The passthrough point 2</param>
            <param name="radius">The arc radius</param>
            <param name="isClockwise">If true the arc is clockwise</param>
            <param name="isGreaterThan180">If true the arc angle is greater than 180°</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedLine(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Add Fixed Line to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="start">The start point</param>
            <param name="end">The end point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedLine(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Add Fixed Line to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="start">The start point</param>
            <param name="end">The end point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedLine(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double)">
            <summary>
            Add Fixed Line to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="distance">The distance</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedSpiral(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Int32)">
            <summary>
            Add Fixed Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="start">The start point</param>
            <param name="spiralPI">The spiral point of intersection</param>
            <param name="end">The end point</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedSpiral(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Add Fixed Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="start">The start point</param>
            <param name="spiralPI">The spiral point of intersection</param>
            <param name="radius">The arc radius</param>
            <param name="length">The spiral length</param>
            <param name="isClockwise">If true the spiral is clockwise</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <param name="spiralCurveType">Integer 1 InCurve, 2 OutCurve</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedSpiral(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Boolean,System.Int32)">
            <summary>
            Add Fixed Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="start">The start point</param>
            <param name="spiralPI">The spiral point of intersection</param>
            <param name="startRadius">The start arc radius</param>
            <param name="endRadius">The end arc radius</param>
            <param name="length">The spiral length</param>
            <param name="isClockwise">If true the spiral is clockwise</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <param name="spiralCurveType">Integer 1 InCurve, 2 OutCurve</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedSpiral(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Add Fixed Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="start">The start point</param>
            <param name="spiralPI">The spiral point of intersection</param>
            <param name="startRadius">The start arc radius</param>
            <param name="endRadius">The end arc radius</param>
            <param name="length">The spiral length</param>
            <param name="isClockwise">If true the spiral is clockwise</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <param name="spiralCurveType">Integer 0 InCurve, 1 OutCurve</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFixedSpiral(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Add Fixed Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="startRadius">The start arc radius</param>
            <param name="endRadius">The end arc radius</param>
            <param name="length">The spiral length</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingArcWithSpiral(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Int32,System.Double,System.Int32,System.Double,Autodesk.DesignScript.Geometry.Point,System.Boolean,System.Int32)">
            <summary>
            Add a floating arc and a spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="attach">The previous AlignmentSubEntity</param>
            <param name="attachType">Integer, 0 Append, 1 Prepend</param>
            <param name="spParam">The spiral parameter value (A or Length)</param>
            <param name="spiralParamType">Integer, 0 A Value, 1 Length</param>
            <param name="radius">The end arc radius</param>
            <param name="passThroughPt">The passthrough point</param>
            <param name="isGreaterThan180">if true the spiral angle is greater than 180°</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingArcWithSpiral(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Int32,System.Double,System.Int32,System.Double,System.Double,System.Boolean,System.Int32)">
            <summary>
            Add a floating arc and a spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="attach">The previous AlignmentSubEntity</param>
            <param name="attachType">Integer, 0 Append, 1 Prepend</param>
            <param name="spParam">The spiral parameter value (A or Length)</param>
            <param name="spiralParamType">Integer, 0 A Value, 1 Length</param>
            <param name="radius">The end arc radius</param>
            <param name="arcLength">The arc length</param>
            <param name="isClockwise">If true the curve is clockwise</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingCSS(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Add a floating Curve-Spiral-Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="passThroughPoint1">The passthrough point 1</param>
            <param name="passThroughPoint2">The passthrough point 1</param>
            <param name="sp3Param">The first sprial parameter value (A or Length)</param>
            <param name="sp4Param">The first sprial parameter value (A or Length)</param>
            <param name="spiralParamType">Integer, 0 A Value, 1 Length</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingCSS(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Add a floating Curve-Spiral-Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="radius">The arc radius</param>
            <param name="passThroughPt">The passthrough point</param>
            <param name="sp3Param">The first sprial parameter value (A or Length)</param>
            <param name="sp4Param">The first sprial parameter value (A or Length)</param>
            <param name="spiralParamType">Integer, 0 A Value, 1 Length</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Boolean,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Add a floating arc to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="subEnt">The AlignmentSubEntity</param>
            <param name="next">If true it considers the entity as next otherwise previous</param>
            <param name="passThroughPt">The passthrough point</param>
            <param name="dirAtPt">The direction at passthrough point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Boolean,Autodesk.DesignScript.Geometry.Point,System.Double,System.Boolean,System.Int32)">
            <summary>
            Add a floating arc to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="subEnt">The AlignmentSubEntity</param>
            <param name="next">If true it considers the entity as next otherwise previous</param>
            <param name="passThroughPt">The passthrough point</param>
            <param name="radius">The arc radius</param>
            <param name="isGreaterThan180">If true makes the arc angle greater than 180°</param>
            <param name="curveType">Integer, 0 Compound, 1 Reverse</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Boolean,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Add a floating arc to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="subEnt">The AlignmentSubEntity</param>
            <param name="next">If true it considers the entity as next otherwise previous</param>
            <param name="passThroughPt">The passthrough point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Boolean,System.Double,System.Double,System.Boolean,System.Int32)">
            <summary>
            Add a floating arc to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="subEnt">The AlignmentSubEntity</param>
            <param name="next">If true it considers the entity as next otherwise previous</param>
            <param name="radius">The arc radius</param>
            <param name="paramValue">The parameter value</param>
            <param name="isClockwise">If true the arc is clockwise</param>
            <param name="paramType">Integer, 0 ChordLength, 1 CurveAngle, 2 CurveLength,
            3 CurveThroughPoint, 4 DegreeOfCurve, 5 ExternalDist,
            6 MiddleOrdinate, 7 Radius, 8 TangentLength</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingLine(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Boolean,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Add a floating line to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="subEnt">The AlignmentSubEntity</param>
            <param name="next">If true it considers the entity as next otherwise previous</param>
            <param name="passThroughPt">The passthrough point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingLine(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Boolean,System.Double)">
            <summary>
            Add a floating line to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="subEnt">The AlignmentSubEntity</param>
            <param name="next">If true it considers the entity as next otherwise previous</param>
            <param name="length">The line length</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingLineWithSpiral(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Int32,System.Double,Autodesk.DesignScript.Geometry.Point,System.Int32,System.Int32)">
            <summary>
            Add a floating line with spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="attach">The attach AlignmentSubEntity</param>
            <param name="attachType">Integer, 0 Append, 1 Prepend</param>
            <param name="spParam">The spiral parameter (A or Length)</param>
            <param name="passThroughPt">The passthrough point</param>
            <param name="spiralParamType">Integer, 0 A Value, 1 Length</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingLineWithSpiral(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Int32,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Add a floating line with spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="attach">The attach AlignmentSubEntity</param>
            <param name="attachType">Integer, 0 Append, 1 Prepend</param>
            <param name="spParam">The spiral parameter (A or Length)</param>
            <param name="tanLength">The tangent length</param>
            <param name="spiralParamType">Integer, 0 A Value, 1 Length</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingSSC(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,System.Double,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,System.Int32,System.Int32)">
            <summary>
            Add a floating Spiral-Spiral-Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="sp1Param">The first spiral parameter (A or Length)</param>
            <param name="sp2Param">The second spiral parameter (A or Length)</param>
            <param name="passThroughPt1">The passthrough point 1</param>
            <param name="passThroughPt2">The passthorugh point 2</param>
            <param name="spiralParamType">Integer, 0 A Value, 1 Length</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatingSSC(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,System.Double,System.Double,Autodesk.DesignScript.Geometry.Point,System.Int32,System.Int32)">
            <summary>
            Add a floating Spiral-Spiral-Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="sp1Param">The first spiral parameter (A or Length)</param>
            <param name="sp2Param">The second spiral parameter (A or Length)</param>
            <param name="radius">The arc radius</param>
            <param name="passThroughPt">The passthorugh point</param>
            <param name="spiralParamType">Integer, 0 A Value, 1 Length</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFloatSpiral(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Boolean,System.Double,System.Double,System.Boolean,System.Int32)">
            <summary>
            Add a floating Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="subEnt">The AlignmentSubEntity</param>
            <param name="next">If true it considers the entity as next otherwise previous</param>
            <param name="radius">The arc radius</param>
            <param name="length">The spiral length</param>
            <param name="isClockwise">If true the spiral will be clockwise</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFreeCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Add a free curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="passThroughPt">The passthrough point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFreeCurve(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Add a free Curve to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="paramValue">The arc radius</param>
            <param name="paramType">Integer, 0 ChordLength, 1 CurveAngle, 2 CurveLength,
            3 CurveThroughPoint, 4 DegreeOfCurve, 5 ExternalDist,
            6 MiddleOrdinate, 7 Radius, 8 TangentLength</param>
            <param name="isGreaterThan180">If true the arc angle wil lbe greater than </param>
            <param name="curveType">Integer: 0 Compound, 1 Reverse</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFreeLine(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity)">
            <summary>
            Add a free line to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="next">The next AlignmentSubEntity</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFreeSCS(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,System.Double,System.Int32,System.Double,System.Boolean,System.Int32)">
            <summary>
            Add a free Spiral-Curve-Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="sp1Param">The first spiral parameter</param>
            <param name="sp2Param">The second spiral parameter</param>
            <param name="paramType">Integer, 0 A value, 1 Length</param>
            <param name="radius">The arc radius</param>
            <param name="isGreaterThan180">If true the overall curve angle will be greater than 180°</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFreeSCSCS(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints,System.Int32)">
            <summary>
            Add a free Spiral-Curve-Spiral-Curve-Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="constraints">The SCSCS Constraints</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFreeSCSSCS(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentConstraintsExtensions.AlignmentConstraints,System.Int32)">
            <summary>
            Add a free Spiral-Curve-Spiral-Spiral-curve-Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="constraints">The SCSSCS constraints</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFreeSpiral(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
            Add a free Spiral-Curve-Spiral-Spiral-curve-Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="spParam">The value of the spiral parameter (A or Length)</param>
            <param name="paramType">Integer, 0 A value, 1 Length</param>
            <param name="curveType">Integer: 0 Compound, 1 Reverse</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFreeSSBetweenCurves(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,System.Int32,System.Int32)">
            <summary>
            Add a free Spiral-Spiral between curves to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="spRatio">The value of the spiral parameter (A or Length)</param>
            <param name="paramType">Integer, 0 A value, 1 Length</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFreeSSBetweenTangents(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,System.Double,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Add a free Spiral-Spiral between tangents to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="sp1Param">The value of the first spiral parameter (A or Length)</param>
            <param name="sp2Param">The value of the second spiral parameter (A or Length)</param>
            <param name="paramType">Integer, 0 A value, 1 Length</param>
            <param name="isGreaterThan180">If true the curve angle will be greater than 180°</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFreeSTS(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,System.Int32)">
            <summary>
            Add a free Spiral-Tangent-Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="tanLen">The tangent length</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentEntitiesExtensions.AlignmentEntities.AddFreeSTS(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Add a free Spiral-Tangent-Spiral to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="previous">The previous AlignmentSubEntity</param>
            <param name="next">The next AlignmentSubEntity</param>
            <param name="sp1Param">The value of the first spiral parameter (A or Length)</param>
            <param name="sp2Param">The value of the second spiral parameter (A or Length)</param>
            <param name="paramType">Integer, 0 A value, 1 Length</param>
            <param name="definitionType">Integer: 0 BiQuadratic, 1 Bloss, 2 Clothoid,
            3 CubicParabola, 4 JapaneseCubic, 5 OffsetBiQuadratic,
            6 OffsetBloss, 7 OffsetClothoid, 8 OffsetCubicParabola,
            9 OffsetHalfWaveLenDimnTangent, 10 OffsetHalfWaveLenDimnTangent2, 11 OffsetInvalidSpiralType
            12 OffsetJapaneseCubic, 13 OffsetSinusoidal, 14 SineHalfWave, 15 Sinusoidal</param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity">
            <summary>
            Represent a Profile Entity
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.Constraint1">
            <summary>
            Constraint 1
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.Constraint2">
            <summary>
            Constraint 2
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.HighestDesignSpeed">
            <summary>
            HighestDesignSpeed
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.Length">
            <summary>
            Length
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.MinimumKValueHSD">
            <summary>
            MinimumKValueHSD
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.MinimumKValuePSD">
            <summary>
            MinimumKValuePSD
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.MinimumKValueSSD">
            <summary>
             MinimumKValueSSD
             </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.EntityType">
            <summary>
            SubEntity Type
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.After">
            <summary>
            returns the Entity After
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.Before">
            <summary>
            Returns the Entity Before
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.StartStation">
            <summary>
            Returns the StartStation
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.StartElevation">
            <summary>
            Returns the StartElevation
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.EndStation">
            <summary>
            Returns the StartStation
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.EndElevation">
            <summary>
            Returns the StartElevation
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.EntityId">
            <summary>
            The Entity Id
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.GetParameters">
            <summary>
            Collection of ProfileEntity Parameters
            </summary>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.GetParameterByName(System.String)">
            <summary>
            Returns a Parameter value by name
            </summary>
            <param name="name">The name of the parameter</param>
            <returns>The value associated to the paraterms if it exists, otherwise null.</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.SetParameterValueByName(System.String,System.Object)">
            <summary>
            Sets the Parameter value by name
            </summary>
            <param name="name">the name of the parameter</param>
            <param name="val">the new value</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.GetRadius">
            <summary>
            Returns the Radius value for a Symmetric Parabola, otherwise 0.
            </summary>
            <param name="name">The name of the parameter</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.GetHighLowPointInfo">
            <summary>
            Returns the Radius value for a Symmetric Parabola, otherwise 0.
            </summary>
            <param name="name">The name of the parameter</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.CivilObjectExtensions">
            <summary>
            Collection of CivilObject extensions
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CivilObjectExtensions.GetParameters(Autodesk.Civil.DynamoNodes.CivilObject)">
            <summary>
            Collection of CivilObject Parameters
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.CivilObjectExtensions.GetParameterByName(Autodesk.Civil.DynamoNodes.CivilObject,System.String)">
            <summary>
            Returns a Parameter value by name
            </summary>
            <param name="name">The name of the parameter</param>
            <returns>The value associated to the paraterms if it exists, otherwise null.</returns>
            
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.AlignmentExtensions">
            <summary>
            Collection of alignment extensions
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.StationFormatting(System.Double,System.String,System.String)">
            <summary>
            Returns a formatted station with "+" sign to separate the hundreds and rounding to the second decimal digit.
            If the units is equal to "m" the "+" sign separates the thousands and the rounding is at the third decimal digit.
            Ex. 123.4564 meters > 0+123.456m
            </summary>
            <param name="station">The numerical station value</param>
            <param name="units">The units symbol</param>
            <param name="separator">The symbol used for the integer separator</param>
            <returns>The formatted station value</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetBearingByStationOffset(Autodesk.Civil.DynamoNodes.Alignment,System.Double,System.Double,System.Double)">
            <summary>
            Returns Easting, Northing and Bearing of a Station-Offset pair against the Alignment.
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="station">The station</param>
            <param name="offset">The offset</param>
            <param name="tolerance">The tolerance</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetBearingByPoint(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point,System.Double)">
            <summary>
            Returns Easting, Northing and Bearing of a Point against the Alignment.
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="point">The Point</param>
            <param name="tolerance">The tolerance</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetStationOffsetElevationByPoint(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Returns Station, Offset and Elevation of a Point against the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <param name="point">The point</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.PIStations(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the PI stations of the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The list of stations</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.PIStationOffset(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the PI stations and offsets of the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The list of stations</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.PIPoints(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the PI points of the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The list of Points</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.Reverse(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Reverse the alignment and the profiles
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The Alignment</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.SuperTransStations(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the Superelevation transition stations of the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The list of stations</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.CurveAtIncrement(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the curve at increment stations of the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The list of stations</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.CurveByCurvature(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the curve by curvature stations of the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The list of stations</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetStationEquations(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the station equations of the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The list of station equations</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetOffsetAlignments(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the children Offset Alignment of the Alignment.
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The list of Offset Aligments</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.OffsetTargetCurve(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the offset target curves stations of the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The list of stations</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.RangeEnd(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the range end stations of the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The list of stations</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.RangeStart(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the range start stations of the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The list of stations</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetSampleLineStations(Autodesk.Civil.DynamoNodes.Alignment,System.String)">
            <summary>
            Returns the Sample Line Groups stations along the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <param name="name">The name of the Sample Line Group, if empty it returns all</param>
            <returns>A dictionary </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.SampleLineByStation(Autodesk.Civil.DynamoNodes.Alignment,System.String,System.Double,System.String,System.Double,System.Double)">
            <summary>
            Creates sample line at station along the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <param name="group">The name of the sample line group</param>
            <param name="station">The station of the sample line</param>
            <param name="sampleLinePrefix">The prefix of the sample line</param>
            <param name="rightWidth">Positive value of the Sample Line width to the right of the alignment</param>
            <param name="leftWidth">Positive value of the Sample Line width to the left of the alignment</param>
            <returns>True if successful</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetSlopeAtStation(Autodesk.Civil.DynamoNodes.Alignment,System.Double,System.Boolean)">
            <summary>
            Returns the slope on the alignment at a given station in different cross-segment types
            </summary>
            <param name="alignment">The alignment</param>
            <param name="station">The station</param>
            <param name="applySmoothing">Applying smoothing</param>
            <returns>A Dictionary of values</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetCantCriticalStations(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the alignment cant critical stations
            </summary>
            <param name="alignment">The alignment</param>
            <returns>A list of values</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetCantInfoAtStation(Autodesk.Civil.DynamoNodes.Alignment,System.Double)">
            <summary>
            Returns the alignment cant info at station
            </summary>
            <param name="alignment">The alignment</param>
            <param name="station">The station</param>
            <returns>A list of values</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetInstantaneousRadiusAtStation(Autodesk.Civil.DynamoNodes.Alignment,System.Double)">
            <summary>
            Returns the instantenous radius at a given station and the direction (-1 if left, 0 if straight, +1 if right).
            </summary>
            <param name="alignment">The alignment</param>
            <param name="station">The station</param>
            <returns>The radius </returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetSubEntitiesAtStation(Autodesk.Civil.DynamoNodes.Alignment,System.Double)">
            <summary>
            Returns the Alignment subentities at a given station
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="station">The station.</param>
            <returns>The AlignmentSubEntities</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetSubEntities(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the subentities in the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The AlignmentSubEntities</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetGeometry(Autodesk.Civil.DynamoNodes.Alignment,System.String)">
            <summary>
            Returns the geometry entities in the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <param name="layer">The layer name of the Alignment. If empty it will consider all the items related to the Alignment.</param>
            <returns>The list of list of geometry entities</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.AddProfileByName(Autodesk.Civil.DynamoNodes.Alignment,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a Profile to the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <param name="profileName">The name of the new Profile</param>
            <param name="layer">The layer name of the Profile</param>
            <param name="style">The Profile Style name</param>
            <param name="labelSet">The label set name</param>
            <returns>A Profile</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.AddProfileBySurface(Autodesk.Civil.DynamoNodes.Alignment,System.String,System.String,System.String,System.String,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Adds a Surface Profile to the Alignment
            </summary>
            <param name="alignment">The alignment</param>
            <param name="profileName">The name of the new Profile</param>
            <param name="surface">The Surface name</param>
            <param name="layer">The layer name of the Profile</param>
            <param name="style">The Profile Style name</param>
            <param name="labelSet">The label set name</param>
            <param name="offset">The offset value</param>
            <param name="sampleStart">The sample Start value</param>
            <param name="sampleEnd">The sample End value</param>
            <returns>A Profile</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.CreateAlignmentByPolyline(System.String,Autodesk.AutoCAD.DynamoNodes.Polyline,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates an Alignment by Polyline
            </summary>
            <param name="name">The Alignment name. If the name is already used it returns the existing Alignment.</param>
            <param name="polyline">The Polyline used for the alignment</param>
            <param name="site">The Site name</param>
            <param name="layer">The layer name</param>
            <param name="style">The Alignment style name</param>
            <param name="labelSet">The label set</param>
            <param name="addCurves">If true adds the curves between the tangents in the Alignment</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.CreateAlignmentPlaceholder(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Creates an Alignment placeholder
            </summary>
            <param name="name">The Alignment name. If the name is already used it returns the existing Alignment.</param>
            <param name="site">The Site name</param>
            <param name="layer">The layer name</param>
            <param name="style">The Alignment style name</param>
            <param name="labelSet">The label set</param>
            <param name="alignmentType">Integer: 1 Centerline, 2 Offset, 3 CurbReturn, 4 Utility, 5 Rail</param>
            <returns>An Alignment</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetSuperelevationData(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Gets the Superelevation Critical Stations data from the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.AddSuperelevationData(Autodesk.Civil.DynamoNodes.Alignment,System.Double,System.String,System.String)">
            <summary>
            Adds the Superelevation data to the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="station">The station</param>
            <param name="criticalStationType">The Critical Station Type</param>
            <param name="attainmentRegionType">The Attainment Region Type</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.RemoveSuperelevationAtStation(Autodesk.Civil.DynamoNodes.Alignment,System.Double)">
            <summary>
            Removes the Superelevation data at station from the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="station">The station</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetSupereleavationDataAtStation(Autodesk.Civil.DynamoNodes.Alignment,System.Double,System.Double)">
            <summary>
            Returns the Superelevation data at station on the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <param name="station">The station</param>
            <param name="tolerance">The tolerance value</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.GetSuperelevationCurves(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns a list of Superelevation Curves for the Alignment
            </summary>
            <param name="alignment">The Alignment</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentExtensions.OffsetAlignmentInfo(Autodesk.Civil.DynamoNodes.Alignment)">
            <summary>
            Returns the Offset Alignment Info
            </summary>
            <param name="alignment">The alignment</param>
            <returns>The widening parameters</returns>
            
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions">
            <summary>
            Collection of surface extensions
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.GetMesh(Autodesk.Civil.DynamoNodes.TinSurface)">
            <summary>
            Returns the Mesh if the TinSurface
            </summary>
            <param name="surface">The surface</param>
            <returns>The Mesh</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.AddStandardBreaklines(Autodesk.Civil.DynamoNodes.TinSurface,System.Collections.Generic.List{Autodesk.AutoCAD.DynamoNodes.Object},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds breaklines to the TinSurface
            </summary>
            <param name="surface">The surface</param>
            <param name="breaklineEntities">The list of breakline entities</param>
            <param name="midOrdinate">The mid ordinate value</param>
            <param name="maxDist">The maximum distance</param>
            <param name="weedingDist">The weeding distance</param>
            <param name="weedingAngle">The weeding angle</param>
            <returns>The TinSurface</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.AddNonDestructiveBreaklines(Autodesk.Civil.DynamoNodes.TinSurface,System.Collections.Generic.List{Autodesk.AutoCAD.DynamoNodes.Object},System.Double)">
            <summary>
            Adds Non Destructive Breaklines to the TinSurface
            </summary>
            <param name="surface">The surface</param>
            <param name="breaklineEntities">The list of breakline entities</param>
            <param name="midOrdinate">The mid ordinate value</param>
            <returns>The TinSurface</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.AddProximityBreaklines(Autodesk.Civil.DynamoNodes.TinSurface,System.Collections.Generic.List{Autodesk.AutoCAD.DynamoNodes.Object},System.Double)">
            <summary>
            Adds Proximity Breaklines to the TinSurface
            </summary>
            <param name="surface">The surface</param>
            <param name="breaklineEntities">The list of breakline entities</param>
            <param name="midOrdinate">The mid ordinate value</param>
            <returns>The TinSurface</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.AddWallBreaklines(Autodesk.Civil.DynamoNodes.TinSurface,System.Collections.Generic.List{Autodesk.AutoCAD.DynamoNodes.Object},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds Wall Breaklines to the TinSurface
            </summary>
            <param name="surface">The surface</param>
            <param name="breaklineEntities">The list of breakline entities</param>
            <param name="midOrdinate">The mid ordinate value</param>
            <param name="maxDist">The maximum distance</param>
            <param name="weedingDist">The weeding distance</param>
            <param name="weedingAngle">The weeding angle</param>
            <returns>The TinSurface</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.ExtractBorder(Autodesk.Civil.DynamoNodes.TinSurface)">
            <summary>
            Extracts the objects defining the TinSurface border.
            </summary>
            <param name="surface">The surface</param>
            <returns>The Objects defining the TinSurface border</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.ExtractContoursByInterval(Autodesk.Civil.DynamoNodes.TinSurface,System.Double)">
            <summary>
            Extracts the objects defining the TinSurface countours.
            </summary>
            <param name="surface">The surface</param>
            <param name="interval">The interval</param>
            <returns>The Objects defining the TinSurface countours</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.ExtractContoursByElevationsInterval(Autodesk.Civil.DynamoNodes.TinSurface,System.Double,System.Double,System.Double)">
            <summary>
            Extracts the objects defining the TinSurface countours in an elevation range.
            </summary>
            <param name="surface">The surface</param>
            <param name="lowElevation">The low elevation</param>
            <param name="highElevation">The high elevation</param>
            <param name="interval">The interval</param>
            <returns>The Objects defining the TinSurface countours</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.ExtractWatershed(Autodesk.Civil.DynamoNodes.TinSurface)">
            <summary>
            Extracts the watershed of the TinSurface.
            </summary>
            <param name="surface">The surface</param>
            <returns>The Objects defining the TinSurface watershed</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.CreateSolids(Autodesk.Civil.DynamoNodes.TinSurface,System.Double,System.String,System.String)">
            <summary>
            Extracts the solids at constant depth from the TinSurface.
            </summary>
            <param name="surface">The surface</param>
            <param name="depth">The depth of the solids</param>
            <param name="layer">The layer of the solids</param>
            <param name="path">The path to the file, if there are multiple surfaces, the solids are NOT appended to the same file. If empty it will add the solids to the current drawing.</param>
            <returns>The Solids</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.CreateSolidsAtFixedElevation(Autodesk.Civil.DynamoNodes.TinSurface,System.Double,System.String,System.String)">
            <summary>
            Extracts the solids at fixed elevation from the TinSurface.
            </summary>
            <param name="surface">The surface</param>
            <param name="elevation">The fixed elevation of the solids</param>
            <param name="layer">The layer of the solids</param>
            <param name="path">The path to the file, if there are multiple surfaces, the solids are NOT appended to the same file. If empty it will add the solids to the current drawing.</param>
            <returns>The Solids</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.CreateSolidsAtSurface(Autodesk.Civil.DynamoNodes.TinSurface,Autodesk.Civil.DynamoNodes.TinSurface,System.String,System.String)">
            <summary>
             Extracts the solids between top and bottom Tin Surfaces.
             </summary>
             <param name="surface">The top surface</param>
             <param name="bottomSurface">The bottom surface</param>
             <param name="layer">The layer of the solids</param>
             <param name="path">The path to the file, if there are multiple surfaces, the solids are NOT appended to the same file. If empty it will add the solids to the current drawing.</param>
             <returns>The Solids</returns>
             
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.TinSurfaceExtensions.Crop(Autodesk.Civil.DynamoNodes.TinSurface,System.String,System.Collections.Generic.List{Autodesk.AutoCAD.DynamoNodes.Object},Autodesk.DesignScript.Geometry.Point)">
            <summary>
             Crops the Tin Surfaces by a list of cropping objects.
             </summary>
             <param name="surface">The Tin Surface</param>
             <param name="newName">The name of the cropped surface</param>
             <param name="croppingObjects">The collection of planar curves to crop the Tin Surface</param>
             <param name="keepLocation">The point that specifies which part to keep after the crop</param>
             <returns>The cropped Tin Surface</returns>
             
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.ProfileExtensions">
            <summary>
            Collection of profile extensions
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.PVIs(Autodesk.Civil.DynamoNodes.Profile)">
            <summary>
            Returns the PVI of the Profile
            </summary>
            <param name="profile">The profile</param>
            <returns>The list of PVIs</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.MinElevation(Autodesk.Civil.DynamoNodes.Profile,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the minimum elevation of the Profile and a list of stations close to the minimum elevation in a given range.
            </summary>
            <param name="profile">The profile</param>
            <param name="startStation">The starting station value, if it is equal to the ending station it considers the profile starting station</param>
            <param name="endStation">The ending station value, if it is equal to the starting station it considers the profile ending station</param>
            <param name="increment">The station increment</param>
            <param name="tolerance">The tolerance for selecting the station</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.MaxElevation(Autodesk.Civil.DynamoNodes.Profile,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the maximum elevation of the Profile and a list of stations close to the maximum elevation in a given range.
            </summary>
            <param name="profile">The profile</param>
            <param name="startStation">The starting station value, if it is equal to the ending station it considers the profile starting station</param>
            <param name="endStation">The ending station value, if it is equal to the starting station it considers the profile ending station</param>
            <param name="increment">The station increment</param>
            <param name="tolerance">The tolerance for selecting the station</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.HighLowPoints(Autodesk.Civil.DynamoNodes.Profile,System.Double,System.Double)">
            <summary>
            Returns the high and low points elevation and stations with grade close to zero along the porfile
            </summary>
            <param name="profile">The profile</param>
            <param name="increment">The station increment</param>
            <param name="tolerance">The tolerance for the station selection</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.ProfileEntities(Autodesk.Civil.DynamoNodes.Profile)">
            <summary>
            Returns the ProfileEntities of the Profile
            </summary>
            <param name="profile">The profile</param>
            <returns>The list of ProfileEntities</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddPVI(Autodesk.Civil.DynamoNodes.Profile,System.Double,System.Double)">
            <summary>
            Adds a PVI in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="elevation">The PVI elevation</param>
            <param name="station">The PVI station</param>
            <returns>A new PVI</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddPVIArc(Autodesk.Civil.DynamoNodes.Profile,System.Double,System.Double,System.Double)">
            <summary>
            Adds an Arc PVI in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="elevation">The PVI elevation</param>
            <param name="station">The PVI station</param>
            <param name="radius">The arc radius</param>
            <returns>A new PVI</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddPVIAsymParabola(Autodesk.Civil.DynamoNodes.Profile,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds an Asymmetric Parabola PVI in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="elevation">The PVI elevation</param>
            <param name="station">The PVI station</param>
            <param name="tanLen1">The length of the first tangent</param>
            <param name="tanLen2">The length of the second tangent</param>
            <returns>A new PVI</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddPVISymParabola(Autodesk.Civil.DynamoNodes.Profile,System.Double,System.Double,System.Double)">
            <summary>
            Adds an Symmetric Parabola PVI in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="elevation">The PVI elevation</param>
            <param name="station">The PVI station</param>
            <param name="curveLen">The length of the curve</param>
            <returns>A new PVI</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddFreeAsymmetricParabolaByPVIAndLengths(Autodesk.Civil.DynamoNodes.Profile,Autodesk.Civil.DynamoNodes.PVI,System.Double,System.Double)">
            <summary>
            Adds a Free Asymmetric Parabola in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="attach">The PVI to attacch to the profile</param>
            <param name="length1">The first length</param>
            <param name="length2">The second length</param>
            <returns>A new ProfileEntity</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddFreeCircularCurveByPVIAndLength(Autodesk.Civil.DynamoNodes.Profile,Autodesk.Civil.DynamoNodes.PVI,System.Double)">
            <summary>
            Adds a Free Circular Curve in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="attach">The PVI to attacch to the profile</param>
            <param name="length">The length of the curve</param>
            <returns>A new ProfileEntity</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddFreeCircularCurveByPVIAndRadius(Autodesk.Civil.DynamoNodes.Profile,Autodesk.Civil.DynamoNodes.PVI,System.Double)">
            <summary>
            Adds a Free Circular Curve in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="attach">The PVI to attacch to the profile</param>
            <param name="radius">The arc radius</param>
            <returns>A new ProfileEntity</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddFreeSymmetricParabolaByK(Autodesk.Civil.DynamoNodes.Profile,Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity,Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity,System.Int32,System.Double)">
            <summary>
            Adds a Free Symmetric Parabola in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="previous">The previous ProfileEntity</param>
            <param name="next">The next ProfileEntity</param>
            <param name="verticalCurve">If 0 the curve is a Crest, if 1 the curve is a Sag</param>
            <param name="k">The K value</param>
            <returns>A new ProfileEntity</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddFreeSymmetricParabolaByLength(Autodesk.Civil.DynamoNodes.Profile,Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity,Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity,System.Int32,System.Double,System.Boolean)">
            <summary>
            Adds a Free Symmetric Parabola in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="previous">The previous ProfileEntity</param>
            <param name="next">The next ProfileEntity</param>
            <param name="verticalCurve">If 0 the curve is a Crest, if 1 the curve is a Sag</param>
            <param name="length">The curve length</param>
            <param name="preferFlat">Prefer Flat</param>
            <returns>A new ProfileEntity</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddFreeSymmetricParabolaByPVIAndCurveLength(Autodesk.Civil.DynamoNodes.Profile,Autodesk.Civil.DynamoNodes.PVI,System.Double)">
            <summary>
            Adds a Free Symmetric Parabola in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="attach">The PVI to attach the Profile</param>
            <param name="length">The curve length</param>
            <returns>A new ProfileEntity</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddFreeSymmetricParabolaByPVIAndK(Autodesk.Civil.DynamoNodes.Profile,Autodesk.Civil.DynamoNodes.PVI,System.Double)">
            <summary>
            Adds a Free Symmetric Parabola in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="attach">The PVI to attach the Profile</param>
            <param name="k">The K value</param>
            <returns>A new ProfileEntity</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddFreeSymmetricParabolaByRadius(Autodesk.Civil.DynamoNodes.Profile,Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity,Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity,System.Int32,System.Double)">
            <summary>
            Adds a Free Symmetric Parabola in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="previous">The previous ProfileEntity</param>
            <param name="next">The next ProfileEntity</param>
            <param name="verticalCurve">If 0 the curve is a Crest, if 1 the curve is a Sag</param>
            <param name="radius">The curve radius</param>
            <returns>A new ProfileEntity</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileExtensions.AddFreeTangent(Autodesk.Civil.DynamoNodes.Profile,Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity,Autodesk.Civil.DynamoNodes.ProfileEntitiesExtensions.ProfileEntity)">
            <summary>
            Adds a Free Tangent in the Profile
            </summary>
            <param name="profile">The profile</param>
            <param name="previous">The previous ProfileEntity</param>
            <param name="next">The next ProfileEntity</param>
            <returns>A new ProfileEntity</returns>
            
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity">
            <summary>
            Represent an Alignment SubEntity
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.CurveGroupIndex">
            <summary>
            Curve Group Index
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.CurveGroupSubEntityIndex">
            <summary>
            Curve Group SubEnbtity Index
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.EndPoint">
            <summary>
            End Point
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.EndStation">
            <summary>
            End Station
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.Length">
            <summary>
            Length
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.StartPoint">
            <summary>
            Start Point
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.StartStation">
            <summary>
            Start Station
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.SubEntityType">
            <summary>
            SubEntity Type
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.EntityId">
            <summary>
            Entity ID in the alignment
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.After">
            <summary>
            Returns the AlignmentSubEntity after
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.Before">
            <summary>
            Returns the AlignmentSubEntity before
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.Entity">
            <summary>
            The internal AlignmentEntity associated to the AlignmentSubentity
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.GetParameters">
            <summary>
            Collection of AlignmentSubentity Parameters
            </summary>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.GetParameterByName(System.String)">
            <summary>
            Returns a Parameter value by name
            </summary>
            <param name="name">The name of the parameter</param>
            <returns>The value associated to the paraterms if it exists, otherwise null.</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.SetParameterValueByName(System.String,System.Object)">
            <summary>
            Sets a Parameter value by name
            </summary>
            <param name="name">The name of the parameter</param>
            <param name="val">The new value</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.AlignmentSubEntitiesExtensions.AlignmentSubEntity.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PVI">
            <summary>
            Represent a Profile PVI
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PVI.Elevation">
            <summary>
            Elevation
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PVI.GradeIn">
            <summary>
            Grade In
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PVI.GradeOut">
            <summary>
            Grade Out
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PVI.HeadlightSightDistance">
            <summary>
            Headlight Sight Distance
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PVI.PassingSightDistance">
            <summary>
            Passing Sight Distance
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PVI.PVIType">
            <summary>
            The PVI Type
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PVI.Station">
            <summary>
            Station
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PVI.StoppingSightDistance">
            <summary>
            Stopping Sight Distance
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PVI.Internal">
            <summary>
            The AeccProfilePVI
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PVI.GetParameters">
            <summary>
            Collection of PVI Parameters
            </summary>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PVI.GetParameterByName(System.String)">
            <summary>
            Returns a Parameter value by name
            </summary>
            <param name="name">The name of the parameter</param>
            <returns>The value associated to the paraterms if it exists, otherwise null.</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PVI.SetParameterValueByName(System.String,System.Object)">
            <summary>
            Sets the Parameter value b yname
            </summary>
            <param name="name">The parameter value</param>
            <param name="val">The new value</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PVI.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable.Name">
            <summary>
            The OdTable name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable.Description">
            <summary>
            The OdTable description
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable.GetOdTables">
            <summary>
            Gets the Object Data tables associated to the active project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable.GetOdTableByName(System.String)">
            <summary>
            Gets the Object Data table with that name associated to the active project.
            </summary>
            <param name="name">The table name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable.GetOdFields">
            <summary>
            Gets the Obejct Data fields in the table
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable.GetOdFieldByName(System.String)">
            <summary>
            Gets the Obejct Data field in the table by name
            </summary>
            <param name="name">The field name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable.GetObjectOdRecords(Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Returns a list of records associated to the object.
            </summary>
            <param name="obj">The object</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable.AddTable(System.String,System.Collections.Generic.List{Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdField},System.String,System.Boolean)">
            <summary>
            Adds a new table to the active project
            </summary>
            <param name="name">The table name</param>
            <param name="fields">The list of fields</param>
            <param name="description">The table description</param>
            <param name="isXDataRecords">True to set the table as XData Records</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable.RemoveTableByName(System.String)">
            <summary>
            Removes a table from the active project
            </summary>
            <param name="name">The table name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable.RenameTable(System.String,System.String)">
            <summary>
            Renames a table in the active project
            </summary>
            <param name="oldName">The old table name</param>
            <param name="newName">The new table name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdField.Name">
            <summary>
            The field name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdField.Type">
            <summary>
            The field Data Type
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdField.Description">
            <summary>
            The field description
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdField.Index">
            <summary>
            The Field index
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdField.Create(System.String,System.String,System.String)">
            <summary>
            Creates an OdField
            </summary>
            <param name="name">The OdField name</param>
            <param name="dataType">The data type: Integer, Real, Character, Point</param>
            <param name="description">The OdField description</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdField.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdRecord.Values">
            <summary>
            Returns the record values
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdRecord.Create(Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdTable,Autodesk.AutoCAD.DynamoNodes.Object)">
            <summary>
            Adds a record of the drawing object to the table
            </summary>
            <param name="table">The table</param>
            <param name="obj">The object</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdRecord.GetValueByName(System.String)">
            <summary>
            Gets the object record value by name
            </summary>
            <param name="name">The field name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdRecord.SetValueByName(System.String,System.Object)">
            <summary>
            Sets the object record value by name
            </summary>
            <param name="name">The field name</param>
            <param name="value">The new value</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.ObjectData.OdRecord.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.MapLayer.Name">
            <summary>
            The MapLayer name
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.MapLayer.GetFeaturesByTextFilter(System.String)">
            <summary>
            Returns the features on the MapLayer that satisfy a filter
            </summary>
            <param name="filter">The text filter</param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.GIS.MapLayer.SpatialOperations">
            <summary>
            The spatial operations
            </summary>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.MapLayer.GetFeaturesBySpatialFilter(Autodesk.DesignScript.Geometry.Curve,Autodesk.Civil.DynamoNodes.GIS.MapLayer.SpatialOperations)">
            <summary>
            Returns the MapFeature on the layer that satisfy the saptial filter
            </summary>
            <param name="boundary">The Dynamo curve that defines the extents of the filter</param>
            <param name="operation">The spatial operation for the filter</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.MapLayer.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.Map.Name">
            <summary>
            The Map name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.Map.Layers">
            <summary>
            The Layers in the Map
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.Map.Current">
            <summary>
            Returns the current Map
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.Map.GetLayerByName(System.String)">
            <summary>
            Returns the Layer with the given name
            </summary>
            <param name="name">The name of the Layer</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.Map.LatLongToXY(Autodesk.AutoCAD.DynamoNodes.Document,System.Double,System.Double)">
            <summary>
            Converts the Latitiude and Longitude to XY coordinates in the Document
            </summary>
            <param name="document">The Document</param>
            <param name="latitude">The latitude in degrees</param>
            <param name="longitude">The longitude in degrees</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.Map.GetRange(Autodesk.AutoCAD.DynamoNodes.Document)">
            <summary>
            Returns the range for the Dpcument coordinate system
            </summary>
            <param name="document">The Document</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.Map.LatLongToPoint(Autodesk.AutoCAD.DynamoNodes.Document,System.Double,System.Double)">
            <summary>
            Converts the Latitiude Longitude for the Document to a Point 
            </summary>
            <param name="document">The Document</param>
            <param name="latitude">The latitude in degrees</param>
            <param name="longitude">The longitude in degrees</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.Map.LatLongToPointInverse(Autodesk.AutoCAD.DynamoNodes.Document,System.Double,System.Double)">
            <summary>
            Converts the Latitiude Longitude for the Document to a Point with swapped Coordinate Systems
            </summary>
            <param name="document">The Document</param>
            <param name="latitude">The latitude in degrees</param>
            <param name="longitude">The longitude in degrees</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.Map.XYToLatLong(Autodesk.AutoCAD.DynamoNodes.Document,System.Double,System.Double)">
            <summary>
            Converts the XY coordinates to Latitude and Longitude for the Document
            </summary>
            <param name="document">The Document</param>
            <param name="x">The X Coordinate</param>
            <param name="y">The Y Coordinate</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.Map.XYToLatLongTransform(Autodesk.AutoCAD.DynamoNodes.Document,System.Double,System.Double)">
            <summary>
            Converts the XY coordinates to Latitude and Longitude for the Document via Transform
            </summary>
            <param name="document">The Document</param>
            <param name="x">The X Coordinate</param>
            <param name="y">The Y Coordinate</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.Map.GetSelection">
            <summary>
            Returns the MapFeatures selected
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.Map.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.MapProperty.Name">
            <summary>
            The property name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.MapProperty.Type">
            <summary>
            The property Data Type
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.MapProperty.Value">
            <summary>
            The property value
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.MapProperty.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.MapFeature.Id">
            <summary>
            The feature id
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.MapFeature.Layer">
            <summary>
            The Class name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.MapFeature.Properties">
            <summary>
            The feature properties
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.GIS.MapFeature.Geometry">
            <summary>
            The geometry associated to the feature
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.MapFeature.SetPropertyValueByName(System.String,System.Object,System.String)">
            <summary>
            Updates the value of the property of the MapFeature with the given name
            </summary>
            <param name="name">The name of the porperty to update</param>
            <param name="value">The new value of the property</param>
            <param name="idParameterName">The name of the parameter that stores the Feature Id</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.MapFeature.GetPropertyValueByName(System.String)">
            <summary>
            Returns the property value associated with name
            </summary>
            <param name="name">The property name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.GIS.MapFeature.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.LandDevelopment.Site">
            <summary>
            A Site object
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.Site.Name">
            <summary>
            The Site Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.Site.StyleName">
            <summary>
            The Style Name
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.Site.ByName(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Creates a Site by name, if the name is already used it returns the existing site
            </summary>
            <param name="document">The Document</param>
            <param name="name">The Site name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.Site.GetSites(Autodesk.AutoCAD.DynamoNodes.Document)">
            <summary>
            Returns the sites in the Document
            </summary>
            <param name="document">The current Document</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.Site.GetParcels">
            <summary>
            Returns the Sites Parcels
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.Site.GetFeatureLines">
            <summary>
            Returns the Sites FeatureLines
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.Site.GetAlignments">
            <summary>
            Returns the Sites Alignments
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions">
            <summary>
            Collection of extensions for CogoPoints
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.ByObject(Autodesk.Civil.DatabaseServices.CogoPoint,System.Boolean)">
            <summary>
            Returns a CogoPoint by an Object
            </summary>
            <param name="item">The Object</param>
            <param name="isDynamoOwned">True if owned by Dynamo</param>
            <returns>a CogoPoint</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetStyle(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Returns the COGO Point style
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint style</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetLabelStyle(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Returns the COGO Point label style
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPointlabel style</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetStyle(Autodesk.Civil.DynamoNodes.CogoPoint,System.String)">
            <summary>
            Sets the COGO Point style
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="style">The new style name</param>
            <returns>The CogoPoint</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetLabelStyle(Autodesk.Civil.DynamoNodes.CogoPoint,System.String)">
            <summary>
            Sets the COGO Point label style
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="labelStyle">The new label style name</param>
            <returns>The CogoPoint</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetName(Autodesk.Civil.DynamoNodes.CogoPoint,System.String)">
            <summary>
            Renames a CogoPoint
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="name">The new name</param>
            <returns>The CogoPoint</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetName(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint name
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint name</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetNumber(Autodesk.Civil.DynamoNodes.CogoPoint,System.Int32)">
            <summary>
            Renumbers a CogoPoint
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="number">The new number</param>
            <returns>The CogoPoint</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetNumber(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint number
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint number</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetDescription(Autodesk.Civil.DynamoNodes.CogoPoint,System.String)">
            <summary>
            Sets a CogoPoint description
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="description">The new description</param>
            <returns>The CogoPoint</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetDescription(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint description
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint description</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetGridNorthing(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint grid norhting
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint GridNorthing</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetGridNorthing(Autodesk.Civil.DynamoNodes.CogoPoint,System.Double)">
            <summary>
            Sets the CogoPoint grid northing
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="value">The new value</param>
            <returns>The CogoPoint </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetGridEasting(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint grid easting
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint grid easting</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetGridEasting(Autodesk.Civil.DynamoNodes.CogoPoint,System.Double)">
            <summary>
            Sets the CogoPoint grid easting
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="value">The new value</param>
            <returns>The CogoPoint </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetNorthing(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint norhting
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint Northing</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetNorthing(Autodesk.Civil.DynamoNodes.CogoPoint,System.Double)">
            <summary>
            Sets the CogoPoint northing
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="value">The new value</param>
            <returns>The CogoPoint </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetEasting(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint easting
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint easting</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetEasting(Autodesk.Civil.DynamoNodes.CogoPoint,System.Double)">
            <summary>
            Sets the CogoPoint easting
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="value">The new value</param>
            <returns>The CogoPoint </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetElevation(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint elevation
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint elevation</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetElevation(Autodesk.Civil.DynamoNodes.CogoPoint,System.Double)">
            <summary>
            Sets the CogoPoint elevation
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="value">The new value</param>
            <returns>The CogoPoint </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetLatitude(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint latitude
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint latitude in degrees</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetLatitude(Autodesk.Civil.DynamoNodes.CogoPoint,System.Double)">
            <summary>
            Sets the CogoPoint latitude
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="value">The new value in degrees</param>
            <returns>The CogoPoint </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetLongitude(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint longitude
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint longitude in degrees</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetLongitude(Autodesk.Civil.DynamoNodes.CogoPoint,System.Double)">
            <summary>
            Sets the CogoPoint longitude
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="value">The new value in degrees</param>
            <returns>The CogoPoint </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetScaleZ(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint ScaleZ
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint ScaleZ</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetScaleZ(Autodesk.Civil.DynamoNodes.CogoPoint,System.Double)">
            <summary>
            Sets the CogoPoint ScaleZ
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="value">The new value</param>
            <returns>The CogoPoint </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetScaleXY(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint ScaleXY
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint ScaleXY</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetScaleXY(Autodesk.Civil.DynamoNodes.CogoPoint,System.Double)">
            <summary>
            Sets the CogoPoint ScaleXY
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="value">The new value</param>
            <returns>The CogoPoint </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetLabelRotation(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint LabelRotation
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint LabelRotation</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetLabelRotation(Autodesk.Civil.DynamoNodes.CogoPoint,System.Double)">
            <summary>
            Sets the CogoPoint LabelRotation
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="value">The new value</param>
            <returns>The CogoPoint </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetMarkerRotation(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint MarkerRotation
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint MarkerRotation</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetMarkerRotation(Autodesk.Civil.DynamoNodes.CogoPoint,System.Double)">
            <summary>
            Sets the CogoPoint MarkerRotation
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <param name="value">The new value</param>
            <returns>The CogoPoint </returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetConvergence(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint Convergence
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint Convergence</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetScale(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Gets the CogoPoint Scale
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>The CogoPoint Scale</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.IsSurveyPoint(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            True if the CogoPoint is a Survey Point, otherwise false.
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns>True or false</returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.CogoPointGroupByCogoPoint(Autodesk.Civil.DynamoNodes.CogoPoint)">
            <summary>
            Returns the Primary Point Group
            </summary>
            <param name="cogoPoint">The CogoPoint</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.GetUserDefinedPropertyValueByName(Autodesk.Civil.DynamoNodes.CogoPoint,System.String,System.String)">
            <summary>
            Returns a user defined property value by name
            </summary>
            <param name="point">The CogoPoint</param>
            <param name="classification">The name of the classification</param>
            <param name="property">The name of the user defined property</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetUserDefinedPropertyValueByName(Autodesk.Civil.DynamoNodes.CogoPoint,System.String,System.String,System.Object)">
            <summary>
            Sets a user defined property value by name
            </summary>
            <param name="point">The CogoPoint</param>
            <param name="classification">The name of the classification</param>
            <param name="name">The name of the user defined property</param>
            <param name="value">The value to assign to the property</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.CreateUDPClassification(System.String)">
            <summary>
            Creates a user defined property classification
            </summary>
            <param name="classification">The name of the classification</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.RemoveUDPClassification(System.String)">
            <summary>
            Removes a user defined property classification
            </summary>
            <param name="classification">The name of the classification</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.CreateUDP(System.String,System.String,System.Int32,System.Boolean,System.String,System.Int32)">
            <summary>
            Adds a User Defined property to a classification
            </summary>
            <param name="classification">The name of the classification</param>
            <param name="property">The name of the property</param>
            <param name="attributeType">0-Boolean, 1-Double, 2-Enum, 3-Integer, 4-String</param>
            <param name="useDefault">If true it uses the default value</param>
            <param name="description">The description</param>
            <param name="dataType">in case of a Double specifes the data type to be used</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetUDPEnum(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.String)">
            <summary>
            Adds or setsthe values of a Enumeration User Defined Property
            </summary>
            <param name="classification">The name of the classification</param>
            <param name="property">The name of the property</param>
            <param name="values">The list of string values</param>
            <param name="useDefault">If true it uses the default value</param>
            <param name="description">The description</param>
            <param name="dataType">in case of a Double specifes the data type to be used</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.RemoveUDP(System.String,System.String)">
            <summary>
            Removes a user defined property
            </summary>
            <param name="classification">The name of the classification</param>
            <param name="property">The property to remove</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.CogoPointExtensions.SetUDPDefaultValue(System.String,System.String,System.Object)">
            <summary>
            Sets a user defined property default value
            </summary>
            <param name="classification">The name of the classification</param>
            <param name="property">The property to remove</param>
            <param name="defaultValue">The default value</param>
            <returns></returns>
            
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine">
            <summary>
            A FeatureLine object
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.PIPointsCount">
            <summary>
            The FeatureLine Points of Intersection count
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.PointsCount">
            <summary>
            The FeatureLine Points count
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.ElevationPointsCount">
            <summary>
            The FeatureLine Elevation Points count
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.Length2D">
            <summary>
            The FeatureLine Length 2D
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.Length3D">
            <summary>
            The FeatureLine Length 3D
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.MinElevation">
            <summary>
            The FeatureLine Minimum Elevation
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.MaxElevation">
            <summary>
            The FeatureLine Maximum Elevation
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.MinGrade">
            <summary>
            The FeatureLine Minimum Grade
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.MaxGrade">
            <summary>
            The FeatureLine Maximum Grade
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.StyleName">
            <summary>
            The FeatureLine style name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.SiteName">
            <summary>
            The FeatureLine Site name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.PolyCurve">
            <summary>
            The FeatureLine PolyCurve
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.ByObject(Autodesk.Civil.DynamoNodes.CivilObject)">
            <summary>
            Returns a Feature Line from an Civil 3D Feature Line object
            </summary>
            <param name="obj">The object</param>
            <returns>An Arc</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.ByName(Autodesk.AutoCAD.DynamoNodes.Document,System.String,System.String)">
            <summary>
            Returns a FeatureLine with the given name if it exists, otherwise null.
            </summary>
            <param name="document">The Document</param>
            <param name="featurelineName">The name of the FeatureLine</param>
            <param name="siteName">The Name of the site, if empty will lookf for siteless FeatureLines</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.GetAllPoints">
            <summary>
            Gets all the Points in the FeatureLine
            </summary>
            <returns>A list of Points</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.GetPIPoints">
            <summary>
            Gets the Points of Intersection in the FeatureLine
            </summary>
            <returns>A list of Points</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.GetElevationPoints">
            <summary>
            Gets the Elevation Points in the FeatureLine
            </summary>
            <returns>A list of Points</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.ByPolyCurve(System.String,Autodesk.DesignScript.Geometry.PolyCurve,Autodesk.Civil.DynamoNodes.LandDevelopment.Site,System.String,Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Creates a FeatureLine via a Dynamo PolyCurve
            </summary>
            <param name="name">The FeatureLine name</param>
            <param name="curve">The PolyCurve</param>
            <param name="site">The site of the FeatureLine</param>
            <param name="layer">The layer of the FeatureLine</param>
            <param name="block">The target block</param>
            <returns>A FeatureLine</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.SetElevationFromSurface(Autodesk.Civil.DynamoNodes.Surface,System.Boolean,System.Double)">
            <summary>
            Sets the FeatureLine Elevation from a Surface
            </summary>
            <param name="surface">The surface</param>
            <param name="includeIntermediate">If true calculates the intermediate points on the Surface</param>
            <param name="relElevation"> The relative elevation from the Surface</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.SetPointAbsoluteElevationByIndex(System.Int32,System.Double)">
            <summary>
            Sets the Feature line point absolute elevation by index
            </summary>
            <param name="index">The zero based point index</param>
            <param name="elevation">the new elevation</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.SetPointRelativeElevationByIndex(System.Int32,System.Double)">
            <summary>
            Sets the Feature line point absolute elevation by index and relative delta
            </summary>
            <param name="index">The zero based point index</param>
            <param name="delta">Signed change in elevation</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.Get3dDistanceByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Calculates the distance in 3D at a point in space
            </summary>
            <param name="point">The Point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.Get2dDistanceByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Calculates the distance in 2D at a point in space
            </summary>
            <param name="point">The Point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.GetPointByDistance(System.Double)">
            <summary>
            Calculates the point at distance
            </summary>
            <param name="distance">The distance</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.GetDeflectionAngleByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Calculates the deflection angle at point
            </summary>
            <param name="point">The point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.GetGradeInByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Calculates the grade in at point
            </summary>
            <param name="point">The point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.GetGradeOutByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Calculates the grade out at point
            </summary>
            <param name="point">The point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.InsertPIPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Inserts a PI point. If there is already point with the same X and Y coordinate it will try to update its elevation.
            </summary>
            <param name="point">The point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.InsertElevationPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Inserts an Elevation point. If there is already point with the same X and Y coordinate it will try to update its elevation.
            </summary>
            <param name="point">The point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.GetCoordinateSystemByDistance(System.Double,System.Boolean)">
            <summary>
            Calculates a Coordinate System at distance
            </summary>
            <param name="distance">The distance</param>
            <param name="vertical">If true it will ignore the feature line grade</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.GetDistanceOffsetElevationByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Calculates the realtive coordinates along the feature line of a point in space.
            </summary>
            <param name="point">The Point</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.GetRefinedPolyCurve(System.Int32)">
            <summary>
            Returns a better defined PolyCurve subdviding the segments in between vertices by a the given number of subdivisions.
            </summary>
            <param name="subdivisions">The number of subdivisions in between vertices</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.FeatureLine.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel">
            <summary>
            A Parcel object
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel.Number">
            <summary>
            The Parcel number
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel.Centroid">
            <summary>
            The Parcel centroid
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel.AreaSelectionLabelLocation">
            <summary>
            The Parcel area selection label location
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel.Area">
            <summary>
            The Parcel area
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel.StyleName">
            <summary>
            The Parcel style name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel.Geometry">
            <summary>
            The Parcel geometry
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel.ByObject(Autodesk.Civil.DynamoNodes.CivilObject)">
            <summary>
            Returns a Parcel from an Civil 3D Parcel object
            </summary>
            <param name="obj">The object</param>
            <returns>An Arc</returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel.GetUserDefinedProperties">
            <summary>
            Returns a dictionary with the User Defined Properties.
            The dictionary key is Classification_PropertyName
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel.GetUserDefinedPropertyValueByName(System.String,System.String)">
            <summary>
            Returns a user defined property value by name
            </summary>
            <param name="classification">The name of the classification</param>
            <param name="property">The name of the user defined property</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel.SetUserDefinedPropertyValueByName(System.String,System.String,System.Object)">
            <summary>
            Sets a user defined property value by name
            </summary>
            <param name="parcel">The parcel</param>
            <param name="classification">The name of the classification</param>
            <param name="name">The name of the user defined property</param>
            <param name="value">The value to assign to the property</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.LandDevelopment.Parcel.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Part.GetPartData(Autodesk.Civil.DynamoNodes.CivilObject)">
            <summary>
            Gets the Part Data of the object
            </summary>
            <param name="obj">The Part (e.g. Pipe, Structure)</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Part.SetPartDataValueByName(Autodesk.Civil.DynamoNodes.CivilObject,System.String,System.Object)">
            <summary>
            Sets the Part Data Field value by name.
            </summary>
            <param name="obj">The Part (e.g. Pipe, Structure)</param>
            <param name="name">The name of the Data Field</param>
            <param name="value">The value of the Data Field</param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PipeNetworks.PartsList">
            <summary>
            Civil 3D PartsList
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.PartsList.Count">
            <summary>
            The number of PartFamilies in the PartsList
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.PartsList.Name">
            <summary>
            The name of the PartsList
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.PartsList.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PipeNetworks.PartFamily">
            <summary>
            Civil 3D PartFamily
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.PartFamily.Count">
            <summary>
            The number of PartSizes in the PartFamily
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.PartFamily.Name">
            <summary>
            The name of the PartFamily
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.PartFamily.PartsList">
            <summary>
            The PartsList the PartFamily belongs to
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.PartFamily.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PipeNetworks.PartSize">
            <summary>
            Civil 3D PartSize
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.PartSize.Name">
            <summary>
            The name of the PartSize
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.PartSize.PartFamily">
            <summary>
            The Dynamo PartFamily the PartSize belongs to
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.PartSize.Internal">
            <summary>
            The inner diameter or width of the PartSize
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.PartSize.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure">
            <summary>
            Civil 3D Pipe Network object
            </summary>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._startPoint">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._endPoint">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._barrelPipeClearance">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._shape">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._coneHeight">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._cover">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._outerDiameterOrWidth">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._floorThickness">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._frame">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._frameDiameter">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._frameHeight">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._grate">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._height">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._innerDiameterOrWidth">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._innerLength">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._length">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._material">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._offset">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._pipeLowestBottomDepth">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._pipeUpperTopDepth">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._partDescription">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._partSizeName">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._partSubType">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._partType">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._alignmentReference">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._surfaceReference">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._rimElevation">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._rimToSumpHeight">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._rotation">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._sumpElevation">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._station">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._sumpDepth">
            <excluded/>
        </member>
        <member name="F:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure._wallThickness">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.PipeNetworkName">
            <summary>
            The Pipe Network the structure belongs to
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Name">
            <summary>
            The Structure Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.StartPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.EndPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.BarrelPipeClearance">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Shape">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.ConeHeight">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Cover">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.OuterDiameterOrWidth">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.FloorThickness">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Frame">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.FrameDiameter">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.FrameHeight">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Grate">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Height">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.InnerDiameterOrWidth">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.InnerLength">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Length">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Material">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Offset">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.PipeLowestBottomDepth">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.PipeUpperTopDepth">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.PartDescription">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.PartSizeName">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.PartSize">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.PartSubType">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.PartType">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.AlignmentReference">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SurfaceReference">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.RimElevation">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.RimToSumpHeight">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Rotation">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SumpElevation">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Station">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SumpDepth">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.WallThickness">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Solid">
            <summary>
            The Solid associated to the Pipe
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.Geometry">
            <summary>
            Returns the Structure geometry
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetLocation(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Sets the structure location point and updates the connected pipes
            </summary>
            <param name="point">The new location point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetRotation(System.Double)">
            <summary>
            Sets the structure rotation
            </summary>
            <param name="angle">The rotation angle in degrees</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetSize(Autodesk.Civil.DynamoNodes.PipeNetworks.PartSize)">
            <summary>
            Sets the structure size
            </summary>
            <param name="partSize">The new structure part size</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetSizeByInnerDimension(System.Double,System.Boolean,System.Int32)">
            <summary>
            Sets the structure size
            </summary>
            <param name="innerDimension">The value of the inner dimension in the document units</param>
            <param name="useClosestSize">If true uses the closest value for the dimention</param>
            <param name="dimension">0: Diameter, 1: Width, 2: Length</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetSumpElevation(System.Double)">
            <summary>
            Sets the Structure Sump Elevation
            </summary>
            <param name="elevation">The new sump elevation</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetSumpDepth(System.Double)">
            <summary>
            Sets the Structure Sump Depth
            </summary>
            <param name="depth">The new sump depth</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetRimElevation(System.Double)">
            <summary>
            Sets the Structure Rim Elevation
            </summary>
            <param name="elevation">The new sump elevation</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetRimToSumpHeight(System.Double)">
            <summary>
            Sets the Structure Rim to Sump Height
            </summary>
            <param name="height">The new rim to sump height</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetSurfaceAdjustmentValue(System.Double)">
            <summary>
            Sets the Structure Surface Adjustment Value
            </summary>
            <param name="adjustment">The new sump elevation</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetRefSurface(System.String)">
            <summary>
            Sets the Structure Reference Surface
            </summary>
            <param name="surface">The name of the reference surface</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetRefAlignment(System.String)">
            <summary>
            Sets the Structure Reference Alignment
            </summary>
            <param name="alignment">The name of the reference alignment</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.SetAutomaticRimSurfaceAdjustment(System.Boolean)">
            <summary>
            Sets the Structure to Surface 
            </summary>
            <param name="active">The name of the reference alignment</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.GetConnectedPipes">
            <summary>
            Returns the pipes connected to the structure
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Structure.ToString">
            <summary>
            String representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe">
            <summary>
            Civil 3D Pipe Network object
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.PipeNetworkName">
            <summary>
            The Pipe Network the pipe belongs to
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Name">
            <summary>
            The Obejct Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.StartPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.EndPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.MidPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.StartAngle">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.EndAngle">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Center">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.IsLinear">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Shape">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.CoverOfEndpoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.CoverOfStartPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.EndOffset">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.EndStation">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.EndStructure">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.HGLDown">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.HGLUp">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.InnerDiameterOrWidth">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.InnerHeight">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Length2DCenterToCenter">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Length2DToInsideEdge">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Length3DCenterToCenter">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Length3DToInsideEdge">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Material">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.MaximumCover">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.MinimumCover">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.OuterDiameterOrWidth">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.OuterHeight">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.PartDescription">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.PartSizeName">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.PartSize">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.PartSubType">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.PartType">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Radius">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Slope">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.StartOffset">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.StartStation">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.StartStructure">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.WallThickness">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.StartInvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.ActualStartInvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.EndInvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.ActualEndInvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.StartObvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.EndObvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.ActualStartObvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.ActualEndObvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Curve">
            <summary>
            The center curve of the Pipe
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Curve2D">
            <summary>
            The center curve of the Pipe
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Solid">
            <summary>
            The Solid associated to the Pipe
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.Geometry">
            <summary>
            Returns the Pipe Geometry
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.AlignmentReference">
            <summary>
            Returns the Reference Alignment Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.SurfaceReference">
            <summary>
            Returns the Reference Surface Name
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.ConnectStartToStructure(Autodesk.Civil.DynamoNodes.PipeNetworks.Structure)">
            <summary>
            Connects the Start of the Pipe to the structure
            </summary>
            <param name="structure">The Structure</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.ConnectEndToStructure(Autodesk.Civil.DynamoNodes.PipeNetworks.Structure)">
            <summary>
            Connects the End of the Pipe to the structure
            </summary>
            <param name="structure">The Structure</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.ConnectToPipe(Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe,Autodesk.Civil.DynamoNodes.PipeNetworks.PartSize,System.Boolean)">
            <summary>
            Connects the End of the Pipe to the other pipe
            </summary>
            <param name="other">The other Pipe</param>
            <param name="structureSize">The PartSize of the sturcture</param>
            <param name="applyRules">Applies the pipe network rules</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.SetStartPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Set the pipe start point
            </summary>
            <param name="point">The new start point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.SetInverts(System.Double,System.Double)">
            <summary>
            Set the start and end invert of the pipe
            </summary>
            <param name="startInvert">The start invert value</param>
            <param name="endInvert">The end invert value</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.SetInvertAtLocation(System.Int32,System.Double)">
            <summary>
            Set invert of the pipe at the specified locaiton and recalculates the slope.
            </summary>
            <param name="location"> 0 for start, 1 for end</param>
            <param name="invert">The new value of the invert at the specified location</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.SetActualInvertAtLocation(System.Int32,System.Double)">
            <summary>
            Set invert of the pipe at the specified locaiton and recalculates the slope.
            </summary>
            <param name="location"> 0 for start, 1 for end</param>
            <param name="invert">The new value of the invert at the specified location</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.SetEndPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Set the pipe end point
            </summary>
            <param name="point">The new end point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.SetSize(Autodesk.Civil.DynamoNodes.PipeNetworks.PartSize)">
            <summary>
            Sets the pipe size
            </summary>
            <param name="partSize">The new pipe part size</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.SetSizeByInnerDimension(System.Double,System.Boolean)">
            <summary>
            Sets the pipe inner diameter or width.
            </summary>
            <param name="innerDimension">The new inner diameter or width</param>
            <param name="useClosestSize">If true, it tries to match the new dimension to the closest value in the part family</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.SetRefSurface(System.String)">
            <summary>
            Sets the Pipe Reference Surface
            </summary>
            <param name="surface">The name of the reference surface</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.SetRefAlignment(System.String)">
            <summary>
            Sets the Pipe Reference Alignment
            </summary>
            <param name="alignment">The name of the reference alignment</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Pipe.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PipeNetworks.Selection">
            <summary>
            Selection class
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Selection.PipeNetworks(Autodesk.AutoCAD.DynamoNodes.Document)">
            <summary>
            Returns the Pipe Networks in the document.
            </summary>
            <param name="document">The AutoCAD document.</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Selection.GetStructureByName(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Returns the Structure in the document.
            </summary>
            <param name="document">The AutoCAD document.</param>
            <param name="name">The Structure name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Selection.GetPipeByName(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Returns the Pipe in the document.
            </summary>
            <param name="document">The AutoCAD document.</param>
            <param name="name">The Pipe name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Selection.PartsLists(Autodesk.AutoCAD.DynamoNodes.Document)">
            <summary>
            Returns the Parts List in the document.
            </summary>
            <param name="document">The AutoCAD document.</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Selection.PartsListByName(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Returns the PartsList in the document with the given name, otherwise returns null.
            </summary>
            <param name="document">The AutoCAD document.</param>
            <param name="name">The name of the PartsList</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Selection.PartPipeFamilies(Autodesk.Civil.DynamoNodes.PipeNetworks.PartsList)">
            <summary>
            Returns the Part Pipe Families in the PartList.
            </summary>
            <param name="partsList">The PartsList object</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Selection.PartFamilyByName(Autodesk.Civil.DynamoNodes.PipeNetworks.PartsList,System.String)">
            <summary>
            Returns the Part Family in the PartList with the given name, otherwise returns null.
            </summary>
            <param name="partsList">The PartsList object</param>
            <param name="name">The name of the PartFamily</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Selection.PartStructureFamilies(Autodesk.Civil.DynamoNodes.PipeNetworks.PartsList)">
            <summary>
            Returns the Part Structure Families in the PartList.
            </summary>
            <param name="partsList">The PartsList object</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Selection.PartSizes(Autodesk.Civil.DynamoNodes.PipeNetworks.PartFamily)">
            <summary>
            Returns the Part Sizes in the Part Family.
            </summary>
            <param name="partFamily">The PartFamily object</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.Selection.PartSizeByName(Autodesk.Civil.DynamoNodes.PipeNetworks.PartFamily,System.String)">
            <summary>
            Returns the Part Sizes in the Part Family with the given name, otherwise returns null.
            </summary>
            <param name="partFamily">The PartFamily object</param>
            <param name="name">The PartSize name</param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PipeNetworks.PipeNetwork">
            <summary>
            Civil 3D Pipe Network object
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.PipeNetwork.Name">
            <summary>
            The Network Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PipeNetworks.PipeNetwork.PartsList">
            <summary>
            The network part list 
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.PipeNetwork.GetPipesStructures">
            <summary>
            Returns the list of pipes and structures in the pipe network.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.PipeNetwork.ByName(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Returns a Pipe Network in the document by name. If the name does not exist it will create a network..
            </summary>
            <param name="document">The AutoCAD document</param>
            <param name="name">The PipeNetwork name</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.PipeNetwork.AddPipeByCurve(Autodesk.Civil.DynamoNodes.PipeNetworks.PartSize,Autodesk.DesignScript.Geometry.Curve,System.Boolean)">
            <summary>
            Adds a pipe to the Pipe Network. The input curve mut be a Line or an Arc.
            </summary>
            <param name="partSize">The PartSize for the pipe</param>
            <param name="curve">The line or arc that defines the centerline of the pipe</param>
            <param name="applyRules">Applies the pipe style rules</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.PipeNetwork.AddStructureByPoint(Autodesk.Civil.DynamoNodes.PipeNetworks.PartSize,Autodesk.DesignScript.Geometry.Point,System.Double,System.Boolean)">
            <summary>
            Adds a Structure to the Pipe Network
            </summary>
            <param name="partSize">The PartSize for the structure</param>
            <param name="point">The location point of the structure</param>
            <param name="rotation">The rotation angle of the structure in degrees</param>
            <param name="applyRules">Applies the pipe style rules</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.PipeNetwork.SetRefSurface(System.String)">
            <summary>
            Sets the Pipe Network Reference Surface
            </summary>
            <param name="surface">The name of the reference surface</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.PipeNetwork.SetRefAlignment(System.String)">
            <summary>
            Sets the Pipe Network Reference Alignment
            </summary>
            <param name="alignment">The name of the reference alignment</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.PipeNetwork.SetPartsList(Autodesk.Civil.DynamoNodes.PipeNetworks.PartsList)">
            <summary>
            Sets the PartsList for the Pipe Network
            </summary>
            <param name="newPartList">The new PartsList</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PipeNetworks.PipeNetwork.ToString">
            <summary>
            String representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.ProfileView">
            <summary>
            ProfileView
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileView.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileView.Alignment">
            <summary>
            Alignment
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileView.StartStation">
            <summary>
            The Profile View Start Station
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.ProfileView.EndStation">
            <summary>
            The Profile View End Station
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileView.GetProfileViews(Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            GetProfileViews
            </summary>
            <param name="Block">The Block</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileView.Extents">
            <summary>
            Get Extents
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileView.FindStationAndElevationAtXY(System.Double,System.Double)">
            <summary>
            FindStationAndElevationAtXY
            </summary>
            <param name="X"></param>
            <param name="Y"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileView.ByAlignmentPoint(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point,System.String)">
            <summary>
            Creates a Profile View.
            </summary>
            <param name="alignment">The Alignment.</param>
            <param name="insertPoint">The insertion point of the ProfileView</param>
            <param name="profileViewName">The ProfileView Name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileView.ByAlignmentPointName(Autodesk.Civil.DynamoNodes.Alignment,Autodesk.DesignScript.Geometry.Point,System.String,System.String,System.String)">
            <summary>
            Creates a Profile View.
            </summary>
            <param name="alignment">The Alignment.</param>
            <param name="insertPoint">The insertion point of the ProfileView</param>
            <param name="profileViewName">The ProfileView name</param>
            <param name="bandSet">The band set name</param>
            <param name="style"> The style name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileView.SetStartStation(System.Double)">
            <summary>
            Sets the start station of the Profile View.
            </summary>
            <param name="startStation">The new value of the start station</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileView.SetEndStation(System.Double)">
            <summary>
            Sets the end station of the Profile View.
            </summary>
            <param name="endStation">The new value of the end station</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.ProfileView.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.SectionView">
            <summary>
            SectionView
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.SectionView.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.SectionView.ToModel(Autodesk.Civil.DynamoNodes.SectionView)">
            <summary>
            Return the CoordinateSystem to transform from SectionView system to ModelSpace system
            </summary>
            <param name="sectionView">The SectionView</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.SectionView.ToProject(Autodesk.Civil.DynamoNodes.SectionView)">
            <summary>
            Return the CoordinateSystem to transform from SectionView to Project
            </summary>
            <param name="sectionView">The SectionView</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.SectionView.GetSectionViews(Autodesk.AutoCAD.DynamoNodes.Block)">
            <summary>
            Get all SectionView in the Block
            </summary>
            <param name="Block">The Block</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.SectionView.Extents">
            <summary>
            Get the Extents of the SectionView as a Rectangle
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.SectionView.Station">
            <summary>
            Return the station
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.SectionView.Alignment">
            <summary>
            Return the alignment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.SectionView.FindOffsetAndElevationAtXY(System.Double,System.Double)">
            <summary>
            Return the Offset and Elevation at XY in SectionView coordinates
            </summary>
            <param name="X">The X coordinate</param>
            <param name="Y">The Y Coordinate</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.SectionView.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting">
            <summary>
            Civil 3D Pressure Pipe Network object
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.PipeNetworkName">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.Name">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.StartPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.EndPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.Material">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.PartDescription">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.Curves">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.Solid">
            <excluded/>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.SetLocation(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Sets the structure location point and updates the connected pipes
            </summary>
            <param name="point">The new location point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.SetRotation(System.Double)">
            <summary>
            Sets the structure rotation
            </summary>
            <param name="angle">The rotation angle in degrees</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.SetSize(Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartSize)">
            <summary>
            Sets the structure size
            </summary>
            <param name="partSize">The new structure part size</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureFitting.ToString">
            <summary>
            String representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartsList">
            <summary>
            Civil 3D PressurePartsList
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartsList.Count">
            <summary>
            The number of PartFamilies in the PartsList
            </summary>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartFamily">
            <summary>
            Civil 3D PressurePartFamily
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartFamily.Count">
            <summary>
            The number of PartSizes in the PartFamily
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartFamily.Name">
            <summary>
            The name of the PartFamily
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartFamily.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartSize">
            <summary>
            Civil 3D PressurePartSize
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartSize.Name">
            <summary>
            The name of the PartSize
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartSize.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe">
            <summary>
            Civil 3D Pipe Network object
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.PipeNetworkName">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.Name">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.StartPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.EndPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.MidPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.IsLinear">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.EndFitting">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.StartFitting">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.InnerDiameter">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.OuterDiameter">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.Length2DCenterToCenter">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.Length3DCenterToCenter">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.Material">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.PartDescription">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.Radius">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.Slope">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.WallThickness">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.StartElevation">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.EndElevation">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.StartInvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.EndInvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.StartObvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.EndObvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.ActualEndInvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.ActualStartObvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.ActualEndObvert">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.Curve">
            <summary>
            The center curve of the Pipe
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.Curve2D">
            <summary>
            The center curve of the Pipe on the XY plane
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.Solid">
            <summary>
            The Solid associated to the Pipe
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.SetCurves(Autodesk.Civil.DatabaseServices.PressurePipe)">
            <summary>
            Returns 
            </summary>
            <param name="pipe">The pressure pipe</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.ConnectStartTo(System.Object)">
            <summary>
            Connects the Start of the Pipe to the structure
            </summary>
            <param name="other">The Structure</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.ConnectEndTo(System.Object)">
            <summary>
            Connects the End of the Pipe to the structure
            </summary>
            <param name="other">The Structure</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.SetStartPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Set the pressure pipe start point
            </summary>
            <param name="point">The new start point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.SetEndPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Set the pressure pipe end point
            </summary>
            <param name="point">The new end point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.SetSize(Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartSize)">
            <summary>
            Sets the pipe size
            </summary>
            <param name="partSize">The new pipe part size</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipe.ToString">
            <summary>
            Text representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipeNetwork">
            <summary>
            Civil 3D Pipe Network object
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipeNetwork.Name">
            <summary>
            The Network Name
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipeNetwork.GetPipesFittings">
            <summary>
            Returns the list of pipes and structures in the pipe network.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipeNetwork.ByName(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Returns a Pipe Network in the document by name. If the name does not exist it will create a network..
            </summary>
            <param name="document">The AutoCAD document</param>
            <param name="name">The PipeNetwork name</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipeNetwork.AddPipeByCurve(Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartSize,Autodesk.DesignScript.Geometry.Curve,System.Boolean)">
            <summary>
            Adds a pipe to the Pipe Network
            </summary>
            <param name="partSize">The PartSize for the pipe</param>
            <param name="curve">The line or arc that defines the centerline of the pipe</param>
            <param name="applyRules">Applies the pipe style rules</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipeNetwork.AddFittingByPoint(Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartSize,Autodesk.DesignScript.Geometry.Point,System.Double,System.Boolean)">
            <summary>
            Adds a Structure to the Pipe Network
            </summary>
            <param name="partSize">The PartSize for the structure</param>
            <param name="point">The location point of the structure</param>
            <param name="rotation">The rotation angle of the structure in degrees</param>
            <param name="applyRules">Applies the pipe style rules</param>
            <returns></returns>
            
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipeNetwork.SetRefSurface(System.String)">
            <summary>
            Sets the Pressure Pipe Network Reference Surface
            </summary>
            <param name="surface">The name of the reference surface</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipeNetwork.SetRefAlignment(System.String)">
            <summary>
            Sets the Pressure Pipe Network Reference Alignment
            </summary>
            <param name="alignment">The name of the reference alignment</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePipeNetwork.ToString">
            <summary>
            String representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.Selection">
            <summary>
            Sleection class
            </summary>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.Selection.PressurePipeNetworks(Autodesk.AutoCAD.DynamoNodes.Document)">
            <summary>
            Returns the Pressure Pipe Networks in the document.
            </summary>
            <param name="document">The AutoCAD document.</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.Selection.GetPressurePipeByName(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Returns the Pressure Pipe in the document.
            </summary>
            <param name="document">The AutoCAD document.</param>
            <param name="name">The Pressure Pipe name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.Selection.GetPressureFittingByName(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Returns the Pressure Fitting or Appurtenance in the document by name.
            </summary>
            <param name="document">The AutoCAD document.</param>
            <param name="name">The Pressure Fitting or Appurtenance name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.Selection.GetPressureAppurtenanceByName(Autodesk.AutoCAD.DynamoNodes.Document,System.String)">
            <summary>
            Returns the Pressure Fitting or Appurtenance in the document by name.
            </summary>
            <param name="document">The AutoCAD document.</param>
            <param name="name">The Pressure Fitting or Appurtenance name</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.Selection.PartsLists(Autodesk.AutoCAD.DynamoNodes.Document)">
            <summary>
            Returns the Parts List in the document.
            </summary>
            <param name="document">The AutoCAD document.</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.Selection.PartPipeFamilies(Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartsList)">
            <summary>
            Returns the Part Pipe Families in the PartList.
            </summary>
            <param name="partsList">The PartsList object</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.Selection.PartStructureFamilies(Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartsList)">
            <summary>
            Returns the Part Structure Families in the PartList.
            </summary>
            <param name="partsList">The PartsList object</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.Selection.PartSizes(Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartFamily)">
            <summary>
            Returns the Part Sizes in the Part Family.
            </summary>
            <param name="partFamily">The PartFamily object</param>
            <returns></returns>
        </member>
        <member name="T:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance">
            <summary>
            Civil 3D PressureAppurtenance object
            </summary>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.PipeNetworkName">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.Name">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.StartPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.EndPoint">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.Material">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.PartDescription">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.Curves">
            <excluded/>
        </member>
        <member name="P:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.Solid">
            <excluded/>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.SetLocation(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Sets the structure location point and updates the connected pipes
            </summary>
            <param name="point">The new location point</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.SetRotation(System.Double)">
            <summary>
            Sets the structure rotation
            </summary>
            <param name="angle">The rotation angle in degrees</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.SetSize(Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressurePartSize)">
            <summary>
            Sets the structure size
            </summary>
            <param name="partSize">The new structure part size</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.Civil.DynamoNodes.PressurePipeNetworks.PressureAppurtenance.ToString">
            <summary>
            String representation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.Consulting.Log.FilePath">
            <summary>
            The File Path to the final log file.
            </summary>
        </member>
        <member name="P:Autodesk.Consulting.Log.Instance">
            <summary>
            Returns the singleton for the Log object.
            </summary>
        </member>
        <member name="M:Autodesk.Consulting.Log.Add(System.String)">
            <summary>
            Writes an entry to the log temp file.
            Each entry is preceded by a time log [DD-MM-YYYY hh:mm:ss].
            </summary>
            <param name="message">The message to append to the log.</param>
        </member>
        <member name="M:Autodesk.Consulting.Log.Debug(System.String)">
            <summary>
            Writes a DEBUG entry to the log temp file.
            Each entry is preceded by a time log [DD-MM-YYYY hh:mm:ss].
            </summary>
            <param name="message">The message to append to the log.</param>
        </member>
        <member name="M:Autodesk.Consulting.Log.Info(System.String)">
            <summary>
            Writes a INFO entry to the log temp file.
            Each entry is preceded by a time log [DD-MM-YYYY hh:mm:ss].
            </summary>
            <param name="message">The message to append to the log.</param>
        </member>
        <member name="M:Autodesk.Consulting.Log.Warning(System.String)">
            <summary>
            Writes a WARNING entry to the log temp file.
            Each entry is preceded by a time log [DD-MM-YYYY hh:mm:ss].
            </summary>
            <param name="message">The message to append to the log.</param>
        </member>
        <member name="M:Autodesk.Consulting.Log.Error(System.String)">
            <summary>
            Writes a ERROR entry to the log temp file.
            Each entry is preceded by a time log [DD-MM-YYYY hh:mm:ss].
            </summary>
            <param name="message">The message to append to the log.</param>
        </member>
        <member name="M:Autodesk.Consulting.Log.Exception(System.String)">
            <summary>
            Writes a EXCEPTION entry to the log temp file.
            Each entry is preceded by a time log [DD-MM-YYYY hh:mm:ss].
            </summary>
            <param name="message">The message to append to the log.</param>
        </member>
        <member name="M:Autodesk.Consulting.Log.Exception(System.Exception,System.String)">
            <summary>
            Writes a EXCEPTION entry to the log temp file.
            Each entry is preceded by a time log [DD-MM-YYYY hh:mm:ss].
            </summary>
            <param name="message">The message to append to the log.</param>
        </member>
        <member name="M:Autodesk.Consulting.Log.Critical(System.String)">
            <summary>
            Writes a CRITICAL entry to the log temp file.
            Each entry is preceded by a time log [DD-MM-YYYY hh:mm:ss].
            </summary>
            <param name="message">The message to append to the log.</param>
        </member>
        <member name="M:Autodesk.Consulting.Log.Finalize(System.String)">
            <summary>
            Finalizes the Log file and deletes the temporary file used to collect the entries.
            </summary>
            <param name="intro">An optional introduction to add at the beginning of the log file.</param>
        </member>
        <member name="T:Collaboration.Forge.ThreeLeggedFunction">
            <summary>
            
            </summary>
        </member>
        <member name="M:Collaboration.Forge.ThreeLeggedFunction.GetAccessToken(System.String,System.String,System.String)">
            <summary>
            create token by json
            </summary>
        </member>
        <member name="M:Collaboration.Forge.ThreeLeggedFunction.GetURL(System.String)">
            <summary>
            get url if not null
            </summary>
        </member>
        <member name="T:Collaboration.Forge.Folder">
            <summary>
            Folder
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Folder.Json">
            <excluded/>
        </member>
        <member name="P:Collaboration.Forge.Folder.Name">
            <excluded/>
        </member>
        <member name="P:Collaboration.Forge.Folder.Id">
            <excluded/>
        </member>
        <member name="F:Collaboration.Forge.Folder.m_access_token">
            <summary>
            Access Token
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Folder.DisplayName">
            <summary>
            The Display Name
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Folder.Hub">
            <summary>
            The Hub
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Folder.Project">
            <summary>
            The Project
            </summary>
        </member>
        <member name="M:Collaboration.Forge.Folder.Search(Collaboration.Forge.Folder,System.String)">
            <summary>
            Performs a Search
            </summary>
            <param name="Folder">The Folder</param>
            <param name="Filter">The Filter</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Forge.Folder.GetContentInFolder(Collaboration.Forge.Folder)">
            <summary>
            Gets the Content in the Folder
            </summary>
            <param name="Folder">The Folder</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Forge.Folder.GetParentFolder(Collaboration.Forge.Folder)">
            <summary>
            Gets the Parent Folder
            </summary>
            <param name="Folder"></param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Forge.Folder.GetTopFolders(Collaboration.Forge.Project)">
            <summary>
            Gets the Top Folder
            </summary>
            <param name="Project"></param>
            <returns></returns>
        </member>
        <member name="T:Collaboration.Forge.Item">
            <summary>
            Item
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Item.Json">
            <summary>
            Returns the Json response as a Dictionnary.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Item.Type">
            <summary>
            Returns the Extesion Type of the Item : bim360:file, bim360:document etc.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Item.Id">
            <summary>
            Returns the Id of the Item.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Item.Access_Token">
            <summary>
            Returns the Access Token.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Item.DisplayName">
            <summary>
            Returns the DisplayName of the Item.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Item.Hub">
            <summary>
            Returns the Hub.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Item.Project">
            <summary>
            Returns the Project.
            </summary>
        </member>
        <member name="M:Collaboration.Forge.Item.ById(Collaboration.Forge.Project,System.String)">
            <summary>
            Returns the Item by Id and Project. Items represent word documents, CAD files, drawings, spreadsheets, etc.
            <param name="Project">The Project</param>
            <param name="Id">The Id</param>
            <returns> The Item.</returns>
            </summary>
        </member>
        <member name="M:Collaboration.Forge.Item.GetParentFolder(Collaboration.Forge.Item)">
             <summary>
            Returns the “parent” Folder for the given Item.
             <param name="Item">The Item</param>
             <returns> The Folder.</returns>
             </summary>
        </member>
        <member name="M:Collaboration.Forge.Item.GetTip(Collaboration.Forge.Item)">
             <summary>
            Returns the “tip” Version for the given Item. Multiple versions of a resource item can be uploaded in a project. The tip version is the most recent one.
             <param name="Item">The Item</param>
             <returns> The "tip" Version.</returns>
             </summary>
        </member>
        <member name="M:Collaboration.Forge.Item.GetVersions(Collaboration.Forge.Item)">
             <summary>
            Returns versions for the given item. Multiple versions of a resource item can be uploaded in a project.
             <param name="Item">The Item</param>
             <returns> The list of Version.</returns>
             </summary>
        </member>
        <member name="T:Collaboration.Forge.Project">
            <summary>
            Project
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Project.Json">
            <summary>
            Returns the Json response as a Dictionnary.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Project.Name">
            <summary>
            Returns the Name of the Project.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Project.Id">
            <summary>
            Returns the unique identifier of a Project.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Project.Access_Token">
            <summary>
            Access Token
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Project.IssueContainerId">
            <summary>
            Returns the unique identifier of a Issue Container.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Project.Hub">
            <summary>
            Returns the associated Hub.
            </summary>
        </member>
        <member name="M:Collaboration.Forge.Project.GetAllProjects(Collaboration.Forge.Hub)">
            <summary>
            Returns a collection of accessible projects for this Hub.
            A project represents a BIM 360 Team project, a Fusion Team project, a BIM 360 Docs project, or an A360 Personal project.
            </summary>
            <param name="Hub">The Hub.</param>
            <returns> The List of Projects.</returns>
        </member>
        <member name="M:Collaboration.Forge.Project.GetProjectsByFilter(Collaboration.Forge.Hub,System.String)">
            <summary>
            Returns a collection of accessible projects for this member by filter.
            </summary>
            <param name="Hub">The Hub.</param>
            <param name="Filter">The Filter.
            filter[id], filter[name], filter[extension.type].</param>
            <returns> The List of Hubs.</returns>
        </member>
        <member name="T:Collaboration.Forge.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Version.Json">
            <summary>
            Returns the Json response as a Dictionnary.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Version.Name">
            <summary>
            Returns the Name of the Version.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Version.Id">
            <summary>
            Returns the Id of the Version.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Version.Access_Token">
            <summary>
            Returns the Access Token.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Version.DisplayName">
            <summary>
            Returns the DisplayName of the Version.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Version.Hub">
            <summary>
            Returns the Hub of the Version.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Version.Project">
            <summary>
            Returns the Project of the Version.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Version.VersionNumber">
            <summary>
            Returns the Version number.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Version.SourceFileName">
            <summary>
            SourceFileName
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Version.ViewableName">
            <summary>
            ViewableName
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Version.ViewableGuid">
            <summary>
            ViewableGuid
            </summary>
        </member>
        <member name="M:Collaboration.Forge.Version.GetItemId(Collaboration.Forge.Version)">
            <summary>
            Returns the Item Id the given Version is associated with. Items represent word documents, CAD files, drawings, spreadsheets, etc.
            <param name="Version">The Version</param>
            <returns> The Item Id associated.</returns>
            </summary>
        </member>
        <member name="T:Collaboration.Forge.Hub">
            <summary>
            Get Hub
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Hub.Json">
            <summary>
            Returns the Json response as a Dictionnary.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Hub.Name">
            <summary>
            Returns the Name of the Hub.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Hub.Type">
            <summary>
            Returns the Type of the Hub : BIM 360 Team hub, Fusion Team hub, A360 Personal hub or BIM 360 Docs accounts.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Hub.Id">
            <summary>
            Returns the unique identifier of a hub.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Hub.Access_Token">
            <summary>
            Access Token
            </summary>
        </member>
        <member name="M:Collaboration.Forge.Hub.GetHubsByFilter(System.String,System.String)">
            <summary>
            Returns a collection of accessible hubs for this member by filter.
            </summary>
            <param name="AccesToken">The Access Token.</param>
            <param name="Filter">The Filter 
            filter[id]=Id, filter[name]=Name, filter[extension.type]=hubs:autodesk.bim360:Account. </param>
            <returns> The List of Hubs.</returns>
        </member>
        <member name="M:Collaboration.Forge.Hub.GetAllHubs(System.String)">
            <summary>
            Returns a collection of accessible hubs for this member.
            </summary>
            <param name="AccesToken">The Access Token.</param>
            <returns> The List of Hubs.</returns>
        </member>
        <member name="T:Collaboration.Forge.Token">
            <summary>
            Get a 2-Legged Token
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Token.Json">
            <summary>
            Returns the Json response as a Dictionnary.
            </summary>
        </member>
        <member name="P:Collaboration.Forge.Token.AccesToken">
            <summary>
            Returns the Access Token.
            </summary>
            <param name="Token">The Token.</param>
            <returns> The Access Token value.</returns>
        </member>
        <member name="P:Collaboration.Forge.Token._Access_Token">
            <summary>
            Returns the Json response as a Dictionnary.
            </summary>
        </member>
        <member name="M:Collaboration.Forge.Token.ByClientIdAndSecret(System.String,System.String,System.String)">
            <summary>
            Returns a 2-Legged Token.
            </summary>
            <param name="ClientId">Client ID of the app.</param>
            <param name="ClientSecret">Client secret of the app.</param>
            <param name="Scope">Space-separated list of required scopes.</param>
            <returns> The Token</returns>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.exchange">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.exchange.Items">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.exchange.units">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.exchange.unitsSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.exchange.filename">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.exchange.filepath">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.batchtest">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.batchtest.clashtests">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.batchtest.selectionsets">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.batchtest.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.batchtest.internal_name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.batchtest.units">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.batchtest.unitsSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashtest">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.linkage">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.customtype">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.tolerances">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.left">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.right">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.rules">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.summary">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.clashresults">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.guid">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.test_type">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.test_typeSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.status">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.statusSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.tolerance">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.toleranceSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtest.merge_composites">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.linkage">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.linkage.linkedanimation">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.linkage.mode">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.linkage.stepsize">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.linkage.stepsizeSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.elementitempathType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.elementitempathType.elementitempath">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.elementitempath">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.elementitempath.pathpart">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.elementitempath.element">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.dateOrTimeType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dateOrTimeType.Item">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.date">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.date.year">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.date.month">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.date.day">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.date.hour">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.date.minute">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.date.second">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.time">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.time.hour">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.time.minute">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.time.second">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashselectionType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashselectionType.clashselection">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashselectionTypeClashselection">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashselectionTypeClashselection.locator">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashselectionTypeClashselection.selfintersect">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashselectionTypeClashselection.primtypes">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.dataType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dataType.data">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.data">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.data.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.data.Text">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.data.type">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.data.typeSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.name.internal">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.name.Value">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.datatypeType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.datatypeType.float">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.datatypeType.int32">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.datatypeType.bool">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.datatypeType.wstring">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.datatypeType.time">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.datatypeType.linear">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.datatypeType.area">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.datatypeType.volume">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.datatypeType.angle">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.datatypeType.name">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.nameType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.nameType.name">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.position2fType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.position2fType.pos2f">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.pos2f">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.pos2f.x">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.pos2f.xSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.pos2f.y">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.pos2f.ySpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.colourType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.colourType.red">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.colourType.redSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.colourType.green">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.colourType.greenSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.colourType.blue">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.colourType.blueSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.rotation3fType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rotation3fType.rotation">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.rotation">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rotation.quaternion">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.rotationQuaternion">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rotationQuaternion.a">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rotationQuaternion.aSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rotationQuaternion.b">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rotationQuaternion.bSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rotationQuaternion.c">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rotationQuaternion.cSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rotationQuaternion.d">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rotationQuaternion.dSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.box3fType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.box3fType.box3f">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.box3f">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.box3f.min">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.box3f.max">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.position3fType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.position3fType.pos3f">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.pos3f">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.pos3f.x">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.pos3f.xSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.pos3f.y">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.pos3f.ySpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.pos3f.z">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.pos3f.zSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.vector3fType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.vector3fType.vec3f">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.vec3f">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.vec3f.x">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.vec3f.xSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.vec3f.y">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.vec3f.ySpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.vec3f.z">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.vec3f.zSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.condition">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.condition.category">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.condition.property">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.condition.value">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.condition.test">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.condition.testSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.condition.flags">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.findspectestType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.never">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.attrib">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.no_attrib">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.prop">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.no_prop">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.same_type">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.equals">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.not_equals">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.less_than">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.less_equal">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.greater_equal">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.greater_than">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.contains">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.wildcard">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.within_day">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.findspectestType.within_week">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashobject">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashobject.objectattribute">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashobject.layer">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashobject.pathlink">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashobject.smarttags">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.objectattribute">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.objectattribute.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.objectattribute.value">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.smarttag">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.smarttag.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.smarttag.value">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.tolerances">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.tolerances.rel_touch">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.tolerances.rel_touch_tol">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.tolerances.rel_touch_tolSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.tolerances.abs_touch_tol">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.tolerances.abs_touch_tolSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.rule">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rule.ruleparams">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rule.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rule.enabled">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rule.creator">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.ruleparam">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.ruleparam.value">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.ruleparam.specific_data">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.summary">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.summary.testtype">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.summary.teststatus">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.summary.total">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.summary.new">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.summary.active">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.summary.reviewed">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.summary.approved">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.summary.resolved">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashgroup">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.description">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.resultstatus">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.clashpoint">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.approveddate">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.createddate">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.approvedby">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.clashobjects">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.clashtasklink">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.clashresults">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.href">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.guid">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.status">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.statusSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.distance">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroup.distanceSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.dateType">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dateType.date">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.comment">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.comment.user">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.comment.body">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.comment.createddate">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.comment.id">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.comment.status">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.comment.statusSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.commentstatusType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.commentstatusType.new">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.commentstatusType.active">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.commentstatusType.approved">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.commentstatusType.resolved">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashgroupClashtasklink">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroupClashtasklink.starttime">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroupClashtasklink.endtime">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashgroupClashtasklink.taskname">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.resultstatusType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.resultstatusType.new">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.resultstatusType.active">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.resultstatusType.reviewed">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.resultstatusType.approved">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.resultstatusType.resolved">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashresult">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.parentgroup">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.description">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.resultstatus">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.clashpoint">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.approveddate">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.createddate">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.approvedby">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.clashobjects">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.clashtasklink">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.href">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.guid">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.status">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.statusSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.distance">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresult.distanceSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashresultClashtasklink">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresultClashtasklink.starttime">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresultClashtasklink.endtime">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresultClashtasklink.taskname">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresultClashtasklink.tasklink">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresultClashtasklink.taskuid">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresultClashtasklink.animatorscene">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresultClashtasklink.animatoranim">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashtesttypeType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clashtesttypeType.hard">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clashtesttypeType.hard_conservative">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clashtesttypeType.clearance">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clashtesttypeType.duplicate">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clashtesttypeType.custom">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashstatusType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clashstatusType.new">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clashstatusType.old">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clashstatusType.partial">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clashstatusType.ok">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.selectionsets">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.selectionsets.Items">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.selectionsets.name">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.selectionset">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.selectionset.findspec">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.selectionset.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.selectionset.guid">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.findspec">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.findspec.conditions">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.findspec.locator">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.findspec.mode">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.findspec.modeSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.findspec.disjoint">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.modeType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modeType.all">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modeType.selected">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modeType.below">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.viewfolder">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewfolder.Items">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewfolder.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewfolder.guid">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.animation">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.animation.Items">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.animation.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.animation.guid">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.cutview">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.cutview.delay">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.cutview.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.cutview.guid">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.view">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.view.viewpoint">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.view.clipplaneset">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.view.redlines">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.view.name">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.view.guid">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.viewpoint">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.camera">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.viewer">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.primitives">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.up">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.tilt">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.tool">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.toolSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.render">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.renderSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.lighting">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.lightingSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.linear">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.linearSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.angular">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.angularSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.focal">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.focalSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.fov">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoint.fovSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.camera">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.position">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.rotation">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.projection">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.projectionSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.near">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.nearSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.far">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.farSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.aspect">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.aspectSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.height">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.camera.heightSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.projectionType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.projectionType.persp">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.projectionType.ortho">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.viewer">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.radius">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.radiusSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.height">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.heightSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.actual_height">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.actual_heightSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.eye_height">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.eye_heightSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.avatar">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.camera_mode">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.camera_modeSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.first_to_third_angle">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.first_to_third_angleSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.first_to_third_distance">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.first_to_third_distanceSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.first_to_third_param">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.first_to_third_paramSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.first_to_third_correction">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.collision_detection">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.auto_crouch">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.gravity">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.gravity_value">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.gravity_valueSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.terminal_velocity">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewer.terminal_velocitySpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.cameraMode">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.cameraMode.first">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.cameraMode.third">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.primitives">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.primitives.polygons">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.primitives.lines">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.primitives.points">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.primitives.snappoints">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.primitives.text">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.tilt">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.tilt.min">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.tilt.minSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.tilt.max">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.tilt.maxSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.toolType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.none">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.wheel_view_object">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.wheel_tour_building">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.wheel_full_navigation">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.wheel_mini_view_object">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.wheel_mini_tour_building">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.wheel_mini_full_navigation">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.autocam_pan">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.autocam_zoom">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.autocam_zoom_window">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.autocam_orbit">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.autocam_orbit_free">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.autocam_orbit_constrained">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.autocam_look_at">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.autocam_look_around">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.autocam_walk">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_fixed">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_swivel">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_examine">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_walk">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_fly">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_turntable">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_zoom">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_pan_local">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_pan_world">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_swivel_world">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_orbit_world">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.toolType.navigator_zoom_box">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.renderType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.renderType.textured">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.renderType.preview">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.renderType.shaded">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.renderType.wireframe">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.renderType.hiddenline">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.lightingType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.lightingType.none">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.lightingType.user">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.lightingType.headlight">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.lightingType.full">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clipplaneset">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplaneset.range">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplaneset.clipplanes">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplaneset.box">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplaneset.boxrotation">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplaneset.linked">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplaneset.current">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplaneset.mode">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplaneset.modeSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplaneset.enabled">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clipplane">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplane.plane">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplane.state">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplane.stateSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplane.distance">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplane.distanceSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplane.alignment">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplane.alignmentSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.plane">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.plane.vec3f">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.plane.distance">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.plane.distanceSpecified">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clipPlaneStateType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clipPlaneStateType.default">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clipPlaneStateType.disabled">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clipPlaneStateType.enabled">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.alignmentType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.alignmentType.none">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.alignmentType.view">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.alignmentType.back">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.alignmentType.front">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.alignmentType.left">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.alignmentType.right">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.alignmentType.top">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.alignmentType.bottom">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.alignmentType.surface">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.alignmentType.line">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.alignmentType.custom">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clipPlaneModeType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clipPlaneModeType.planes">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.clipPlaneModeType.box">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.rlarrow">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlarrow.colour">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlarrow.start">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlarrow.end">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlarrow.thickness">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlarrow.pattern">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.rlcloud">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlcloud.colour">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlcloud.points">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlcloud.thickness">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlcloud.pattern">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.rlellipse">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlellipse.colour">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlellipse.start">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlellipse.end">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlellipse.thickness">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlellipse.pattern">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.rlline">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlline.colour">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlline.start">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlline.end">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlline.thickness">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rlline.pattern">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.rltag">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltag.colour">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltag.pos1">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltag.pos2">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltag.pos3d">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltag.bounds">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltag.thickness">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltag.pattern">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltag.id">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltag.commentid">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.rltext">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltext.colour">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltext.pos">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltext.text">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltext.thickness">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rltext.pattern">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.modelunitsType">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modelunitsType.m">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modelunitsType.cm">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modelunitsType.mm">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modelunitsType.ft">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modelunitsType.in">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modelunitsType.yrd">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modelunitsType.km">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modelunitsType.mi">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modelunitsType.um">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modelunitsType.mils">
            <remarks/>
        </member>
        <member name="F:Collaboration.Navisworks.Xsd.modelunitsType.uin">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.dbreadlink">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dbreadlink.dblinkconnection">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dbreadlink.dblinkname">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dbreadlink.dblinksql">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dbreadlink.dbfieldmapping">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dbreadlink.active">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dbreadlink.holdopen">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.dblinkconnection">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dblinkconnection.encrypted">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dblinkconnection.connection">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.dblinkname">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dblinkname.name">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.dblinksql">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dblinksql.sql">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.dbfieldmapping">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dbfieldmapping.field">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.dbfieldmapping.display">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.viewpoints">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.viewpoints.Items">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clipplanes">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clipplanes.Items">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.redlines">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.redlines.Items">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashtests">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashtests.clashtest">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.clashresults">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.clashresults.Items">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.pathlink">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.pathlink.node">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.smarttags">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.smarttags.smarttag">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.rules">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.rules.rule">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.ruleparams">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.ruleparams.ruleparam">
            <remarks/>
        </member>
        <member name="T:Collaboration.Navisworks.Xsd.vec2f">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.vec2f.x">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.vec2f.xSpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.vec2f.y">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.Xsd.vec2f.ySpecified">
            <remarks/>
        </member>
        <member name="P:Collaboration.Navisworks.View.Position">
            <summary>
            The Position of the camera.
            </summary>
        </member>
        <member name="P:Collaboration.Navisworks.View.Target">
            <summary>
            The Target point of the camera.
            </summary>
        </member>
        <member name="P:Collaboration.Navisworks.View.Guid">
            <summary>
            The Guid of the View.
            </summary>
        </member>
        <member name="P:Collaboration.Navisworks.View.Name">
            <summary>
            The Name of the View.
            </summary>
        </member>
        <member name="M:Collaboration.Navisworks.View.ByNamePositionAndTarget(System.String,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Creates a View by name, position and target.
            </summary>
            <param name="name">The view name</param>
            <param name="position">The view position</param>
            <param name="target">The view target</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Navisworks.View.BySectionView(Autodesk.Civil.DynamoNodes.SectionView,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates a View by a Civil 3D SectionView. Clipplane is activated in Navisworks and corresponds to the section cut in Civil 3D.
            </summary>
            <param name="sectionView">The Civil 3D Section View</param>
            <param name="depth">The view depth</param>
            <param name="cameraOffsetZ">The camera offset along the view Z axis</param>
            <param name="cameraOffsetX">The camera offset along the view X Axis</param>
            <param name="cameraFromAlignment">If true defines the camera elevation from a profile along the Alignment</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Navisworks.View.BySectionViewWithBox(Autodesk.Civil.DynamoNodes.SectionView,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates a View by a Civil 3D SectionView. Box is acivated in Navisworks.
            </summary>
            <param name="sectionView">The Civil 3D section view</param>
            <param name="depth">The view depth</param>
            <param name="cameraOffsetZ">The camera offset along the view Z Axis</param>
            <param name="cameraOffsetX">The camera offset along the view X Axis</param>
            <param name="cameraFromAlignment">If true defines the camera elevation from a profile along the Alignment</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Navisworks.View.ByNameAndPlane(System.String,Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double)">
            <summary>
            Creates a View by a plane. Clipplane is activated in Navisworks and correspond to the plane in Dynamo.
            </summary>
            <param name="name">The view Name</param>
            <param name="plane">The Dynamo plane</param>
            <param name="cameraOffsetZ">The camera offset along the view Z Axis</param>
            <param name="cameraOffsetX">The camera offset along the view X Axis</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Navisworks.Viewfolder.ByName(System.String)">
            <summary>
            Creates a View Folder for Navisworks by name
            </summary>
            <param name="name">The View Folder name</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Navisworks.Viewfolder.AddItems(Collaboration.Navisworks.Viewfolder,System.Collections.Generic.List{System.Object})">
            <summary>
            Adds items to the View Folder
            </summary>
            <param name="viewfolder">The target view folder</param>
            <param name="items">The objects to add</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Navisworks.Exchange.ByViews(System.Collections.Generic.List{Collaboration.Navisworks.View})">
            <summary>
            Creates an Exchange object by Views
            </summary>
            <param name="views">The list of views</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Navisworks.Exchange.WriteToXML(Collaboration.Navisworks.Exchange,System.String)">
            <summary>
            Writes the Exchange object to XML
            </summary>
            <param name="exchange">The Exchange object</param>
            <param name="path">The path wher to save the XML</param>
            <returns></returns>
        </member>
        <member name="T:Collaboration.Navisworks.Utils">
            <summary>
            Quaternion playground
            </summary>
        </member>
        <member name="T:Collaboration.BIM360.Issue">
            <summary>
            Issue
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.Json">
            <summary>
            Returns the Json response as a Dictionnary.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.Title">
            <summary>
            Returns the Title of an Issue.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.Id">
            <summary>
            Returns the Id of an Issue.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.Access_Token">
            <summary>
            Access Token
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.Type">
            <summary>
            Returns the Type of an Issue.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.Hub">
            <summary>
            Returns the host Hub of an Issue.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.Project">
            <summary>
            Returns the host Project of an Issue.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.Status">
            <summary>
            Returns the status of an Issue.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.Identifier">
            <summary>
            Returns the unique identifier of an Issue.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.TargetURN">
            <summary>
            Returns the URN of the document where the Issue has been placed. A null value indicates that the issue is not a Pushpin one.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.TargetURN_StartingVersion">
            <summary>
            Returns the starting version of the document where the Issue has been placed. A null value indicates that the issue is not a Pushpin one.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.ContainerId">
            <summary>
            Returns the unique identifier of a Issue Container.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.Pushpin">
            <summary>
            Returns the Pushpin of an Issue.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Issue.SheetName">
            <summary>
            Returns the SheetName of an issue if it exists (Project Files).
            </summary>
        </member>
        <member name="M:Collaboration.BIM360.Issue.GetIssuesByFilter(Collaboration.Forge.Project,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a collection of Issues in the Project : both document-related (pusphin) issues and project-related issues.
            </summary>
            <param name="Project">The Project.</param>
            <param name="Limit">The number of issues to return per page</param>
            <param name="Offset">The page offset</param>
            <param name="Filter">The Filter, empty string returns all issues</param>
            <returns> The List of Issues.</returns>
        </member>
        <member name="M:Collaboration.BIM360.Issue.SetAttrituteByNameAndValue(Collaboration.BIM360.Issue,System.String,System.String)">
            <summary>
            Set an attribute by name and value to the issue.
            </summary>
            <param name="issue">The issue.</param>
            <param name="attribute_name">The name of the attribute (description, title, location_description, due_date ... 
            see https://forge.autodesk.com/en/docs/bim360/v1/reference/http/field-issues-:id-PATCH/ for more details.</param>
            <param name="value">The value of the parameter</param>
            <returns> The issue.</returns>
        </member>
        <member name="M:Collaboration.BIM360.Issue.SetAttritutesByNameAndValue(Collaboration.BIM360.Issue,DesignScript.Builtin.Dictionary)">
            <summary>
            Set a Dictionary of attributes by their names and values to the issue.
            </summary>
            <param name="issue">The issue.</param>
            <param name="attributes">The Dictionary containing the names and values of the attribute (Key = name of the attribute, Value = value of the attribute).</param>
            <returns> The issue.</returns>
        </member>
        <member name="T:Collaboration.BIM360.Pushpin">
            <summary>
            Get Pushpin
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Pushpin.ExternalId">
            <summary>
            Returns the ExternalId the Pushpin is assigned to.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Pushpin.ObjectId">
            <summary>
            Returns the ObjectId the Pushpin is assigned to.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Pushpin.Type">
            <summary>
            Returns the Type of Pushpin.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Pushpin.Issue">
            <summary>
            Returns the Issue related.
            </summary>
        </member>
        <member name="P:Collaboration.BIM360.Pushpin.Location">
            <summary>
            Returns the location of the Pusphpin as a Point in the coordinate system of the document.
            </summary>
        </member>
        <member name="T:Collaboration.Photo.Photo">
            <summary>
            Photo
            </summary>
        </member>
        <member name="P:Collaboration.Photo.Photo.GpsLatitude">
            <excluded/>
        </member>
        <member name="P:Collaboration.Photo.Photo.GpsLongitude">
            <excluded/>
        </member>
        <member name="P:Collaboration.Photo.Photo.GpsAltitude">
            <excluded/>
        </member>
        <member name="P:Collaboration.Photo.Photo.GpsLongitudeRef">
            <excluded/>
        </member>
        <member name="P:Collaboration.Photo.Photo.GpsLatitudeRef">
            <excluded/>
        </member>
        <member name="P:Collaboration.Photo.Photo.GpsAltitudeRef">
            <excluded/>
        </member>
        <member name="P:Collaboration.Photo.Photo.GpsImgDir">
            <excluded/>
        </member>
        <member name="P:Collaboration.Photo.Photo.GpsImgDirRef">
            <excluded/>
        </member>
        <member name="M:Collaboration.Photo.Photo.ByFilePath(System.String)">
            <summary>
            Creates a Photo by file path
            </summary>
            <param name="path">The path to the image file</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Photo.Photo.Location(Collaboration.Photo.Photo,System.String)">
            <summary>
            Location
            </summary>
            <param name="photo">The Photo</param>
            <param name="CurrentSytemCode">The System code</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Photo.Photo.Direction(Collaboration.Photo.Photo)">
            <summary>
            Direction
            </summary>
            <param name="photo">The Photo</param>
            <returns></returns>
        </member>
        <member name="M:Collaboration.Photo.Photo.Angle(Collaboration.Photo.Photo)">
            <summary>
            Angle
            </summary>
            <param name="photo">The Photo</param>
            <returns></returns>
        </member>
        <member name="T:Collaboration._JsonConverter">
            <summary>
            Json Converter
            </summary>
        </member>
        <member name="M:Collaboration._JsonConverter.Create(System.Type)">
            <summary>
            Create
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:Collaboration._JsonConverter.CanConvert(System.Type)">
            <summary>
            CanConvert
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:Collaboration._JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            ReadJson
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Civil3DToolkit.Test.ByName(System.String)">
            <summary>
            Returns a Test object wit the given name
            </summary>
            <param name="name">The name of the test</param>
            <returns>The new Test</returns>
        </member>
        <member name="T:Tunnel.RingType">
            <summary>
            RingType
            </summary>
        </member>
        <member name="P:Tunnel.RingType.Dext">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.Dint">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.L1">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.L2">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.Taper">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.CenterCSnoRot">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.Angle">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.CS_NextRing">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.Positions">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.Nsegments">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.KeyAngle">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.RingSytem">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.Beta">
            <excluded/>
        </member>
        <member name="P:Tunnel.RingType.L">
            <summary>
            The medium length.
            </summary>
        </member>
        <member name="P:Tunnel.RingType.Alpha">
            <summary>
            The angle defined by the taper.
            </summary>
        </member>
        <member name="P:Tunnel.RingType.CenterCoordinateSystem">
            <summary>
            The center coordinate system of the ring type where Y axis is aligned with the key and Z axis in the same direction than the drive.
            </summary>
        </member>
        <member name="P:Tunnel.RingType.BackCoordinateSystem">
            <summary>
            The back coordinate system of the ring in the inclined plane (taper) where Y axis is aligned with the key and Z axis in the same direction than the drive.
            </summary>
        </member>
        <member name="P:Tunnel.RingType.FrontCoordinateSystem">
            <summary>
            The front coordinate system of the ring in the inclined plane (taper) where Y axis is aligned with the key and Z axis in the same direction than the drive.
            </summary>
        </member>
        <member name="P:Tunnel.RingType.RingGeometry">
            <summary>
            The ring type geometry as a solid.
            </summary>
        </member>
        <member name="P:Tunnel.RingType.SegmentsGeometry">
            <summary>
            The segments geometry as a list of solid where the first is the key then segments are ordered counterclock wise.
            </summary>
        </member>
        <member name="M:Tunnel.RingType.ByDimensions(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Double)">
            <summary>
            Create a "Universal" rectangular type of ring by its dimensions on YZ plane. The key segment has 1 position and the other segments the same amount of positions.
            </summary>
            <param name="externalDiameter">The outer diameter</param>
            <param name="thickness">The thickness</param>
            <param name="tapering">The taper </param>
            <param name="lengthMed">The medium length</param>
            <param name="segmentsNumber">The number of segments</param>
            <param name="keyPositions">The number of positions of the key, (KeyPositions-1)/SegmentsNumber must be an integer. </param>
            <param name="beta">Angle of the Key</param>
            <returns></returns>
        </member>
        <member name="M:Tunnel.RingType.ByDimensionsAndSystem(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,Tunnel.RingSystem,System.Collections.Generic.List{System.Collections.Generic.List{System.Double}})">
            <summary>
            Create a "Universal" rectangular type of ring by its dimensions on YZ plane. Segments are defined with segmentsAngles parameter.
            </summary>
            <param name="externalDiameter">The outer diameter</param>
            <param name="thickness">The thickness</param>
            <param name="tapering">The taper </param>
            <param name="lengthMed">The medium length</param>
            <param name="keyPositions">The number of positions of the key</param>
            <param name="beta">Angle of the key</param>
            <param name="ringSystem">Rectanguler, Trapezoidal or Rhomboidal</param>
            <param name="segmentsAngles">List of list of 2 angles which defined segments. The first item defines the key then the others are defined until 360°. The number of items in the first list is the segment number.  </param>
            <returns></returns>
        </member>
        <member name="T:Tunnel.Ring">
            <summary>
            Ring
            </summary>
        </member>
        <member name="P:Tunnel.Ring.Dext">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.Dint">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.Thickness">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.Alpha">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.Taper">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.CS_NextRing">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.Positions">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.Nsegments">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.KeyAngle">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.Beta">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.CenterCSnoRot">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.Angle">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.Axis">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.RingType">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.RingSystem">
            <excluded/>
        </member>
        <member name="P:Tunnel.Ring.L">
            <summary>
            The medium length.
            </summary>>
        </member>
        <member name="P:Tunnel.Ring.L1">
            <summary>
            The shortest length.
            </summary>
        </member>
        <member name="P:Tunnel.Ring.L2">
            <summary>
            The longest length.
            </summary>
        </member>
        <member name="P:Tunnel.Ring.CenterCoordinateSystem">
            <summary>
            The center coordinate system of the ring where Y axis is aligned with the key and Z axis in the same direction than the drive.
            </summary>
        </member>
        <member name="P:Tunnel.Ring.BackCoordinateSystem">
            <summary>
            The back coordinate system of the ring in the inclined plane (taper) where Y axis is aligned with the key and Z axis in the same direction than the drive.
            </summary>
        </member>
        <member name="P:Tunnel.Ring.FrontCoordinateSystem">
            <summary>
            The front coordinate system of the ring in the inclined plane (taper) where Y axis is aligned with the key and Z axis in the same direction than the drive.
            </summary>
        </member>
        <member name="P:Tunnel.Ring.RingGeometry">
            <summary>
            The ring geometry as a solid.
            </summary>
        </member>
        <member name="P:Tunnel.Ring.SegmentsGeometry">
            <summary>
            The segments geometry as a list of solid where the first is the key then segments are ordered counterclock wise.
            </summary>
        </member>
        <member name="M:Tunnel.Ring.ByTypeAndSystem(Tunnel.RingType,Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Place a ring on the axis with a specific coordiante system.
            </summary>
            <param name="ringType">The ring type</param>
            <param name="coordinateSystem">The coordinate system</param>
            <returns></returns>
        </member>
        <member name="M:Tunnel.Ring.ByTypeAndAxisAndKeyPosition(Tunnel.RingType,Autodesk.DesignScript.Geometry.Curve,System.Double,System.Int32)">
            <summary>
            Place a ring on the axis.
            </summary>
            <param name="ringType">The ring type</param>
            <param name="axis">The axis</param>
            <param name="parameterOnCurve">The parameter on the axis</param>
            <param name="keyPosition">The Key position which starts at 1 : Angle = 0 with local Y axis</param>
            <returns></returns>
        </member>
        <member name="M:Tunnel.Ring.ByTypeAndAxisAndAngle(Tunnel.RingType,Autodesk.DesignScript.Geometry.Curve,System.Double,System.Double)">
            <summary>
            ByTypeAndAxis
            </summary>
            <param name="ringType"></param>
            <param name="axis"></param>
            <param name="parameterOnCurve"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Tunnel.Ring.NextRing(Tunnel.Ring)">
            <summary>
            Given a ring, it finds the position (key) of the next ring minimizing the distance to the axis. 
            </summary>
            <param name="ring">The ring</param>
            <returns>The next ring with the same type.</returns>
        </member>
        <member name="M:Tunnel.Ring.NextRingElevationMin(Tunnel.Ring,System.Double)">
            <summary>
            Given a ring, it finds the position (key) of the next ring by minimizing the distance to the axis and removing key position below the elevation.
            </summary>
            <param name="ring">The ring</param>
            <param name="elevation">The minimal elevation of key position where 0 is the center of the possible next rings centers</param>
            <returns>The next ring with the same type.</returns>
        </member>
        <member name="M:Tunnel.Ring.NextRingByType(Tunnel.Ring,Tunnel.RingType)">
            <summary>
            Given a ring and the next ring type, it finds the position (key) of the next ring minimizing the distance to the axis.
            </summary>
            <param name="ring">The ring</param>
            <param name="ringType">The next ring type</param>
            <returns>The next ring with the new type.</returns>
        </member>
        <member name="M:Tunnel.Ring.NextRingByTypeElevationMin(Tunnel.Ring,Tunnel.RingType,System.Double)">
            <summary>
            Given a ring and the next ring type, it finds the position (key) of the next ring by minimizing the distance to the axis and removing key position below the elevation.
            </summary>
            <param name="ring">The ring</param>
            <param name="ringType">The next ring type</param>
            <param name="elevation">The minimal elevation of key position where 0 is the center of the possible next rings centers</param>
            <returns>The next ring with the new type.</returns>
        </member>
        <member name="M:Tunnel.Ring.NextRingByKeyPosition(Tunnel.Ring,System.Int32)">
            <summary>
            NextRingByKeyPosition
            </summary>
            <param name="ring"></param>
            <param name="Angle"></param>
            <returns></returns>
        </member>
        <member name="M:Tunnel.Ring.NextRingByAngle(Tunnel.Ring,System.Double)">
            <summary>
            NextRingByAngle
            </summary>
            <param name="Ring"></param>
            <param name="Angle"></param>
            <returns></returns>
        </member>
        <member name="M:Tunnel.Ring.FindKey(Tunnel.Ring,Tunnel.RingType,System.Double)">
            <summary>
            Given a ring and the next ring type, it finds the position (key) of the next ring by minimizing the distance to the axis and removing key position below the elevation.If elevation is not defined, it is ignored.
            </summary>
            <param name="ring">The ring</param>
            <param name="ringType">The next ring type</param>
            <param name="elevation">The minimal elevation of key position where 0 is the center of the possible next rings centers</param>
            <returns></returns>
        </member>
        <member name="M:Tunnel.Ring.ParameterOnCurve(Tunnel.Ring)">
            <summary>
            Return the position of the ring (center) on the axis.
            </summary>
            <param name="ring">The ring</param>
            <returns></returns>
        </member>
        <member name="M:Tunnel.Ring.Lining(Tunnel.Ring,System.Int32)">
            <summary>
            Lining by finding the shortest distance between axis and center of ring.
            </summary>
            <param name="ring">The ring</param>
            <param name="n">Number of ring</param>
            <returns></returns>
        </member>
        <member name="M:Tunnel.Ring.LiningByKeyPositions(Tunnel.Ring,System.Collections.Generic.List{System.Int32})">
            <summary>
            Lining by key positions as a list of integer.
            </summary>
            <param name="ring">The ring</param>
            <param name="keyPositions">List of key position</param>
            <returns></returns>
        </member>
        <member name="M:Tunnel.Ring.LiningAndElevationMin(Tunnel.Ring,System.Int32,System.Double)">
            <summary>
            Lining by finding the shortest distance between axis and center of ring and removing key position below the elevation.
            </summary>
            <param name="ring">The ring</param>
            <param name="n">Number of ring</param>
            <param name="elevation">The minimal elevation of key position where 0 is the center of the possible next rings centers</param>
            <returns></returns>
        </member>
        <member name="T:Tunnel.RingSystem">
            <summary>
            The system defines the geometry of segments.
            </summary>
        </member>
        <member name="F:Tunnel.RingSystem.Rectangular">
            <summary>
            Rectangular segment where key segment is trapezoidal. 
            </summary>
        </member>
        <member name="F:Tunnel.RingSystem.Trapezoidal">
            <summary>
            Trapezoidal segments.
            </summary>
        </member>
        <member name="F:Tunnel.RingSystem.Rhomboidal">
            <summary>
            Rhomboidal system where 2 segments are trapezoidal.
            </summary>
        </member>
    </members>
</doc>

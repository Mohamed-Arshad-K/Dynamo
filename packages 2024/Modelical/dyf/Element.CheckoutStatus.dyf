{
  "Uuid": "2af7ae06-6714-46f0-ae47-5721da88b322",
  "IsCustomNode": true,
  "Category": "Modelical.Elements.Query",
  "Description": "This node gets information 'About Creator:', 'Last update in central performed by' and 'Current Owner:' of an element in the active project file.",
  "Name": "Element.CheckoutStatus",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# This bit is default. It is always used.\r\n# It connects with DesignScript and Dynamo internals and\r\n# Enable Python support and load DesignScript library.\r\nimport clr\r\nclr.AddReference(\"ProtoGeometry\")\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# This import let's us call / use Dynamo nodes from Python code\r\nclr.AddReference(\"DSCoreNodes\")\r\nfrom DSCore import *\r\n# General API and User Interface API DLL\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Structure import *\r\n\r\nclr.AddReference(\"RevitAPIUI\")\r\nfrom Autodesk.Revit.UI import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.Elements)\r\n# This bit is needed to access revit documents (project and families) \r\n# and to use Transactions (when we need to WRITE data to the Revit database)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nuidoc = DocumentManager.Instance.CurrentUIApplication\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\napp = uidoc.Application\r\n\r\n# To be able to import Python Standard Library modules, we need to locate them\r\nimport sys\r\nsys.path.append(r\"C:\\Program Files (x86)\\IronPython 2.7\\Lib\")\r\n# Function Helpers\r\ndef Feet2m(value):\r\n\treturn value * 0.3048\r\n\r\ndef toList(input):\r\n    \"\"\"Return iterable if available, a list of 1 otherwise\"\"\"\r\n    if hasattr(input, \"__iter__\") and not isinstance(input, basestring):\r\n        return iter(input)\r\n    else:\r\n        return [input]\r\n\r\ndef flatten(x):\r\n    result = []\r\n    for el in x:\r\n        if hasattr(el, \"__iter__\") and not isinstance(el, basestring):\r\n            result.extend(flatten(el))\r\n        else:\r\n            result.append(el)\r\n    return result\r\n\r\n# Logic starts here\r\nelements = toList(UnwrapElement(IN[0]))\r\nfList=[]\r\nfor e in elements:\r\n\tcreator= WorksharingUtils.GetWorksharingTooltipInfo(doc,e.Id).Creator +\" is the creator \"\r\n\tlastChageBy=WorksharingUtils.GetWorksharingTooltipInfo(doc,e.Id).LastChangedBy+\" performed the last change\"\r\n\t\r\n\tif WorksharingUtils.GetWorksharingTooltipInfo(doc,e.Id).Owner != \"\":\r\n\t\towner = WorksharingUtils.GetWorksharingTooltipInfo(doc,e.Id).Owner+ \" is the owner\"\r\n\telse:\r\n\t\towner = \"It's free\"\r\n\t\t\r\n\t\r\n\tfList.append([e,creator,lastChageBy,owner])\r\n# Transactions\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n# Your code\r\nTransactionManager.Instance.TransactionTaskDone()\r\n# Output\r\nOUT =fList",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "57cb3b03072845ff91041bc0a0a3975b",
      "Inputs": [
        {
          "Id": "bf5e07f020e941b9bfa4d87054517420",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48b5d933e9914497b6209420801df737",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_elements",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Element(s) to ask about creator, last update in central and current owner"
      },
      "Id": "0ee2397fa6c64f61b87cf5bb1c131ab7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f7bd3006e6c84d129e8e8c2084d7c5f2",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "_info",
      "Id": "c18717992724485a9f19a158d1177167",
      "Inputs": [
        {
          "Id": "24e90bbc1fab41a3be94b1080780c5b9",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "48b5d933e9914497b6209420801df737",
      "End": "24e90bbc1fab41a3be94b1080780c5b9",
      "Id": "83561b4ff4674f479ca63e868721fa14"
    },
    {
      "Start": "f7bd3006e6c84d129e8e8c2084d7c5f2",
      "End": "bf5e07f020e941b9bfa4d87054517420",
      "Id": "ba73f2c526934017812b0a6cfea0ce33"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "57cb3b03072845ff91041bc0a0a3975b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 586.84607480956674,
        "Y": 383.28568492926769
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "0ee2397fa6c64f61b87cf5bb1c131ab7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -138.419499619367,
        "Y": 379.31841936884979
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "c18717992724485a9f19a158d1177167",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 759.90097470074784,
        "Y": 382.95546360167572
      }
    ],
    "Annotations": [],
    "X": 300.20700570474639,
    "Y": 65.291346557051781,
    "Zoom": 0.80332159346259768
  }
}
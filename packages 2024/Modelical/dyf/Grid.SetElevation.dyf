{
  "Uuid": "df879aa2-18b8-4434-8119-fce5a1e8dab8",
  "IsCustomNode": true,
  "Category": "Modelical.Elements.Actions",
  "Description": "This node allows to modify grids at Z axis dimension, by selecting 2 levels and an offset.",
  "Name": "Grid.SetElevation",
  "ElementResolver": {
    "ResolutionMap": {
      "Revit.Elements.Level": {
        "Key": "Revit.Elements.Level",
        "Value": "RevitNodes.dll"
      },
      "Revit.Elements.Grid": {
        "Key": "Revit.Elements.Grid",
        "Value": "RevitNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_grids",
        "TypeName": "Revit.Elements.Grid",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Grids to be modified"
      },
      "Id": "cb948e5fa90d4ddcac1111054bbee39e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "592c047874fe4893acf3d41b81af68f2",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_baseLevel",
        "TypeName": "Revit.Elements.Level",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": "Inferior level"
      },
      "Id": "185d38a95cc34b6da9dca85ea95ea992",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "858d5db8084e4297ba62cb1f133a6fd8",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_topLevel",
        "TypeName": "Revit.Elements.Level",
        "TypeRank": 0,
        "DefaultValue": null,
        "Description": "Superior level"
      },
      "Id": "fbef885a4ab34983be1b126a68663856",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b395f6c564064f5b9beecfa1d90f7916",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_offset",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "0",
        "Description": "Optional gap between level and extension"
      },
      "Id": "7a73152d3e1842689567849be0e0f74f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "23f0a3ca48c64cd4bf72e834aa72f830",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "_grids",
      "Id": "c4b64d8068444d1ea4e6aabd04f5ce25",
      "Inputs": [
        {
          "Id": "639fc9d052454b3bb100b6e2c5c4ba2d",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# This node has been made by Modelical\r\n# www.modelical.com\r\n\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#Load Dynamo wrappers\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\n#Load Revit API\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\n#Load document reference\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuidoc = DocumentManager.Instance.CurrentUIApplication\r\napp = uidoc.Application\r\n\r\ndef toList(input):\r\n    \"\"\"Return iterable if available, a list of 1 otherwise\"\"\"\r\n    if hasattr(input, \"__iter__\") and not isinstance(input, basestring):\r\n        return input\r\n    else:\r\n        return [input] \r\n\r\n\r\n\r\n\r\ngrids = toList(UnwrapElement(IN[0]))\r\nlevel0 = UnwrapElement(IN[1])\r\nlevel1 = UnwrapElement(IN[2])\r\ninGap = IN[3]\r\n\r\ndef toModelUnits(x):\r\n    if int(app.VersionNumber) <2020:\r\n        docLengthUnit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits\r\n        return UnitUtils.Convert(x,DisplayUnitType.DUT_DECIMAL_FEET,docLengthUnit)\r\n    elif int(app.VersionNumber) >=2020:\r\n        docLengthUnit = Document.GetUnits(doc).GetFormatOptions(SpecTypeId.Length).GetUnitTypeId()\r\n        return UnitUtils.Convert(x, docLengthUnit, UnitTypeId.FeetFractionalInches)\r\n  \r\n \r\ngap=toModelUnits(inGap)\r\n\r\n\r\nif level0.Elevation < level1.Elevation:\r\n\tmin = level0.Elevation - gap\r\n\tmax = level1.Elevation + gap\r\nelse:\r\n\tmin = level1.Elevation - gap\r\n\tmax = level0.Elevation + gap\r\n\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\nfor grid in grids:\r\n\tgrid.SetVerticalExtents(min,max)\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n#Assign your output to the OUT variable.\r\nOUT = grids",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "17cae4c681544698a29a13c0f4101129",
      "Inputs": [
        {
          "Id": "a49483a7bafb4db09b5dfed87a86bdce",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a437abc8b1246f89bdfde6a44fb67bb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "074b40f7048c49838b1d4a1a32241a0f",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff5b03d0bf8e4dad8bf51a774ff3de55",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba134be85c324ca9850184bcbf946de8",
          "Name": "OUT",
          "Description": "Resultado de la secuencia de comandos de Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "592c047874fe4893acf3d41b81af68f2",
      "End": "a49483a7bafb4db09b5dfed87a86bdce",
      "Id": "f8cd03863d3c47ff8f29758f92f1a1a3"
    },
    {
      "Start": "858d5db8084e4297ba62cb1f133a6fd8",
      "End": "3a437abc8b1246f89bdfde6a44fb67bb",
      "Id": "fb89291a46a9428b95996381fc1b2cbf"
    },
    {
      "Start": "b395f6c564064f5b9beecfa1d90f7916",
      "End": "074b40f7048c49838b1d4a1a32241a0f",
      "Id": "a46be0ff0d2845f4b4ab3fbe5614e3dd"
    },
    {
      "Start": "23f0a3ca48c64cd4bf72e834aa72f830",
      "End": "ff5b03d0bf8e4dad8bf51a774ff3de55",
      "Id": "29423f3170094887bf01eedf4b8749e8"
    },
    {
      "Start": "ba134be85c324ca9850184bcbf946de8",
      "End": "639fc9d052454b3bb100b6e2c5c4ba2d",
      "Id": "152b850571594a48aed355b4e40b9250"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "cb948e5fa90d4ddcac1111054bbee39e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 317.04371441781836,
        "Y": 363.45059009793721
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "185d38a95cc34b6da9dca85ea95ea992",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 283.84566381931381,
        "Y": 446.91216017411045
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "fbef885a4ab34983be1b126a68663856",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 290.57095886828233,
        "Y": 520.38471022851979
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "7a73152d3e1842689567849be0e0f74f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 255.16490516866941,
        "Y": 603.8462803046931
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "c4b64d8068444d1ea4e6aabd04f5ce25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 913.0,
        "Y": 399.0
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "17cae4c681544698a29a13c0f4101129",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 745.05162626262825,
        "Y": 406.26402297704243
      }
    ],
    "Annotations": [],
    "X": -232.05136912796979,
    "Y": -237.6752112985962,
    "Zoom": 1.33823125
  }
}
{
  "Uuid": "19385b50-ea80-4333-b50e-da227fc7597a",
  "IsCustomNode": true,
  "Category": "Modelical.Elements.Actions",
  "Description": "This node fit the grids to the crop view on the selected views.",
  "Name": "Grid.FitToCropView",
  "ElementResolver": {
    "ResolutionMap": {
      "Revit.Elements.Level": {
        "Key": "Revit.Elements.Level",
        "Value": "RevitNodes.dll"
      },
      "Revit.Elements.Grid": {
        "Key": "Revit.Elements.Grid",
        "Value": "RevitNodes.dll"
      },
      "Revit.Elements.Views": {
        "Key": "archilab.Revit.Elements.Elements",
        "Value": "archilab2021.dll"
      },
      "Revit.Elements": {
        "Key": "archilab.Revit.Elements.Elements",
        "Value": "archilab2021.dll"
      },
      "archilab.Revit.Elements.Elements.Views": {
        "Key": "archilab.Revit.Elements.Elements",
        "Value": "archilab2021.dll"
      },
      "Revit.Elements.View": {
        "Key": "Revit.Elements.Views.View",
        "Value": "RevitNodes.dll"
      },
      "Revit.Elements.Views.View": {
        "Key": "Revit.Elements.Views.View",
        "Value": "RevitNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_views",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Views to fit their grids to crop view."
      },
      "Id": "cb948e5fa90d4ddcac1111054bbee39e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "592c047874fe4893acf3d41b81af68f2",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_offset",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "0",
        "Description": "Optional gap between crop view and grid end points."
      },
      "Id": "7a73152d3e1842689567849be0e0f74f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "23f0a3ca48c64cd4bf72e834aa72f830",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "_views",
      "Id": "c4b64d8068444d1ea4e6aabd04f5ce25",
      "Inputs": [
        {
          "Id": "639fc9d052454b3bb100b6e2c5c4ba2d",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "l[0];\nl[1];",
      "Id": "4755fcb64d0e469db18c9ea430c70a5e",
      "Inputs": [
        {
          "Id": "552260407e97454292d0ef935643efe3",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "53e4a6bbcd4e459194d7299c061a7f26",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72f56be7fa9e47ee8432a09564835fd9",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "_errorViews",
      "Id": "aaa71bf9c7bf4c3eafe186871cd36373",
      "Inputs": [
        {
          "Id": "e0e7d0f93aa6448882f3bed87d338e4e",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# This bit is default. It is always used.\r\n# It connects with DesignScript and Dynamo internals and\r\n# Enable Python support and load DesignScript library.\r\nimport clr\r\nclr.AddReference(\"ProtoGeometry\")\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript.Geometry import Line as rLine\r\n\r\n# This import let's us call / use Dynamo nodes from Python code\r\nclr.AddReference(\"DSCoreNodes\")\r\nfrom DSCore import *\r\n# General API and User Interface API DLL\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Structure import *\r\n\r\nclr.AddReference(\"RevitAPIUI\")\r\nfrom Autodesk.Revit.UI import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.Elements)\r\n# This bit is needed to access revit documents (project and families) \r\n# and to use Transactions (when we need to WRITE data to the Revit database)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nuidoc = DocumentManager.Instance.CurrentUIApplication\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\napp = uidoc.Application\r\n\r\n# To be able to import Python Standard Library modules, we need to locate them\r\nimport sys\r\nsys.path.append(r\"C:\\Program Files (x86)\\IronPython 2.7\\Lib\")\r\n# Function Helpers\r\ndef Feet2m(value):\r\n\treturn value * 0.3048\r\n\t\r\ndef M2Feet(value):\r\n\treturn value / 0.3048\r\n\r\n\r\ndef toList(input):\r\n    \"\"\"Return iterable if available, a list of 1 otherwise\"\"\"\r\n    if hasattr(input, \"__iter__\") and not isinstance(input, basestring):\r\n        return input\r\n    else:\r\n        return [input]\r\n\r\ndef flatten(x):\r\n    result = []\r\n    for el in x:\r\n        if hasattr(el, \"__iter__\") and not isinstance(el, basestring):\r\n            result.extend(flatten(el))\r\n        else:\r\n            result.append(el)\r\n    return result\r\n\r\n# Logic starts here\r\nviews= toList(UnwrapElement(IN[0]))\r\noffset=M2Feet(IN[1])\r\n# Transactions\r\n\r\nlistout=[]\r\nsize= 0.003\r\nfList=[]\r\neList=[]\r\n\r\nfor view in views:\r\n\tviewGrids=[]\r\n\t\r\n\tif view == None:\r\n\t\teList.append(view)\r\n\t\tcontinue\r\n\t\r\n\t\r\n\ttry:\r\n\t\tlen(FilteredElementCollector(doc,view.Id).OfCategory(BuiltInCategory.OST_Grids).ToElements())\r\n\texcept:\r\n\t\teList.append(view)\r\n\t\tcontinue\r\n\t\t\r\n\r\n\ttry:\r\n\t\tcropLines=view.GetCropRegionShapeManager().GetCropShape()[0]\r\n\texcept:\r\n\t\teList.append(view)\r\n\t\tcontinue\r\n\t\r\n\tif \tlen(FilteredElementCollector(doc,view.Id).OfCategory(BuiltInCategory.OST_Grids).ToElements())!=0:\r\n\t\r\n\t\tfor grid in FilteredElementCollector(doc,view.Id).OfCategory(BuiltInCategory.OST_Grids).ToElements():\t\r\n\t\t\t\t\t\t\r\n\t\t\tgLine=grid.GetCurvesInView(DatumExtentType.ViewSpecific, view )[0]\r\n\t\t\t\r\n\t\t\tstartPoint=gLine.GetEndPoint(0)\r\n\t\t\tendPoint=gLine.GetEndPoint(1)\r\n\t\t\t\r\n\t\t\tnewStart = startPoint +10*(startPoint-endPoint)\r\n\t\t\tnewEnd = endPoint +10*(endPoint-startPoint)\r\n\t\t\tnewGLine= Line.CreateBound(newStart,newEnd)\r\n\t\r\n\t\t\tintersectPoints=[]\r\n\t\t\t\t\r\n\t\t\tfor cropLine in cropLines:\r\n\t\t\t\r\n\t\t\t\tzValue=newGLine.GetEndPoint(0).Z\r\n\t\t\t\t\r\n\t\t\t\tproCropLine=Line.CreateBound(XYZ(cropLine.GetEndPoint(0).X,cropLine.GetEndPoint(0).Y,zValue),XYZ(cropLine.GetEndPoint(1).X,cropLine.GetEndPoint(1).Y,zValue))\r\n\t\t\t\t\r\n\t\t\t\tif len(newGLine.ToProtoType().Intersect(proCropLine.ToProtoType())) > 0 :\r\n\t\t\t\t\tintersectPoints.append(newGLine.ToProtoType().Intersect(proCropLine.ToProtoType())[0])\r\n\t\r\n\t\t\tif len(intersectPoints) ==2:\r\n\t\t\t\tcSPoint=intersectPoints[0].ToXyz()\r\n\t\t\t\tcEPoint=intersectPoints[1].ToXyz()\r\n\t\t\t\r\n\t\t\t\tnewCSPoint = cSPoint +offset*((cSPoint-cEPoint).Normalize())\r\n\t\t\t\tnewCEPoint = cEPoint +offset*((cEPoint-cSPoint).Normalize())\r\n\t\t\t\tnewLine= Line.CreateBound(newCEPoint,newCSPoint)\r\n\t\t\t\t\r\n\t\t\t\tgridBubble0=grid.IsBubbleVisibleInView(DatumEnds.End0,view)\r\n\t\t\t\tgridBubble1=grid.IsBubbleVisibleInView(DatumEnds.End1,view)\r\n\t\t\t\ttry:\r\n\t\t\t\t\ta=grid.SetCurveInView( DatumExtentType.ViewSpecific , view, newLine)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif gridBubble0 == True:\r\n\t\t\t\t\t\tgrid.ShowBubbleInView(DatumEnds.End0,view)\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tgrid.HideBubbleInView(DatumEnds.End0,view)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif gridBubble1 == True:\r\n\t\t\t\t\t\tgrid.ShowBubbleInView(DatumEnds.End1,view)\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tgrid.HideBubbleInView(DatumEnds.End1,view)\t\r\n\t\t\t\texcept:\r\n\t\t\t\t\tNone\r\n\t\t\t\t\t\r\n\t\tfList.append(view)\r\n\t\t\t\t\r\n# Output\r\n\r\nOUT=[fList,eList]\r\n",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1ba0f4ac8693469496169107191fd75c",
      "Inputs": [
        {
          "Id": "86b88c515e8c4dee8bb42be9261fd9fd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "897e2fdbd676433f9f126cd8e4caabb5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9cc077f625584eac98e3cbfde95f0f29",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "592c047874fe4893acf3d41b81af68f2",
      "End": "86b88c515e8c4dee8bb42be9261fd9fd",
      "Id": "4dfdb2cdbc2e4d269e05a87aa450fc96"
    },
    {
      "Start": "23f0a3ca48c64cd4bf72e834aa72f830",
      "End": "897e2fdbd676433f9f126cd8e4caabb5",
      "Id": "e8732e77c4a04f79aa29b3445597b33e"
    },
    {
      "Start": "53e4a6bbcd4e459194d7299c061a7f26",
      "End": "639fc9d052454b3bb100b6e2c5c4ba2d",
      "Id": "67a215cc927b4f73964e798d91304051"
    },
    {
      "Start": "72f56be7fa9e47ee8432a09564835fd9",
      "End": "e0e7d0f93aa6448882f3bed87d338e4e",
      "Id": "59be8758ab054fad8f1f0b52d91fbc26"
    },
    {
      "Start": "9cc077f625584eac98e3cbfde95f0f29",
      "End": "552260407e97454292d0ef935643efe3",
      "Id": "a5afc0a644ab4ef49679ad1e2ba9a621"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -25.877178658211083,
      "EyeY": 28.033609895561192,
      "EyeZ": 125.07304986640402,
      "LookX": 25.877178658211083,
      "LookY": -28.033609895561192,
      "LookZ": -125.07304986640402,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "cb948e5fa90d4ddcac1111054bbee39e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 223.63683873769946,
        "Y": 363.45059009793721
      },
      {
        "Id": "7a73152d3e1842689567849be0e0f74f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 117.66998416753472,
        "Y": 455.142534221944
      },
      {
        "Id": "c4b64d8068444d1ea4e6aabd04f5ce25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1037.7915859086388,
        "Y": 366.86803476603905
      },
      {
        "Id": "4755fcb64d0e469db18c9ea430c70a5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 867.23078503808654,
        "Y": 386.93391463545629
      },
      {
        "Id": "aaa71bf9c7bf4c3eafe186871cd36373",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1043.0223709467252,
        "Y": 474.4727555495358
      },
      {
        "Id": "1ba0f4ac8693469496169107191fd75c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Grid.FitToCropView",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 671.82063572941513,
        "Y": 384.59362781925483
      }
    ],
    "Annotations": [],
    "X": -466.05136912796979,
    "Y": -78.6752112985962,
    "Zoom": 1.33823125
  }
}
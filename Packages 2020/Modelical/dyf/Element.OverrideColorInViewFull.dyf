{
  "Uuid": "8a8c174c-fddf-4a49-afb5-25de991add49",
  "IsCustomNode": true,
  "Category": "Modelical.Elements.Actions",
  "Description": "This node modifies the visualization of the elements in the active view by selecting color and fill pattern. Solid fill pattern will be applied by default.",
  "Name": "Element.OverrideColorInViewFull",
  "ElementResolver": {
    "ResolutionMap": {
      "Color": {
        "Key": "DSCore.Color",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_elements",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Elements to override"
      },
      "Id": "980b5f652afa42aea09d66cea5db0992",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bb50370baba542d7941349af78f65b60",
          "Name": "",
          "Description": "Símbolo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un parámetro de función, utilícelo con nodos personalizados.\r\n\r\nPuede especificar el tipo y el valor por defecto del parámetro. Por ejemplo,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_colors",
        "TypeName": "DSCore.Color",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Colors to be applied. You can use Color Range component"
      },
      "Id": "be43dce9d39a4babb6e78f50b6ecb778",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fae2a4e51a864a65b63e69d10a781aca",
          "Name": "",
          "Description": "Símbolo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un parámetro de función, utilícelo con nodos personalizados.\r\n\r\nPuede especificar el tipo y el valor por defecto del parámetro. Por ejemplo,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_fillPatternName",
        "TypeName": "string",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": "Fill Pattern name (String).Solid Fill will be applied by default"
      },
      "Id": "703e9eb862354100be49f93c2281ec2f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34549afee6e8456483f16a6266cba044",
          "Name": "",
          "Description": "Símbolo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un parámetro de función, utilícelo con nodos personalizados.\r\n\r\nPuede especificar el tipo y el valor por defecto del parámetro. Por ejemplo,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_reset",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": "If true, it will remove color overrides"
      },
      "Id": "0f69cca50fb242a78b3a2297055e34db",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7c0d03201ad74ebcaf477cfa6c24f9b2",
          "Name": "",
          "Description": "Símbolo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Un parámetro de función, utilícelo con nodos personalizados.\r\n\r\nPuede especificar el tipo y el valor por defecto del parámetro. Por ejemplo,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# This node has been made by Modelical\r\n# www.modelical.com\r\n\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nfrom System.Collections.Generic import *\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\nversion = app.VersionNumber\r\n\r\ndef toList(input):\r\n    \"\"\"Return list if available, a list of 1 otherwise\"\"\"\r\n    if hasattr(input, \"__iter__\") and not isinstance(input, basestring):\r\n        return input\r\n    else:\r\n        return [input]\r\n\r\ndef flatten(x):\r\n    result = []\r\n    for el in x:\r\n        if hasattr(el, \"__iter__\") and not isinstance(el, basestring):\r\n            result.extend(flatten(el))\r\n        else:\r\n            result.append(el)\r\n    return result\r\n\r\ninput = flatten(toList(IN[0]))\r\ndynColor = flatten(toList(IN[1]))\r\nname = IN[2]\r\nbool = IN[3]\t\r\n\r\nelements = []\r\nfor i in input:\r\n\telements.append(UnwrapElement(i))\r\n\r\nif bool:\r\n\tview = doc.ActiveView\r\n\toverride = OverrideGraphicSettings()\r\n\t\r\n\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\tfor e in elements:\r\n\t\tview.SetElementOverrides(e.Id, override)\r\n\tTransactionManager.Instance.TransactionTaskDone()\r\n\tOUT = elements\r\n\r\nelse:\r\n\tfillPatterns = FilteredElementCollector(doc).OfClass(FillPatternElement).ToElements()\r\n\tfor f in fillPatterns:\r\n\t\tif f.GetFillPattern().IsSolidFill:\r\n\t\t\tfillPat = f\r\n\t\t\tbreak\r\n\t\r\n\tgraphSettings = Autodesk.Revit.DB.OverrideGraphicSettings()\r\n\tcolor = []\r\n\tfor d in dynColor:\r\n\t\tcolor.append(Autodesk.Revit.DB.Color(d.Red, d.Green, d.Blue))\r\n\r\n\tfillPatDraft = FillPatternElement.GetFillPatternElementByName(doc, FillPatternTarget.Drafting, name)\r\n\tif fillPatDraft != None:\r\n\t\tfillPat = fillPatDraft\r\n\r\n\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\t\r\n\ti = 0\r\n\tfor e in elements:\r\n\t\tif int(app.VersionNumber) < 2019:\r\n\t\t\tid = e.Id\r\n\t\t\tif len(color)==1:\r\n\t\t\t\ti = 0\r\n\t\t\tgraphSettings.SetCutLineColor(color[i])\r\n\t\t\tgraphSettings.SetCutFillColor(color[i])\r\n\t\t\tgraphSettings.SetProjectionLineColor(color[i])\r\n\t\t\tgraphSettings.SetProjectionFillColor(color[i])\r\n\t\t\tgraphSettings.SetCutFillPatternId(fillPat.Id)\r\n\t\t\tgraphSettings.SetProjectionFillPatternId(fillPat.Id)\t\r\n\t\t\tdoc.ActiveView.SetElementOverrides(id, graphSettings)\r\n\t\telse:\r\n\t\t\tid = e.Id\r\n\t\t\tif len(color)==1:\r\n\t\t\t\ti = 0\r\n\t\t\tgraphSettings.SetCutLineColor(color[i])\r\n\t\t\tgraphSettings.SetCutForegroundPatternColor(color[i])\r\n\t\t\tgraphSettings.SetCutBackgroundPatternColor(color[i])\r\n\t\t\tgraphSettings.SetProjectionLineColor(color[i])\r\n\t\t\tgraphSettings.SetSurfaceForegroundPatternColor(color[i])\r\n\t\t\tgraphSettings.SetSurfaceBackgroundPatternColor(color[i])\r\n\t\t\tgraphSettings.SetCutForegroundPatternId(fillPat.Id)\r\n\t\t\tgraphSettings.SetCutBackgroundPatternId(fillPat.Id)\r\n\t\t\tgraphSettings.SetSurfaceForegroundPatternId(fillPat.Id)\r\n\t\t\tgraphSettings.SetSurfaceBackgroundPatternId(fillPat.Id)\t\t\t\r\n\t\t\tdoc.ActiveView.SetElementOverrides(id, graphSettings)\t\t\r\n\t\ti += 1\r\n\t\t\r\n\tTransactionManager.Instance.TransactionTaskDone()\r\n\tOUT = elements",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "2ecbfa066c3c44118946b9b7422273f1",
      "Inputs": [
        {
          "Id": "be80449ac34c48d8b775a7e0304e7c3e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "845f206f129b4e068a3cded267366953",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0db53a8a5034a799184ac6cc1f33c71",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f99e07863e664d3b82f8c2118e45f780",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b4c7d10744448da93b67295417925bc",
          "Name": "OUT",
          "Description": "Resultado de la secuencia de comandos de Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ejecuta una secuencia de comandos de Python incrustada."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "/*Selected elements*/\r\n_elements",
      "Id": "ea22d443b6ff4070aa97969f681147dc",
      "Inputs": [
        {
          "Id": "0433bda85e0d4814816d4a9f3a4240d1",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Una función de salida, se debe utilizar con nodos personalizados"
    }
  ],
  "Connectors": [
    {
      "Start": "bb50370baba542d7941349af78f65b60",
      "End": "be80449ac34c48d8b775a7e0304e7c3e",
      "Id": "e0b94e3258984e0f8c7b44fccb09c2c3"
    },
    {
      "Start": "fae2a4e51a864a65b63e69d10a781aca",
      "End": "845f206f129b4e068a3cded267366953",
      "Id": "4850fba503df4317b63d8b86fc90ef11"
    },
    {
      "Start": "34549afee6e8456483f16a6266cba044",
      "End": "e0db53a8a5034a799184ac6cc1f33c71",
      "Id": "dd27ccada46842118aaebceba01b24ee"
    },
    {
      "Start": "7c0d03201ad74ebcaf477cfa6c24f9b2",
      "End": "f99e07863e664d3b82f8c2118e45f780",
      "Id": "bf64bf1687f948a6b94334dc9097c5db"
    },
    {
      "Start": "7b4c7d10744448da93b67295417925bc",
      "End": "0433bda85e0d4814816d4a9f3a4240d1",
      "Id": "79100f0d93d9457d8ffc07fd00832634"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Author": "None provided",
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Vista preliminar en segundo plano",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "980b5f652afa42aea09d66cea5db0992",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 561.0,
        "Y": 316.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "be43dce9d39a4babb6e78f50b6ecb778",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 562.0,
        "Y": 379.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "703e9eb862354100be49f93c2281ec2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 562.0,
        "Y": 445.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "0f69cca50fb242a78b3a2297055e34db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 564.90526533625825,
        "Y": 517.7082740998344
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "2ecbfa066c3c44118946b9b7422273f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1342.7513570874314,
        "Y": 352.30267278595466
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "ea22d443b6ff4070aa97969f681147dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1622.4112119977019,
        "Y": 309.16447895695381
      }
    ],
    "Annotations": [],
    "X": -287.28229236451352,
    "Y": 19.030286154384385,
    "Zoom": 0.84328771079912224
  }
}
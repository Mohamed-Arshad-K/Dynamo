<Workspace Version="1.2.1.3083" X="-578.202981224413" Y="-363.12423310023" zoom="1.47618023926361" Name="Delete Unused Filters" Description="Delete all unused filters in your project file" ID="c54d6dce-4532-4fa1-b167-6868ce5f9d28" Category="Modelical.Cleanup">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="e5dab75d-347f-4f39-a150-bff8b33af576" type="PythonNodeModels.PythonNode" nickname="Python Script" x="828.369091282011" y="505.34803698139" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Note: The methods used in this script has been taken from Paul Wintour's BVN package and reused to achieve the purpose oh the same. https://parametricmonkey.com/2016/03/09/get-unused-filters/

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference("System.Core")
import System.Linq
clr.ImportExtensions(System.Linq)

clr.AddReference("RevitAPI")
import Autodesk.Revit
from Autodesk.Revit.Exceptions import InvalidOperationException
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB import ElementId
from System.Collections.Generic import *

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

# Import DocumentManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from RevitServices.Persistence import DocumentManager

def GetFilterIds(view):
  filterIds = None
  try:
    filterIds = view.GetFilters()
  except InvalidOperationException, e:
    filterIds = None
  return filterIds

def GetUsedFilterIds(doc):
  views = FilteredElementCollector(doc).OfClass(View).ToElements()
  usedFilterIds = []
  for view in views:
    viewFilterIds = []
    try:
      viewFilterIds = view.GetFilters()
    except InvalidOperationException, e:
      pass # this exception happens when a view doesn't support filters
    usedFilterIds.extend(viewFilterIds)
  return usedFilterIds

def GetUnusedFilters(doc):
  usedFilterIds = GetUsedFilterIds(doc).ToList[ElementId]()
  unusedFilters = FilteredElementCollector(doc).OfClass(ParameterFilterElement).Excluding(usedFilterIds).ToElements()
  return list(f.ToDSType(True) for f in unusedFilters)

#The inputs to this node will be stored as a list in the IN variables.

bool = IN[0]
output = "Set Toggle to TRUE to delete unused filters"

doc = DocumentManager.Instance.CurrentDBDocument

filters = GetUnusedFilters(doc)
filters2 = UnwrapElement(filters)
filtersID = []
filtersNames = []

if bool == True:
	for f in filters2:
		filtersID.append(f.Id)

	TransactionManager.Instance.EnsureInTransaction(doc)

	for f in filtersID:
		filtersNames.append(doc.GetElement(f).Name)
		doc.Delete(f)

	TransactionManager.Instance.TransactionTaskDone()
	output = filtersNames
#Assign your output to the OUT variable.
OUT = output</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="32bbaba6-2da1-4305-86d7-390eca437d1e" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="578.164494178416" y="504.758234983677" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Toggle : bool = false" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="050d3887-e943-431b-ade2-d123cb85858d" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="995" y="505" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="out" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="e5dab75d-347f-4f39-a150-bff8b33af576" start_index="0" end="050d3887-e943-431b-ade2-d123cb85858d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="32bbaba6-2da1-4305-86d7-390eca437d1e" start_index="0" end="e5dab75d-347f-4f39-a150-bff8b33af576" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>
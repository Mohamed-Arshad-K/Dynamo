<Workspace Version="1.3.0.875" X="-731.71158933878" Y="97.4774675678658" zoom="0.959788699581266" ScaleFactor="1" Name="Color By Parameter" Description="Override elements graphics by param value without making view filters. You can also reset them with this node. If a &quot;Solid fill&quot; pattern is found, it will be applied." ID="08f67b94-74ae-489f-961c-f6587f51b4e1" Category="Modelical.Views">
  <NamespaceResolutionMap>
    <ClassMap partialName="Color" resolvedName="DSCore.Color" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <CoreNodeModels.ColorRange guid="64abf364-0b27-4ba4-a1b5-f12f10e37044" type="CoreNodeModels.ColorRange" nickname="Color Range" x="1391.09315748633" y="215.32105182514" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
    </CoreNodeModels.ColorRange>
    <PythonNodeModels.PythonNode guid="74dcd347-dd60-444b-b13b-3f793018c5e4" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1184.76906604179" y="267.889135755959" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="4">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <PortInfo index="3" default="False" />
      <Script># This node has been made by Modelical
# www.modelical.com

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

#The inputs to this node will be stored as a list in the IN variables.
input = IN[0]
param = IN[1]
minValue = IN[2]
maxValue = IN[3]

def toList(input):
	if isinstance(input,list) == False:
		return [input]
	else:
		return input

def flatten(x):
    result = []
    for el in x:
        if hasattr(el, "__iter__") and not isinstance(el, basestring):
            result.extend(flatten(el))
        else:
            result.append(el)
    return result

elements = flatten(toList(input))

values = []
indexes = []
mapped = []

def map(value, min, max):
	a = (value - min) / (max - min)
	return a

for e in elements:
	values.append(e.GetParameterValueByName(param))


try: 0 + values[0]
except TypeError: isnumber=False
else: isnumber=True

if isnumber:
	valuesSorted = []
	for v in values:
		valuesSorted.append(v)
	valuesSorted.sort()
	if minValue == 0 and maxValue == 0:
		min = valuesSorted[0]
		max = valuesSorted[len(valuesSorted) - 1]*1.0
	else:
		min = minValue
		max = maxValue
	if len(values) &gt; 1:
		for v in values:
			mapped.append(map(v, min, max))
	else:
		for v in values:
			mapped.append(min)

elif not isnumber:
	strValues = []
	for v in values:
		strValues.append(str(v))
	uniqueValues = list(set(strValues))
	uniqueValues.sort()
	for v in strValues:
		i = 0
		for u in uniqueValues:
			if v == u:
				indexes.append(i)
				break
			i = i + 1
	min = 0.0
	max = len(uniqueValues)-1.0
	if len(uniqueValues) &gt; 1:
		for i in indexes:
			mapped.append(map(i, min, max))
	else:
		for i in indexes:
			mapped.append(min)


#Assign your output to the OUT variable.
OUT = mapped</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="8317a6a4-a857-45cc-8aea-62206f2b4bdf" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1817.74602069912" y="138" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script># This node has been made by Modelical
# www.modelical.com

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

from System.Collections.Generic import *

clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

input = IN[0]
dynColor = IN[1]
bool = IN[2]

def toList(input):
	if isinstance(input,list) == False:
		return [input]
	else:
		return input

def flatten(x):
    result = []
    for el in x:
        if hasattr(el, "__iter__") and not isinstance(el, basestring):
            result.extend(flatten(el))
        else:
            result.append(el)
    return result
    
items = flatten(toList(input))

elements = []
for i in items:
	elements.append(UnwrapElement(i))


if bool:
	view = doc.ActiveView
	override = OverrideGraphicSettings()
	
	TransactionManager.Instance.EnsureInTransaction(doc)
	for e in elements:
		view.SetElementOverrides(e.Id, override)
	TransactionManager.Instance.TransactionTaskDone()
	OUT = elements

else:
	graphSettings = Autodesk.Revit.DB.OverrideGraphicSettings()
	color = []
	for d in dynColor:
		color.append(Autodesk.Revit.DB.Color(d.Red, d.Green, d.Blue))

	fillPat = FillPatternElement.GetFillPatternElementByName(doc, FillPatternTarget.Drafting, "Solid fill")
	
	TransactionManager.Instance.EnsureInTransaction(doc)
	
	i = 0
	for e in elements:
		id = e.Id
		graphSettings.SetCutLineColor(color[i])
		graphSettings.SetCutFillColor(color[i])
		graphSettings.SetProjectionLineColor(color[i])
		graphSettings.SetProjectionFillColor(color[i])
		if fillPat:
			graphSettings.SetCutFillPatternId(fillPat.Id)
			graphSettings.SetProjectionFillPatternId(fillPat.Id)
		doc.ActiveView.SetElementOverrides(id, graphSettings)
		i = i + 1
	TransactionManager.Instance.TransactionTaskDone()
	OUT = elements</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="ba3e92c2-c78f-44dc-8118-89c04a1f9887" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="2014.26299455704" y="139.190833752666" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Elements" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="0ac0b0e6-dcd7-4eec-99fa-0832675af843" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="326.33580811834" y="131.485674873007" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Elements" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="8c03fcef-c7c6-4de5-bc5c-06d59502c7a3" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="326.33580811834" y="191.425661812302" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="param" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="e4654856-615f-4f38-8e7d-7b07225eca54" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="326.33580811834" y="251.365648751596" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="reset : bool = false" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="67cef236-a8a3-41d0-9e78-2b443a447d58" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="326.33580811834" y="311.30563569089" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="OpMinvalue : a = 0" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="631a74f7-40a0-478a-8f31-cf53cfdbcccc" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="326.33580811834" y="371.245622630184" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="OpMaxvalue : b = 0" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="83544456-4086-4053-a136-b878c0ddd21c" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="326.33580811834" y="431.185609569478" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="OpColors : c = {Color.ByARGB(255, 255, 100, 100),Color.ByARGB(255, 255, 255, 0), Color.ByARGB(255, 0, 255, 255)};" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="1e4f3260-23b8-4e54-a7eb-95e18ccd2162" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="326.33580811834" y="500.125596508773" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="OpColorsIndices : d = {0, 0.5, 1}" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="64abf364-0b27-4ba4-a1b5-f12f10e37044" start_index="0" end="8317a6a4-a857-45cc-8aea-62206f2b4bdf" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="74dcd347-dd60-444b-b13b-3f793018c5e4" start_index="0" end="64abf364-0b27-4ba4-a1b5-f12f10e37044" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8317a6a4-a857-45cc-8aea-62206f2b4bdf" start_index="0" end="ba3e92c2-c78f-44dc-8118-89c04a1f9887" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0ac0b0e6-dcd7-4eec-99fa-0832675af843" start_index="0" end="8317a6a4-a857-45cc-8aea-62206f2b4bdf" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0ac0b0e6-dcd7-4eec-99fa-0832675af843" start_index="0" end="74dcd347-dd60-444b-b13b-3f793018c5e4" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8c03fcef-c7c6-4de5-bc5c-06d59502c7a3" start_index="0" end="74dcd347-dd60-444b-b13b-3f793018c5e4" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e4654856-615f-4f38-8e7d-7b07225eca54" start_index="0" end="8317a6a4-a857-45cc-8aea-62206f2b4bdf" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="67cef236-a8a3-41d0-9e78-2b443a447d58" start_index="0" end="74dcd347-dd60-444b-b13b-3f793018c5e4" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="631a74f7-40a0-478a-8f31-cf53cfdbcccc" start_index="0" end="74dcd347-dd60-444b-b13b-3f793018c5e4" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="83544456-4086-4053-a136-b878c0ddd21c" start_index="0" end="64abf364-0b27-4ba4-a1b5-f12f10e37044" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1e4f3260-23b8-4e54-a7eb-95e18ccd2162" start_index="0" end="64abf364-0b27-4ba4-a1b5-f12f10e37044" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>
<Workspace Version="1.1.0.2094" X="0" Y="0" zoom="1" Name="Wall inserts" Description="Get all the inserts in a wall (windows, doors and openings)." ID="200e6558-d741-418e-bb9a-d736c5df3601" Category="Modelical.Elements">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="abaa6178-d204-4642-8a25-f53b35d54ecd" type="PythonNodeModels.PythonNode" nickname="Python Script" x="951.414579484804" y="306.108143770419" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <Script>import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager

doc = DocumentManager.Instance.CurrentDBDocument

walls = UnwrapElement(IN[0])
inserts = []

for w in walls:
	inserts.append(w.FindInserts(True, True, True, True))

elementlistA = []

for item in inserts:
	elementlistB = []
	for i in item:
		elementlistB.append(doc.GetElement(i).ToDSType(True))
	elementlistA.append(elementlistB)
	
OUT = elementlistA</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="ac0ccf0b-932a-4d1f-bae4-679216358769" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="778.184831398251" y="305.822761285847" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <PythonNodeModels.PythonNode guid="06fe4743-29d0-4928-8d1e-1dd233c7e913" type="PythonNodeModels.PythonNode" nickname="List Assurance" x="604" y="307" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variables.
input = IN[0]

if isinstance(input,list) == False:
	elements = [input]
else:
	elements = input

#Assign your output to the OUT variable.
OUT = elements</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="3d8c4fd7-4d1f-42c3-9883-e234f80f65ff" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="498" y="307" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Walls" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="8c156895-d897-43f0-a3a6-f5d701c0bdf5" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1125" y="307" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <Symbol value="Elements" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="abaa6178-d204-4642-8a25-f53b35d54ecd" start_index="0" end="8c156895-d897-43f0-a3a6-f5d701c0bdf5" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ac0ccf0b-932a-4d1f-bae4-679216358769" start_index="0" end="abaa6178-d204-4642-8a25-f53b35d54ecd" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="06fe4743-29d0-4928-8d1e-1dd233c7e913" start_index="0" end="ac0ccf0b-932a-4d1f-bae4-679216358769" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3d8c4fd7-4d1f-42c3-9883-e234f80f65ff" start_index="0" end="06fe4743-29d0-4928-8d1e-1dd233c7e913" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>
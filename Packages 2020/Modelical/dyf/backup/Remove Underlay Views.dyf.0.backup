<Workspace Version="1.1.0.2094" X="-2773.02279925343" Y="117.892743581602" zoom="0.791397641953022" Name="Remove Underlay Views" Description="Remove all the underlay views in a project. Works for R16 and below" ID="4d938eda-3ac0-4c5d-84b6-dac7ae07c185" Category="Modelical.Views">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="fa3c5a2b-a36c-4ab3-b0e9-cf39286139b8" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.SetParameterByName" x="4577.21231740331" y="445.387324034243" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.SetParameterByName@string,var" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="283123c7-154d-43ca-81bc-fa5311e35b72" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="&gt;=" x="4988.32295200063" y="445.721382505267" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="Operators" function="&gt;=@var[]..[],var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="641b2f72-3b6a-4f75-8a9b-137c514b3756" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Count" x="4834.64398001015" y="445.322026210193" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="BuiltIn" function="Count@var[]..[]" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="312a0fdc-eff8-42f7-ad45-6f548bd8164e" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="4852.7296273122" y="523.472184545248" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="0;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="81583975-5cb5-4d71-ae28-b48ed05e18b4" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="DraftingView.ByName" x="4321.23368362458" y="585.822431794989" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="RevitNodes.dll" function="Revit.Elements.Views.DraftingView.ByName@string" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="53c29ded-0782-4ad6-9505-410838d9694b" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="4375.01751097185" y="496.058471098978" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="&quot;Underlay&quot;;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="eb4edcbb-a841-4d44-ad7a-e1f23fc70462" type="PythonNodeModels.PythonNode" nickname="Python Script" x="5202.63073135693" y="580.294999449075" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

from System.Collections.Generic import *

#The inputs to this node will be stored as a list in the IN variable.
draftView = UnwrapElement(IN[0])
deleteBoolean = IN[1]

#elements = []
#for i in IN[0]:
#	elements.append(UnwrapElement(i))

idsToDelete = List[Autodesk.Revit.DB.ElementId]()
for i in draftView:
	idsToDelete.Add(i.Id)


# "Start" the transaction
TransactionManager.Instance.EnsureInTransaction(doc)

if deleteBoolean:
	doc.Delete(idsToDelete)

# "End" the transaction
TransactionManager.Instance.TransactionTaskDone()

OUT = 0</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="73c35f3d-37ba-4a0e-9e17-3ba0df1d2c98" type="PythonNodeModels.PythonNode" nickname="Python Script" x="4676.74499231772" y="584.953361026554" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variables.
input = IN[0]

if isinstance(input,list) == False:
	elements = [input]
else:
	elements = input

#Assign your output to the OUT variable.
OUT = elements</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Logic.If guid="e26a18e2-9e53-480e-a2c8-2d811fcc1ea1" type="CoreNodeModels.Logic.If" nickname="If" x="4379.44410838728" y="253.010485587076" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="c46aff50-487e-42c2-b91f-0a72660bc987" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="4085.78108357471" y="293.045214477977" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="&quot;Underlay views removed&quot;;&#xA;&quot;Bool is set to False&quot;;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="03c18497-b1bd-47c5-9959-df3d8c4eac0f" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="4130.214932144" y="590.759015136473" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="&quot;Empty view&quot;;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="72b372bf-781d-4033-a5ce-3c01ea162ccf" type="PythonNodeModels.PythonNode" nickname="Python Script" x="4180.38416584893" y="448.178369561767" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <Script>#Copyright(c) 2014, Konrad Sobon
# @arch_laboratory, http://archi-lab.net
 
import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
 
# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
 
# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *
 
doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application
 
from System.Collections.Generic import *
 
# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
 
#The inputs to this node will be stored as a list in the IN variable.
getViews = IN[0]

#collect all views in the model
if getViews[0] == True:
	collector = FilteredElementCollector(doc)
	views = collector.OfClass(View).ToElements()
else:
	views = []

#sort views into separate lists based on view type
viewsLay = []
for i in views:
	if not i.IsTemplate:
		if i.ViewType == ViewType.AreaPlan:
			viewsLay.append(i.ToDSType(True))
		elif i.ViewType == ViewType.CeilingPlan:
			viewsLay.append(i.ToDSType(True))
		elif i.ViewType == ViewType.FloorPlan:
			viewsLay.append(i.ToDSType(True))
		else:
			continue
 
#Assign your output to the OUT variable
OUT = viewsLay</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="c6dd6e79-e056-47e0-aefb-1f00e9b3b2f2" type="PythonNodeModels.PythonNode" nickname="List Assurance" x="4003.59192731683" y="448.565501570232" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variables.
input = IN[0]

if isinstance(input,list) == False:
	elements = [input]
else:
	elements = input

#Assign your output to the OUT variable.
OUT = elements</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="aa571272-ebd4-4e41-bdd8-77ff8b3a08fc" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="3726.51468514959" y="253.241930213105" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Bool" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="0f4f91ed-0bba-4ad3-b54e-f55c57e2dfef" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="4681.03492267568" y="255.920432545799" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <Symbol value="Info" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="fa3c5a2b-a36c-4ab3-b0e9-cf39286139b8" start_index="0" end="641b2f72-3b6a-4f75-8a9b-137c514b3756" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="283123c7-154d-43ca-81bc-fa5311e35b72" start_index="0" end="eb4edcbb-a841-4d44-ad7a-e1f23fc70462" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="641b2f72-3b6a-4f75-8a9b-137c514b3756" start_index="0" end="283123c7-154d-43ca-81bc-fa5311e35b72" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="312a0fdc-eff8-42f7-ad45-6f548bd8164e" start_index="0" end="283123c7-154d-43ca-81bc-fa5311e35b72" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="81583975-5cb5-4d71-ae28-b48ed05e18b4" start_index="0" end="fa3c5a2b-a36c-4ab3-b0e9-cf39286139b8" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="81583975-5cb5-4d71-ae28-b48ed05e18b4" start_index="0" end="73c35f3d-37ba-4a0e-9e17-3ba0df1d2c98" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="53c29ded-0782-4ad6-9505-410838d9694b" start_index="0" end="fa3c5a2b-a36c-4ab3-b0e9-cf39286139b8" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="73c35f3d-37ba-4a0e-9e17-3ba0df1d2c98" start_index="0" end="eb4edcbb-a841-4d44-ad7a-e1f23fc70462" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e26a18e2-9e53-480e-a2c8-2d811fcc1ea1" start_index="0" end="0f4f91ed-0bba-4ad3-b54e-f55c57e2dfef" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="c46aff50-487e-42c2-b91f-0a72660bc987" start_index="0" end="e26a18e2-9e53-480e-a2c8-2d811fcc1ea1" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="c46aff50-487e-42c2-b91f-0a72660bc987" start_index="1" end="e26a18e2-9e53-480e-a2c8-2d811fcc1ea1" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="03c18497-b1bd-47c5-9959-df3d8c4eac0f" start_index="0" end="81583975-5cb5-4d71-ae28-b48ed05e18b4" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="72b372bf-781d-4033-a5ce-3c01ea162ccf" start_index="0" end="fa3c5a2b-a36c-4ab3-b0e9-cf39286139b8" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="c6dd6e79-e056-47e0-aefb-1f00e9b3b2f2" start_index="0" end="72b372bf-781d-4033-a5ce-3c01ea162ccf" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="aa571272-ebd4-4e41-bdd8-77ff8b3a08fc" start_index="0" end="e26a18e2-9e53-480e-a2c8-2d811fcc1ea1" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="aa571272-ebd4-4e41-bdd8-77ff8b3a08fc" start_index="0" end="c6dd6e79-e056-47e0-aefb-1f00e9b3b2f2" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>
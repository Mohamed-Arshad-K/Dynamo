<Workspace Version="1.1.0.2094" X="0" Y="0" zoom="1" Name="OverrideColorInView Full" Description="Improve the OOTB tool in Dynamo by adding a Fill Pattern option. &quot;Solid fill&quot; will be applied by default." ID="8a8c174c-fddf-4a49-afb5-25de991add49" Category="Modelical.Views">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="ba8f1163-8393-4baf-8ea6-d55d96f61dcf" type="PythonNodeModels.PythonNode" nickname="Python Script" x="995" y="315" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="4">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

from System.Collections.Generic import *

clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

input = IN[0]
colors = IN[1]
name = IN[2]
bool = IN[3]


if isinstance(input,list) == False:
	items = [input]
else:
	items = input

if isinstance(colors,list) == False:
	dynColor = [colors]
else:
	dynColor = colors
	

elements = []
for i in items:
	elements.append(UnwrapElement(i))


if bool:
	view = doc.ActiveView
	override = OverrideGraphicSettings()
	
	TransactionManager.Instance.EnsureInTransaction(doc)
	for e in elements:
		view.SetElementOverrides(e.Id, override)
	TransactionManager.Instance.TransactionTaskDone()
	OUT = elements

else:
	graphSettings = Autodesk.Revit.DB.OverrideGraphicSettings()
	color = []
	for d in dynColor:
		color.append(Autodesk.Revit.DB.Color(d.Red, d.Green, d.Blue))

	fillPatDraft = FillPatternElement.GetFillPatternElementByName(doc, FillPatternTarget.Drafting, name)
	
	TransactionManager.Instance.EnsureInTransaction(doc)
	
	i = 0
	for e in elements:
		id = e.Id
		graphSettings.SetCutLineColor(color[i])
		graphSettings.SetCutFillColor(color[i])
		graphSettings.SetProjectionLineColor(color[i])
		graphSettings.SetProjectionFillColor(color[i])
		if fillPatDraft:
			graphSettings.SetCutFillPatternId(fillPatDraft.Id)
			graphSettings.SetProjectionFillPatternId(fillPatDraft.Id)
			
		doc.ActiveView.SetElementOverrides(id, graphSettings)
		i = i + 1
		
	TransactionManager.Instance.TransactionTaskDone()
	OUT = elements</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="980b5f65-2afa-42ae-a09d-66cea5db0992" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="561" y="316" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="elements" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="be43dce9-d39a-4bab-b6e7-8f50b6ecb778" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="562" y="379" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="colors" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="703e9eb8-6235-4100-be49-f93c2281ec2f" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="562" y="445" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="FillPatternName : a = &quot;Solid fill&quot;" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="0f69cca5-0fb2-42a7-8b3a-2297055e34db" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="560" y="510" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="reset : bool = false" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="980b5f65-2afa-42ae-a09d-66cea5db0992" start_index="0" end="ba8f1163-8393-4baf-8ea6-d55d96f61dcf" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="be43dce9-d39a-4bab-b6e7-8f50b6ecb778" start_index="0" end="ba8f1163-8393-4baf-8ea6-d55d96f61dcf" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="703e9eb8-6235-4100-be49-f93c2281ec2f" start_index="0" end="ba8f1163-8393-4baf-8ea6-d55d96f61dcf" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0f69cca5-0fb2-42a7-8b3a-2297055e34db" start_index="0" end="ba8f1163-8393-4baf-8ea6-d55d96f61dcf" end_index="3" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>
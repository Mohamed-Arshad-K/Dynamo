<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DynamoMEP</name>
    </assembly>
    <members>
        <member name="T:Revit.Elements.Group">
            <summary>
            Revit Group
            </summary>
        </member>
        <member name="P:Revit.Elements.Group.InternalGroup">
            <summary>
            Internal reference to the Revit Element
            </summary>
        </member>
        <member name="P:Revit.Elements.Group.InternalElement">
            <summary>
            Reference to the Element
            </summary>
        </member>
        <member name="M:Revit.Elements.Group.#ctor(Autodesk.Revit.DB.Group)">
            <summary>
            Create from an existing Revit Element
            </summary>
            <param name="group">An existing Revit Group</param>
        </member>
        <member name="M:Revit.Elements.Group.InitGroup(Autodesk.Revit.DB.Group)">
            <summary>
            Initialize a group element
            </summary>
            <param name="group">An existing Revit Group</param>
        </member>
        <member name="M:Revit.Elements.Group.InitGroup(Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.GroupType)">
            <summary>
            Place a Group in the model
            </summary>
            <param name="point">The group instance location</param>
            <param name="groupType">The type of the group</param>
        </member>
        <member name="M:Revit.Elements.Group.InternalSetGroup(Autodesk.Revit.DB.Group)">
            <summary>
            Set the internal Element, ElementId, and UniqueId
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Revit.Elements.Group.PlaceGroupInstance(Autodesk.DesignScript.Geometry.Point,Revit.Elements.GroupType)">
            <summary>
            Place an instance of a Revit group
            </summary>
            <param name="point">Location point for the group instance</param>
            <param name="groupType">The type of the group</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.Group.FromElement(Revit.Elements.Element)">
            <summary>
            Create a group
            from an Revit group
            </summary>
            <param name="element">The origin element</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.Group.FromExisting(Autodesk.Revit.DB.Group,System.Boolean)">
            <summary>
            Create a group from an existing reference
            </summary>
            <param name="group"></param>
            <param name="isRevitOwned"></param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.Group.ToString">
            <summary>
            OPTIONAL:
            Overriding ToString allows you to control what is
            displayed whenever the object's string representation
            is used. For example, ToString is called when the 
            object is displayed in a Watch node.
            </summary>
            <returns>The string representation of our object.</returns>
        </member>
        <member name="T:Revit.Elements.GroupType">
            <summary>
            Revit GroupType
            </summary>
        </member>
        <member name="P:Revit.Elements.GroupType.InternalGroupType">
            <summary>
            Internal reference to the Revit Element
            </summary>
        </member>
        <member name="P:Revit.Elements.GroupType.InternalElement">
            <summary>
            Reference to the Element
            </summary>
        </member>
        <member name="M:Revit.Elements.GroupType.#ctor(Autodesk.Revit.DB.GroupType)">
            <summary>
            Create from an existing Revit Element
            </summary>
            <param name="GroupType">An existing Revit GroupType</param>
        </member>
        <member name="M:Revit.Elements.GroupType.InitGroupType(Autodesk.Revit.DB.GroupType)">
            <summary>
            Initialize a GroupType element
            </summary>
            <param name="GroupType">An existing Revit GroupType</param>
        </member>
        <member name="M:Revit.Elements.GroupType.InitGroupType(System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId})">
            <summary>
            Initialize a GroupType element from a set of objects ids
            </summary>
            <param name="ids"></param>
        </member>
        <member name="M:Revit.Elements.GroupType.InitGroupType(System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId},System.String)">
            <summary>
            Initialize a GroupType element from a set of objects ids and a name
            </summary>
            <param name="ids"></param>
            <param name="name"></param>
        </member>
        <member name="M:Revit.Elements.GroupType.InternalSetGroupType(Autodesk.Revit.DB.GroupType)">
            <summary>
            Set the internal Element, ElementId, and UniqueId
            </summary>
            <param name="GroupType"></param>
        </member>
        <member name="M:Revit.Elements.GroupType.FromElements(System.Collections.Generic.List{Revit.Elements.Element})">
            <summary>
            Create a Revit GroupType
            from a set of elements
            </summary>
            <param name="elements">A set of elements which will be made into the new GroupType.</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.GroupType.FromElementsAndName(System.Collections.Generic.List{Revit.Elements.Element},System.String)">
            <summary>
            Create a Revit GroupType
            from a set of elements and a name
            </summary>
            <param name="elements">A set of elements which will be made into the new GroupType.</param>
            <param name="name">the name of the GroupType.</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.GroupType.FromElement(Revit.Elements.Element)">
            <summary>
            Create a GroupType
            from an Revit GroupType
            </summary>
            <param name="element">The origin element</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.GroupType.FromExisting(Autodesk.Revit.DB.GroupType,System.Boolean)">
            <summary>
            Create a space from an existing reference
            </summary>
            <param name="GroupType"></param>
            <param name="isRevitOwned"></param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.GroupType.ToString">
            <summary>
            OPTIONAL:
            Overriding ToString allows you to control what is
            displayed whenever the object's string representation
            is used. For example, ToString is called when the 
            object is displayed in a Watch node.
            </summary>
            <returns>The string representation of our object.</returns>
        </member>
        <member name="T:Revit.Elements.Space">
            <summary>
            MEP Spaces
            </summary>
        </member>
        <member name="P:Revit.Elements.Space.InternalSpace">
            <summary>
            Internal reference to the Revit Element
            </summary>
        </member>
        <member name="P:Revit.Elements.Space.InternalElement">
            <summary>
            Reference to the Element
            </summary>
        </member>
        <member name="M:Revit.Elements.Space.#ctor(Autodesk.Revit.DB.Mechanical.Space)">
            <summary>
            Create from an existing Revit Element
            </summary>
            <param name="space">An existing Revit space</param>
        </member>
        <member name="M:Revit.Elements.Space.InitSpace(Autodesk.Revit.DB.Mechanical.Space)">
            <summary>
            Initialize a Space element
            </summary>
            <param name="room"></param>
        </member>
        <member name="P:Revit.Elements.Space.InternalTransform">
            <summary>
            Transform of the Element
            </summary>
        </member>
        <member name="M:Revit.Elements.Space.InternalSetSpace(Autodesk.Revit.DB.Mechanical.Space)">
            <summary>
            Set the internal Element, ElementId, and UniqueId
            </summary>
            <param name="space"></param>
        </member>
        <member name="M:Revit.Elements.Space.ByPointAndLevel(Autodesk.DesignScript.Geometry.Point,Revit.Elements.Level)">
            <summary>
            Create a MEP Space
            based on a location and a level
            </summary>
            <param name="point">Location point for the space</param>
            <param name="level">Level of the space</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.Space.ByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create a `MEP Space
            based on a location
            </summary>
            <param name="point">Location point for the space</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.Space.GetNearestLevel(Autodesk.Revit.DB.XYZ)">
            <summary>
            Find the nearest level in the active document
            </summary>
            <param name="point">The reference point</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.Space.FromElement(Revit.Elements.Element)">
            <summary>
            Create a MEP Space
            from an existing MEP Space
            </summary>
            <param name="element">The origin element</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.Space.GetIdentificationData">
            <summary>
            Retrive a set of properties 
            for the Space
            </summary>
            <returns name="Name">The MEPSpace Name</returns>
            <returns name="Number">The MEPSpace Number</returns>
            <returns name="CustomRoom Name">The associated room Name</returns>
            <returns name="CustomRoom Number">The associated room Number</returns>
        </member>
        <member name="P:Revit.Elements.Space.BoundaryElements">
            <summary>
            Retrive space boundary elements
            </summary>
        </member>
        <member name="P:Revit.Elements.Space.Level">
            <summary>
            Retrive the space associated level
            </summary>
        </member>
        <member name="P:Revit.Elements.Space.LocationPoint">
            <summary>
            Retrive the sapce location
            </summary>
        </member>
        <member name="M:Revit.Elements.Space.IsInSpace(Revit.Elements.Element)">
            <summary>
            Determine if an element lies
            within the volume of the Space
            </summary>
        </member>
        <member name="M:Revit.Elements.Space.Grid(System.Double)">
            <summary>
            Return a grid of points in the space
            </summary>
            <param name="step">Lenght between two points</param>
        </member>
        <member name="M:Revit.Elements.Space.FromExisting(Autodesk.Revit.DB.Mechanical.Space,System.Boolean)">
            <summary>
            Create a space from an existing reference
            </summary>
            <param name="space"></param>
            <param name="isRevitOwned"></param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.Space.Tessellate(Autodesk.DesignScript.Interfaces.IRenderPackage,Autodesk.DesignScript.Interfaces.TessellationParameters)">
            <summary>
            Display Spaces in the Dynamo interface
            </summary>
            <param name="package"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Revit.Elements.Space.ToString">
            <summary>
            OPTIONAL:
            Overriding ToString allows you to control what is
            displayed whenever the object's string representation
            is used. For example, ToString is called when the 
            object is displayed in a Watch node.
            </summary>
            <returns>The string representation of our object.</returns>
        </member>
        <member name="T:Revit.Elements.CustomRoom">
            <summary>
            MEP Rooms
            </summary>
        </member>
        <member name="P:Revit.Elements.CustomRoom.InternalRoom">
            <summary>
            Internal reference to the Revit Element
            </summary>
        </member>
        <member name="P:Revit.Elements.CustomRoom.InternalElement">
            <summary>
            Reference to the Element
            </summary>
        </member>
        <member name="P:Revit.Elements.CustomRoom.InternalTransform">
            <summary>
            Transform of the Element
            </summary>
        </member>
        <member name="M:Revit.Elements.CustomRoom.#ctor(Autodesk.Revit.DB.Architecture.Room)">
            <summary>
            Create from an existing Revit Element
            </summary>
            <param name="room">An existing Revit room</param>
        </member>
        <member name="M:Revit.Elements.CustomRoom.InitRoom(Autodesk.Revit.DB.Architecture.Room)">
            <summary>
            Initialize a Room element
            </summary>
            <param name="room"></param>
        </member>
        <member name="M:Revit.Elements.CustomRoom.InternalSetRoom(Autodesk.Revit.DB.Architecture.Room)">
            <summary>
            Set the internal Element, ElementId, and UniqueId
            </summary>
            <param name="room"></param>
        </member>
        <member name="M:Revit.Elements.CustomRoom.ByPointAndLevel(Autodesk.DesignScript.Geometry.Point,Revit.Elements.Level)">
            <summary>
            Create a Room
            based on a location and a level
            </summary>
            <param name="point">Location point for the room</param>
            <param name="level">Level of the room</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.CustomRoom.ByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Create a Room
            based on a location
            </summary>
            <param name="point">Location point for the room</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.CustomRoom.GetNearestLevel(Autodesk.Revit.DB.XYZ)">
            <summary>
            Find the nearest level in the active document
            </summary>
            <param name="point">The reference point</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.CustomRoom.FromElement(Revit.Elements.Element)">
            <summary>
            Create a Room
            from an existing Room
            </summary>
            <param name="element">The origin element</param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.CustomRoom.GetIdentificationData">
            <summary>
            Retrive a set of properties 
            for the Room
            </summary>
            <returns name="Name">The Room Name</returns>
            <returns name="Number">The Room Number</returns>
        </member>
        <member name="M:Revit.Elements.CustomRoom.IsInRoom(Revit.Elements.Element)">
            <summary>
            Determine if an element lies
            within the volume of the Room
            </summary>
        </member>
        <member name="M:Revit.Elements.CustomRoom.Grid(System.Double)">
            <summary>
            Return a grid of points in the room
            </summary>
            <param name="step">Lenght between two points</param>
        </member>
        <member name="P:Revit.Elements.CustomRoom.BoundaryElements">
            <summary>
            Retrive room boundary elements
            </summary>
        </member>
        <member name="P:Revit.Elements.CustomRoom.Level">
            <summary>
            Retrive the room associated level
            </summary>
        </member>
        <member name="P:Revit.Elements.CustomRoom.LocationPoint">
            <summary>
            Retrive the room location
            </summary>
        </member>
        <member name="M:Revit.Elements.CustomRoom.BoundaryFamilyInstance(Autodesk.Revit.DB.BuiltInCategory)">
            <summary>
            Retrive family instance hosted in boundary elements
            This is the base function for Windows and Doors
            </summary>
            <param name="cat">The category of hosted elements</param>
            <returns></returns>
        </member>
        <member name="P:Revit.Elements.CustomRoom.Windows">
            <summary>
            Retrive windows around the room
            </summary>
        </member>
        <member name="P:Revit.Elements.CustomRoom.Doors">
            <summary>
            Retrive Doors around the room
            </summary>
        </member>
        <member name="M:Revit.Elements.CustomRoom.FromExisting(Autodesk.Revit.DB.Architecture.Room,System.Boolean)">
            <summary>
            Create a space from an existing reference
            </summary>
            <param name="room"></param>
            <param name="isRevitOwned"></param>
            <returns></returns>
        </member>
        <member name="M:Revit.Elements.CustomRoom.Tessellate(Autodesk.DesignScript.Interfaces.IRenderPackage,Autodesk.DesignScript.Interfaces.TessellationParameters)">
            <summary>
            Display Spaces in the Dynamo interface
            </summary>
            <param name="package"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Revit.Elements.CustomRoom.ToString">
            <summary>
            OPTIONAL:
            Overriding ToString allows you to control what is
            displayed whenever the object's string representation
            is used. For example, ToString is called when the 
            object is displayed in a Watch node.
            </summary>
            <returns>The string representation of our object.</returns>
        </member>
    </members>
</doc>

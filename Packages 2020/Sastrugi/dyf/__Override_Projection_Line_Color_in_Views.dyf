{
  "Uuid": "5b6fda74-3f77-49bc-8f53-33fcbd2d0925",
  "IsCustomNode": true,
  "Category": "Sastrugi.Graphics",
  "Description": "(Sastrugi_Graphics) This node will override the Projection Line color of multiple Elements in their owner views.",
  "Name": "‚ùÑ_Override Projection Line Color in Views",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "14d2f533168a4fe586509cbf61aa0407",
      "Inputs": [
        {
          "Id": "94d0f75eb4c74d4190e72de9a7b9b6f7",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5f169bb447d47418a4a45243a0382bc",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0..(x-1);",
      "Id": "18668485977c44caac1873ba75261899",
      "Inputs": [
        {
          "Id": "5e3980d5e51f4a1ebb39dd63f39eb317",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1093460aa50940d496cb5d1a47611ab2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\nfrom System.Collections.Generic import *\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\ndataEnteringNode = IN\nlistlength = UnwrapElement(IN[3])\n\nelements = []\nfor i in IN[0]:\n\telements.append(UnwrapElement(i))\n\nviewlist = []\nfor j in IN[2]:\n\tviewlist.append(UnwrapElement(j))\n\ngSettings = Autodesk.Revit.DB.OverrideGraphicSettings()\n\ndsColor = []\nfor c in IN[1]:\n\tcolRed = c.Red\n\tcolGreen = c.Green\n\tcolBlue = c.Blue\n\tcolor = Autodesk.Revit.DB.Color(colRed, colGreen, colBlue)\n\ngSettings.SetProjectionLineColor(color)\n\nTransactionManager.Instance.EnsureInTransaction(doc)\n\nresult = []\n\nfor k in listlength:\n\ttry:\n\t\tid = elements[k].Id\n\t\tviewlist[k].SetElementOverrides(id, gSettings)\n\t\tresult.append(\"It worked!!\")\n\texcept:\n\t\tresult.append(\"It didn't work...\")\n\t\nTransactionManager.Instance.TransactionTaskDone()\n\nOUT = elements, result",
      "VariableInputPorts": true,
      "Id": "870f84a818304ed0837a7b98c2058df3",
      "Inputs": [
        {
          "Id": "daa9646edace46c8bc1e2bdb992bf4cf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66920cb3a4af45b488fd490c33e9d172",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "436212a5942e44079335ac5922e9930e",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6bbc30f6285448fb3219081d9e49a67",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a9a7d13bf8448f68d9553506d706a39",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nitems = UnwrapElement(IN[0])\r\nelementlist = list()\r\nfor item in items:\r\n\ttry:\r\n\t\telementlist.append(item.Document.GetElement(item.OwnerViewId).ToDSType(True))\r\n\texcept:\r\n\t\telementlist.append(None)\r\nOUT = elementlist",
      "VariableInputPorts": true,
      "Id": "d03b79a87a78499bbd3862c9c3585c54",
      "Inputs": [
        {
          "Id": "afd5002a714d4886831557b26db8ca9c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "691bad20f36244959d311b4328173e4d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "Elements",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "b729c8141c1c4027a81f3670fcb9621f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7dcd588b016d4dc4b9630377b65e31fb",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "OverrideColor",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "cda63779a3bf42108ab6d27ea43dc639",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fffcc892be0c48e2b94f0b3054cdf85f",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Status",
      "Id": "97591f7504294e219379f8526bee3659",
      "Inputs": [
        {
          "Id": "b9f73e6c89df4608bc2c4e2b435b7bd6",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Elements",
      "Id": "011c6c6cb5694ef38438f31433816e3c",
      "Inputs": [
        {
          "Id": "8440f84b41b14802b34dce13b7f7733e",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "t[0];\nt[1];",
      "Id": "97bc1b20b2c343d0928f0190e451d264",
      "Inputs": [
        {
          "Id": "35bc53b349604b5db510a16a3ee1a88e",
          "Name": "t",
          "Description": "t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9aac01eb9dd54076ba1c29da0bc7b3fe",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34c56e4258204045a89fba3c3e5eaebd",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ae4d6f98835b4465a44f26cc30fc3aae",
      "Inputs": [
        {
          "Id": "fa8cbd5a90344662af22271ddd881996",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3cee655512548ca855aea8e063c5a37",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb900caa311d45fab38d8cafe6b8af69",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "fb2e0e91798a420c995738fda5c93690",
      "Inputs": [
        {
          "Id": "812b3325835740bbb681e20c685fd568",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "189e4e0284b648bca151ea00be42353a",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ef250f3e75a492c87078203aa819d76",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "a5f169bb447d47418a4a45243a0382bc",
      "End": "5e3980d5e51f4a1ebb39dd63f39eb317",
      "Id": "a75a61386c4940339d3c002e22649d7e"
    },
    {
      "Start": "1093460aa50940d496cb5d1a47611ab2",
      "End": "f6bbc30f6285448fb3219081d9e49a67",
      "Id": "5dd6c72bef3b44bfae640aad041541e6"
    },
    {
      "Start": "2a9a7d13bf8448f68d9553506d706a39",
      "End": "35bc53b349604b5db510a16a3ee1a88e",
      "Id": "9475d8e93eed4c9282f76100bf2c6994"
    },
    {
      "Start": "691bad20f36244959d311b4328173e4d",
      "End": "436212a5942e44079335ac5922e9930e",
      "Id": "f65285f3bd2e4e91b5ca859fcafa7ea0"
    },
    {
      "Start": "7dcd588b016d4dc4b9630377b65e31fb",
      "End": "812b3325835740bbb681e20c685fd568",
      "Id": "12e5996601a14c1d81ac3f317dfb3820"
    },
    {
      "Start": "fffcc892be0c48e2b94f0b3054cdf85f",
      "End": "fa8cbd5a90344662af22271ddd881996",
      "Id": "5b8df30421064d109377540d8e8dd787"
    },
    {
      "Start": "9aac01eb9dd54076ba1c29da0bc7b3fe",
      "End": "8440f84b41b14802b34dce13b7f7733e",
      "Id": "dae8d74b5f7b4ff6aba800ff18043c19"
    },
    {
      "Start": "34c56e4258204045a89fba3c3e5eaebd",
      "End": "b9f73e6c89df4608bc2c4e2b435b7bd6",
      "Id": "d036cda7ccd944b1a28c009ee6a2052e"
    },
    {
      "Start": "eb900caa311d45fab38d8cafe6b8af69",
      "End": "66920cb3a4af45b488fd490c33e9d172",
      "Id": "9efc8802c46c4f2a959e8122f8c93dca"
    },
    {
      "Start": "9ef250f3e75a492c87078203aa819d76",
      "End": "94d0f75eb4c74d4190e72de9a7b9b6f7",
      "Id": "7e179d50a278446a8acbf2106e8d849d"
    },
    {
      "Start": "9ef250f3e75a492c87078203aa819d76",
      "End": "afd5002a714d4886831557b26db8ca9c",
      "Id": "04112d8eefea481c98a0c6cbad322a45"
    },
    {
      "Start": "9ef250f3e75a492c87078203aa819d76",
      "End": "daa9646edace46c8bc1e2bdb992bf4cf",
      "Id": "f69e70c362b44b5a880b20266aca2dba"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.2.1.5175",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "14d2f533168a4fe586509cbf61aa0407",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1425.82452833671,
        "Y": 734.021436322435
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "18668485977c44caac1873ba75261899",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1632.05889744703,
        "Y": 810.932292375823
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "870f84a818304ed0837a7b98c2058df3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1836.75703872094,
        "Y": 717.804146355315
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "d03b79a87a78499bbd3862c9c3585c54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1446.60959969436,
        "Y": 989.829311009234
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "b729c8141c1c4027a81f3670fcb9621f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1042.11424332344,
        "Y": 808.655786350148
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "cda63779a3bf42108ab6d27ea43dc639",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1252.9469350089294,
        "Y": 591.52927380381664
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "97591f7504294e219379f8526bee3659",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2232.67952522255,
        "Y": 725.937685459941
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "011c6c6cb5694ef38438f31433816e3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2227.93175074184,
        "Y": 795.967359050445
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "97bc1b20b2c343d0928f0190e451d264",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2040.39465875371,
        "Y": 725.937685459941
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "ae4d6f98835b4465a44f26cc30fc3aae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1527.6350148367951,
        "Y": 591.813056379822
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "fb2e0e91798a420c995738fda5c93690",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1167.9910979228487,
        "Y": 682.02077151335311
      }
    ],
    "Annotations": [
      {
        "Id": "b9a950bbc1624a3ab44ace164ed3f8a7",
        "Title": "Credit to @john pierson for the coding",
        "Nodes": [
          "870f84a818304ed0837a7b98c2058df3"
        ],
        "Left": 1826.75703872094,
        "Top": 563.804146355315,
        "Width": 144.0,
        "Height": 300.0,
        "FontSize": 30.0,
        "InitialTop": 717.804146355315,
        "InitialHeight": 145.0,
        "TextblockHeight": 144.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "7192c0e816634b558168c60644cd6f7b",
        "Title": "Credit #Clockwork for coding",
        "Nodes": [
          "d03b79a87a78499bbd3862c9c3585c54"
        ],
        "Left": 1436.60959969436,
        "Top": 871.829311009234,
        "Width": 164.51000000000002,
        "Height": 186.0,
        "FontSize": 30.0,
        "InitialTop": 989.829311009234,
        "InitialHeight": 145.0,
        "TextblockHeight": 108.0,
        "Background": "#FFB5B5B5"
      }
    ],
    "X": -650.02390445703634,
    "Y": -231.21015670669334,
    "Zoom": 0.74769281712332514
  }
}
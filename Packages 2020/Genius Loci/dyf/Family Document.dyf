<Workspace Version="1.3.4.6666" X="-194.504833373763" Y="-30.682762555529" zoom="1.10476425630303" ScaleFactor="1" Name="Family Document" Description="Gets the family document by family or family instance. (Opens the family in the background)&#xD;&#xA;Use the &quot;Family Document Close&quot; node to close the family. " ID="62e8e34d-3a8c-4612-a5b1-719a5cf97602" Category="GeniusLoci.Family">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="8ae66e31-0010-4c02-a8b3-ac1583ffcb38" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="190.944031345694" y="273.270425443667" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="FamilyOrFamilyInstance" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="4d75f35e-6c7d-43ba-9d49-854cd70bad02" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="597.298100020297" y="273.740850887334" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Document" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="d37d4c5b-9b0c-4af3-b530-5f6afd635ebd" type="PythonNodeModels.PythonNode" nickname="Python Script" x="436.745766301614" y="275.582982253325" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Alban de Chasteigner 2020
#twitter : @geniusloci_bim
#geniusloci.bim@gmail.com

import clr
clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import *

clr.AddReference("RevitServices")
import RevitServices
#from RevitServices.Transactions import TransactionManager
from RevitServices.Persistence import DocumentManager
doc = DocumentManager.Instance.CurrentDBDocument

families = UnwrapElement(IN[0]) if isinstance(IN[0],list) else [UnwrapElement(IN[0])]
famDoc=[]

#TransactionManager.Instance.EnsureInTransaction(doc)
for fam in families:
	if isinstance(fam,Autodesk.Revit.DB.FamilyInstance):
		famDoc.append(Document.EditFamily(doc,fam.Symbol.Family))
	else:
		if fam.IsInPlace ==False:
			famDoc.append(Document.EditFamily(doc,fam))
#TransactionManager.Instance.TransactionTaskDone()

if isinstance(IN[0], list): OUT = famDoc
else: OUT = famDoc[0]
</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="8ae66e31-0010-4c02-a8b3-ac1583ffcb38" start_index="0" end="d37d4c5b-9b0c-4af3-b530-5f6afd635ebd" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d37d4c5b-9b0c-4af3-b530-5f6afd635ebd" start_index="0" end="4d75f35e-6c7d-43ba-9d49-854cd70bad02" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
</Workspace>
{
  "Uuid": "1cbb0011-2f0b-41fd-8f1b-4aea2a985911",
  "IsCustomNode": true,
  "Category": "DynaMEP.Geometry.Points",
  "Description": "Get All Rotate from file text DiaLux",
  "Name": "GetRotDiaLux",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Carga las bibliotecas de DesignScript y normas de Python.\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Las entradas de este nodo se almacenan como lista en las variables IN.\r\ndataEnteringNode = IN\r\n\r\n# Incluya el código debajo de esta línea\r\narr = IN[0]\r\n\r\nposArr = list(filter(lambda a: (\"Rot\" in a), arr))\r\n\r\ndef splitFn(a):\r\n  return a.split(\"=\")[1]\r\n\r\ndef joinPoints(p):\r\n  return ','.join(p)\r\n\r\ndef splitPoints(c):\r\n  return c.split()\r\n\r\n\r\n\r\ncoords = list( map(splitFn, posArr) )\r\n\r\npointsArr = []\r\n\r\nprint(coords)\r\n\r\nfor s in coords:\r\n  splittedArr = splitPoints(s)\r\n  pointsArr.append(joinPoints(splittedArr))\r\n\r\nprint(pointsArr)\r\n\r\nOUT = pointsArr\r\n\r\n# Asigne la salida a la variable OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "9977b06c2b1941a997e95af3c3f57a24",
      "Inputs": [
        {
          "Id": "a94e93425dc0463f89d3c2ce27760130",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b780c832e144c40ba46304a1db4149b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "0539394e6d8646baa9089d17e1bf11c5",
      "Inputs": [
        {
          "Id": "80f19322b3cb4579ab4e571b9219ab45",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eae1d2c5d23143e29c1d68358d5c6b01",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\",\";",
      "Id": "2dd1c0eeefec41baa7a1164f5bfae729",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0013140772614fed83efe10e672006b6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "c62761b6b34f4763b88451ab0f0fce97",
      "Inputs": [
        {
          "Id": "9cb31ff406c14ea18a738a0feacc64f1",
          "Name": "str",
          "Description": "String to split up.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8d186ef7e8c4b5cbb401c608ca63faf",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f71c40a0daf45cc93b0465cab460209",
          "Name": "strings",
          "Description": "List of strings made from the input string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (str: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.String.StringToNumber@string[]",
      "Id": "1b4327757ebf4596bf9637c132c2e265",
      "Inputs": [
        {
          "Id": "929498054c934e108ea36b7a3b2b3d99",
          "Name": "str",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3cf7c919084456787de22e4ec13fb86",
          "Name": "double[]",
          "Description": "double[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Remove All Value Empty And convert String to Number, if String Length > 1 Automatic set 0 Value\n\nString.StringToNumber (str: string[]): double[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "ceda6dac9bca457b9ea901a3c5abab61",
      "Inputs": [
        {
          "Id": "0d9f9493842f412ca1b5388a819e9fc6",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19bb72e017e84986918221e5d676dd7c",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "listarr",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "7ada3141273d43efab4d67562c1d2789",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d74489dd8414a4aa885701ec7f52947",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "double",
      "Id": "509333828b8544c89a4c9885d564258d",
      "Inputs": [
        {
          "Id": "d337392457564abe884fbc510a0cdd7b",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "7765e7663c84433b9b74a90d2627b450",
      "Inputs": [
        {
          "Id": "322c7b4001434d6fa7d2f7100b9a320d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d561a105fe3c40aa9acf39184294b8df",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffa8a67198c141c990a8b2758ee2b1d1",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "84d6b13a2f3947dda66eecc497209b0f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0785f4b6881545b491b3ae9840291e0a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "4b780c832e144c40ba46304a1db4149b",
      "End": "80f19322b3cb4579ab4e571b9219ab45",
      "Id": "b4d680a25b234e28b1c18d372f425735"
    },
    {
      "Start": "eae1d2c5d23143e29c1d68358d5c6b01",
      "End": "9cb31ff406c14ea18a738a0feacc64f1",
      "Id": "b3d83580c79e41769013ea22ab807a03"
    },
    {
      "Start": "0013140772614fed83efe10e672006b6",
      "End": "f8d186ef7e8c4b5cbb401c608ca63faf",
      "Id": "069524491ab2443685425bc16a627c50"
    },
    {
      "Start": "9f71c40a0daf45cc93b0465cab460209",
      "End": "929498054c934e108ea36b7a3b2b3d99",
      "Id": "307553a184994cf6902a3bbae0114b13"
    },
    {
      "Start": "b3cf7c919084456787de22e4ec13fb86",
      "End": "0d9f9493842f412ca1b5388a819e9fc6",
      "Id": "b21add263a714cef939eae242689f4f2"
    },
    {
      "Start": "19bb72e017e84986918221e5d676dd7c",
      "End": "322c7b4001434d6fa7d2f7100b9a320d",
      "Id": "cd1779a7212f4ef3a67bd3940b951cc3"
    },
    {
      "Start": "2d74489dd8414a4aa885701ec7f52947",
      "End": "a94e93425dc0463f89d3c2ce27760130",
      "Id": "dc86e106be5246d6985c0492a622655d"
    },
    {
      "Start": "ffa8a67198c141c990a8b2758ee2b1d1",
      "End": "d337392457564abe884fbc510a0cdd7b",
      "Id": "326c8d5316584aacb006ddb6c2fd2f53"
    },
    {
      "Start": "0785f4b6881545b491b3ae9840291e0a",
      "End": "d561a105fe3c40aa9acf39184294b8df",
      "Id": "c353291c3118419189fdaf6df590041d"
    }
  ],
  "Dependencies": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "9977b06c2b1941a997e95af3c3f57a24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 772.00000000000023,
        "Y": 427.0
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "0539394e6d8646baa9089d17e1bf11c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 962.64758305767032,
        "Y": 427.02960543624704
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2dd1c0eeefec41baa7a1164f5bfae729",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 998.00000000000023,
        "Y": 524.0
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "c62761b6b34f4763b88451ab0f0fce97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1174.1033275980203,
        "Y": 441.517580632222
      },
      {
        "ShowGeometry": true,
        "Name": "String.StringToNumber",
        "Id": "1b4327757ebf4596bf9637c132c2e265",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1492.0849185392331,
        "Y": 443.516651107053
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "ceda6dac9bca457b9ea901a3c5abab61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1743.6584382009232,
        "Y": 482.363400765689
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "7ada3141273d43efab4d67562c1d2789",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 545.01433404157774,
        "Y": 397.89823497724052
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "509333828b8544c89a4c9885d564258d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2217.8148173096633,
        "Y": 529.1541195550061
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "7765e7663c84433b9b74a90d2627b450",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2001.2846203876027,
        "Y": 493.4005412197489
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "84d6b13a2f3947dda66eecc497209b0f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1879.7404274367925,
        "Y": 585.14787400719354
      }
    ],
    "Annotations": [],
    "X": -430.51477662283105,
    "Y": -102.3643158632089,
    "Zoom": 1.0606077223602068
  }
}
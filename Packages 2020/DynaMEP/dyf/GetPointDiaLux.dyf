{
  "Uuid": "21add1f4-5232-42c6-a55b-4a5e1b501ec8",
  "IsCustomNode": true,
  "Category": "DynaMEP.Geometry.Points",
  "Description": "Get Point From DiaLux",
  "Name": "GetPointDiaLux",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Carga las bibliotecas de DesignScript y normas de Python.\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Las entradas de este nodo se almacenan como lista en las variables IN.\r\ndataEnteringNode = IN\r\n\r\n# Incluya el código debajo de esta línea\r\narr = IN[0]\r\n\r\nposArr = list(filter(lambda a: (\"Pos\" in a), arr))\r\n\r\ndef splitFn(a):\r\n  return a.split(\"=\")[1]\r\n\r\ndef joinPoints(p):\r\n  return ','.join(p)\r\n\r\ndef splitPoints(c):\r\n  return c.split()\r\n\r\n\r\n\r\ncoords = list( map(splitFn, posArr) )\r\n\r\npointsArr = []\r\n\r\nprint(coords)\r\n\r\nfor s in coords:\r\n  splittedArr = splitPoints(s)\r\n  pointsArr.append(joinPoints(splittedArr))\r\n\r\nprint(pointsArr)\r\n\r\nOUT = pointsArr\r\n\r\n# Asigne la salida a la variable OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "8065e0ddee94461abc57e300602f3124",
      "Inputs": [
        {
          "Id": "5c1e3bfb8d3d425183c9323534a49734",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5622d1bc88df46f3b3482b7f549a81f7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "listarr",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "5305cf85319d4e1182ea69becefc6edb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "70a8524b80f4484d941d1fbc3e77ef4b",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "203996d77a704ddb9b456089c65966d4",
      "Inputs": [
        {
          "Id": "1e36e57c2d7e418abac78289927aed1e",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "991170b71655453a9577cc3f681a7fad",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.String.StringToNumber@string[]",
      "Id": "eedcf3c946c7451895d17c610e7d430a",
      "Inputs": [
        {
          "Id": "f2423326d92a400c8809b8bbfc3fa2cb",
          "Name": "str",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3653d7a16d5748afab88c3f8d12304f0",
          "Name": "double[]",
          "Description": "double[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Remove All Value Empty And convert String to Number, if String Length > 1 Automatic set 0 Value\n\nString.StringToNumber (str: string[]): double[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "1205d5cab35d40fbb51cba21717e428f",
      "Inputs": [
        {
          "Id": "649a1e59ba584312a3b720091d37a73f",
          "Name": "str",
          "Description": "String to split up.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "889b119ccaa749069789b626894e8af3",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4f8c6fce0404fcb9209b6ab9e183893",
          "Name": "strings",
          "Description": "List of strings made from the input string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (str: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\",\";",
      "Id": "a5136e1899804385841722a1d7f22e4b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9633fc19a6ea4480ab79471537afa24a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "8813d07cac6244b6ab15bcb7fbd7165a",
      "Inputs": [
        {
          "Id": "a2debe7c52b04dc1bb6d5663f44734b9",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3bf2a682ea5f4dceb1897fd8ca7351ab",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "Points",
      "Id": "a95b0609ba334550b351ce8d9c3958db",
      "Inputs": [
        {
          "Id": "0fbd64c866354ee3b6f914964a71cfde",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "5aad0568d30944ea8daa2ae7fb53b0ac",
      "Inputs": [
        {
          "Id": "ea685be35581498e891d061236b30469",
          "Name": "x",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82b7f21f4bdc4a8b86e7baa433699986",
          "Name": "y",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "453fc653caee45829b379bbf534f3885",
          "Name": "z",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10de751d2afa4c19b1377c73aeecff52",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0]*1000;\na[1]*1000;\na[2]*1000;",
      "Id": "83ae3351ef25448b8f76adbfd07d34c7",
      "Inputs": [
        {
          "Id": "87b02686782f482299d1c7510a13ab8e",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62edf5c38fd84f71b35e82b610811c98",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2487815d214c4e4eb02da71482c47098",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06844ddded134f4c94fb3f526823dabc",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "5622d1bc88df46f3b3482b7f549a81f7",
      "End": "1e36e57c2d7e418abac78289927aed1e",
      "Id": "91efb32d233e47808fd49ddcf9de43ea"
    },
    {
      "Start": "70a8524b80f4484d941d1fbc3e77ef4b",
      "End": "5c1e3bfb8d3d425183c9323534a49734",
      "Id": "d05daba484044d89ade7bb79f03c19de"
    },
    {
      "Start": "991170b71655453a9577cc3f681a7fad",
      "End": "649a1e59ba584312a3b720091d37a73f",
      "Id": "4e8a21b3b0ef493cb17acbe3037bf0eb"
    },
    {
      "Start": "3653d7a16d5748afab88c3f8d12304f0",
      "End": "a2debe7c52b04dc1bb6d5663f44734b9",
      "Id": "769b0da4c9b04566ad1b7931f2f5353f"
    },
    {
      "Start": "d4f8c6fce0404fcb9209b6ab9e183893",
      "End": "f2423326d92a400c8809b8bbfc3fa2cb",
      "Id": "02ee2cac57604490a3c778b7fa32ffd7"
    },
    {
      "Start": "9633fc19a6ea4480ab79471537afa24a",
      "End": "889b119ccaa749069789b626894e8af3",
      "Id": "f4dcf9126e214035b948a5bea4f47c47"
    },
    {
      "Start": "3bf2a682ea5f4dceb1897fd8ca7351ab",
      "End": "87b02686782f482299d1c7510a13ab8e",
      "Id": "7e6358d3f7d14e64b2068ec1e7020bae"
    },
    {
      "Start": "10de751d2afa4c19b1377c73aeecff52",
      "End": "0fbd64c866354ee3b6f914964a71cfde",
      "Id": "82bdd72bfdc14c15b8887162332a543f"
    },
    {
      "Start": "62edf5c38fd84f71b35e82b610811c98",
      "End": "ea685be35581498e891d061236b30469",
      "Id": "20d3608791ab42e6ae4575e07046f3b1"
    },
    {
      "Start": "2487815d214c4e4eb02da71482c47098",
      "End": "82b7f21f4bdc4a8b86e7baa433699986",
      "Id": "b451b3cc503b4ce8aeef5abdecd96223"
    },
    {
      "Start": "06844ddded134f4c94fb3f526823dabc",
      "End": "453fc653caee45829b379bbf534f3885",
      "Id": "d8afe2f27e764274897ad51696518f90"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "DynaMEP",
      "Version": "1.0.9",
      "ReferenceType": "Package",
      "Nodes": [
        "eedcf3c946c7451895d17c610e7d430a"
      ]
    }
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.5.0.7460",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 104.13175569932848,
      "EyeY": 156.67226321686508,
      "EyeZ": 170.93811709145297,
      "LookX": -21.041054413366453,
      "LookY": -130.9616042412033,
      "LookZ": -164.009671423385,
      "UpX": -0.055782134600551411,
      "UpY": 0.89879404629916793,
      "UpZ": -0.43480756179783409
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "8065e0ddee94461abc57e300602f3124",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 665.0,
        "Y": 519.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "5305cf85319d4e1182ea69becefc6edb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 487.41378613848997,
        "Y": 541.35503498332548
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "203996d77a704ddb9b456089c65966d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 855.64758305767714,
        "Y": 519.02960543624658
      },
      {
        "ShowGeometry": true,
        "Name": "String.StringToNumber",
        "Id": "eedcf3c946c7451895d17c610e7d430a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1346.769434091759,
        "Y": 510.52829168478638
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "1205d5cab35d40fbb51cba21717e428f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1067.1033275980162,
        "Y": 533.51758063222235
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a5136e1899804385841722a1d7f22e4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 891.0,
        "Y": 616.0
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "8813d07cac6244b6ab15bcb7fbd7165a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1575.8079028571487,
        "Y": 531.06007060681577
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "a95b0609ba334550b351ce8d9c3958db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2092.2413845067454,
        "Y": 532.711970132314
      },
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "5aad0568d30944ea8daa2ae7fb53b0ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1910.4844482808214,
        "Y": 534.02360380806078
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "83ae3351ef25448b8f76adbfd07d34c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1759.6432857853883,
        "Y": 532.05306945775362
      }
    ],
    "Annotations": [],
    "X": -2339.4416414089596,
    "Y": -647.863544504102,
    "Zoom": 1.6001030088099994
  }
}
<Workspace Version="1.3.0.875" X="-206" Y="-26" zoom="1" ScaleFactor="1" Name="Dictionary.ByKeysValues" Description="Search value by keys" ID="cbdea67e-dd41-470b-babe-ee1058912d1f" Category="MEPTools.Core">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="d844377b-2b88-4f0c-b816-0a0e5f958e0d" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="612.809517731062" y="401" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="keys:var[]" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="8ca6fd7f-3bbb-42e6-97f8-cbfc0ebe0a91" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="596.201650598215" y="460.359479757597" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="values:var[]" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="9399260b-f146-474e-a240-16b92bcf9855" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="564" y="520.626605593358" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="searchKeys:var[]" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <PythonNodeModels.PythonNode guid="a7553e20-93ed-448e-9e0c-ec254db80889" type="PythonNodeModels.PythonNode" nickname="Python Script" x="769.941412298859" y="434.062990415654" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script>#Copyright(c) 2016, Dimitar Venkov
# @5devene, dimitar.ven@gmail.com

import clr

def tolist(obj1):
	if hasattr(obj1,"__iter__"): return obj1
	else: return [obj1]

def output1(l1):
	if len(l1) == 1: return l1[0]
	else: return l1

out1, fail = [], []

keys = tolist(IN[0])
elements = tolist(IN[1])
searchVals = tolist(IN[2])
dict1 = dict(zip(keys,elements))
for i in xrange(len(searchVals)):
	if searchVals[i] in dict1: out1.append(dict1[searchVals[i]])
	else: out1.append(fail)

OUT = output1(out1)</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="05e33243-d988-4e52-b3e6-11c04acc6ba8" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="915.807933527912" y="435.111803235252" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="result" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="d844377b-2b88-4f0c-b816-0a0e5f958e0d" start_index="0" end="a7553e20-93ed-448e-9e0c-ec254db80889" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8ca6fd7f-3bbb-42e6-97f8-cbfc0ebe0a91" start_index="0" end="a7553e20-93ed-448e-9e0c-ec254db80889" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9399260b-f146-474e-a240-16b92bcf9855" start_index="0" end="a7553e20-93ed-448e-9e0c-ec254db80889" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a7553e20-93ed-448e-9e0c-ec254db80889" start_index="0" end="05e33243-d988-4e52-b3e6-11c04acc6ba8" end_index="0" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="8abf5e5d-65c9-4e01-8b57-06d323ecd3e4" text="This python codes get from Spring Package." x="777.5" y="360.5" />
  </Notes>
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="背景预览" eyeX="63992.8046875" eyeY="102694.7578125" eyeZ="-137373.84375" lookX="-14116.2333984375" lookY="-117968.7265625" lookZ="-96637.734375" upX="-0.0889875888824463" upY="0.788010776042938" upZ="-0.609196424484253" />
  </Cameras>
</Workspace>
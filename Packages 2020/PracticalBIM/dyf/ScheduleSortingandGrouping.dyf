{
  "Uuid": "aa18727f-ecc2-469e-8e35-be0f11a5171d",
  "IsCustomNode": true,
  "Category": "PracticalBIM.Revit.View.Schedules",
  "Description": "Use it to set Sorting and Grouping Properties of a Schedule View",
  "Name": "ScheduleSortingandGrouping",
  "ElementResolver": {
    "ResolutionMap": {
      "ScheduleView": {
        "Key": "Revit.Elements.Views.ScheduleView",
        "Value": "RevitNodes.dll"
      },
      "Revit.Elements.Views.ScheduleView": {
        "Key": "Revit.Elements.Views.ScheduleView",
        "Value": "RevitNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "scheduleview",
        "TypeName": "Revit.Elements.Views.ScheduleView",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "ed786f68f279420b887df97ed7be635f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3a161084c40f4ee9bb6f6f55620be29a",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "parameterName",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "a4ffa78a79c44c8997d439785b715f59",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f426f33365dd4382853be94e0b8d4d28",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "blankLine",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "7b7fb25b770d45f58826b26f73df5e72",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "567bba2615a742ea8dc290087996b4d6",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "footerCount",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "581e2a60be8f4e6b8fb36c7d85eeb11c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "747f208e7ec74645a45b65a989943e17",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "footerTitle",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "0d991c9733a34088a297b83de78c4f8d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f0b9ab6e604a4406a3599617190e4f36",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "header",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "710c373e4cee4e4295d63abd1d39518c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1b0ee4d0d3004868b26589ff28387a1e",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright(c) 2015, Konrad Sobon\n# @arch_laboratory, http://archi-lab.net\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\nfrom System.Collections.Generic import *\n\n# Import ToDSType(bool) extension method\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n#The inputs to this node will be stored as a list in the IN variable.\ndataEnteringNode = IN\n\n_keySchedule = UnwrapElement(IN[0])\n_paramName = IN[1]\n_showBlankLine = IN[2]\n_footerCount = IN[3]\n_footerTitle = IN[4]\n_header = IN[5]\n_sortOrder = IN[6]\n\n#\"Start\" the transaction\nTransactionManager.Instance.EnsureInTransaction(doc)\n\ndef getFieldId(schedule, name):\n\tdefinition = schedule.Definition\n\tcount = definition.GetFieldCount()\n\tfor i in range(0, count, 1):\n\t\tif definition.GetField(i).GetName() == name:\n\t\t\tfieldId = definition.GetField(i).FieldId\n\treturn fieldId\n\ndef addSortingField(schedule, ssgf):\n\tmessage = None\n\tdefinition = schedule.Definition\n\ttry:\n\t\tdefinition.AddSortGroupField(ssgf)\n\texcept:\n\t\tmessage = \"You can add Max of 4 sorting/grouping parameters.\"\n\t\tpass\n\treturn message\n\t\ndef createSortingField(fieldId, blank, fCount, fTitle, header, sOrder):\n\tmessage = None\n\tssgf = ScheduleSortGroupField()\n\tssgf.FieldId = fieldId\n\n\tif blank != None:\n\t\tssgf.ShowBlankLine = blank\n\n\tcheckList = [fCount, fTitle]\n\tif any(item == True for item in checkList):\n\t\tssgf.ShowFooter = True\n\t\tif fCount != None:\n\t\t\tssgf.ShowFooterCount = fCount\n\t\tif fTitle != None:\n\t\t\tssgf.ShowFooterTitle = fTitle\n\telse:\n\t\tssgf.ShowFooter = False\n\n\tif header != None:\n\t\tssgf.ShowHeader = header\n\tif sOrder != None:\n\t\tif sOrder == \"Ascending\":\n\t\t\tsortO = ScheduleSortOrder.Ascending\n\t\t\tssgf.SortOrder = sortO\n\t\telif sOrder == \"Descending\":\n\t\t\tsortO = ScheduleSortOrder.Descending\n\t\t\tssgf.SortOrder = sortO\n\t\telse:\n\t\t\tmessage = \"Schedule Sort Order can only be \\nset to Ascending or Descending.\\nCheck your spelling please.\"\n\tif message == None:\n\t\treturn ssgf\n\telse:\n\t\treturn message\n\nif type(_paramName) == list:\n\tdefinition = _keySchedule.Definition\n\tif definition.GetSortGroupFieldCount() != 0:\n\t\tdefinition.ClearSortGroupFields()\n\tfor i,j,k,l,m,n in zip(_paramName, _showBlankLine, _footerCount, _footerTitle, _header, _sortOrder):\n\t\tfieldId = getFieldId(_keySchedule, i)\n\t\tssgf = createSortingField(fieldId, j, k, l, m, n)\n\t\tif type(ssgf) == str:\n\t\t\tmessage = \"Schedule Sort Order can only be \\nset to Ascending or Descending.\\nCheck your spelling please.\"\n\t\telse:\n\t\t\tmessage = addSortingField(_keySchedule, ssgf)\nelse:\n\tdefinition = _keySchedule.Definition\n\tif definition.GetSortGroupFieldCount() != 0:\n\t\tdefinition.ClearSortGroupFields()\n\tfieldId = getFieldId(_keySchedule, _paramName)\n\tssgf = createSortingField(fieldId, _showBlankLine, _footerCount, _footerTitle, _header, _sortOrder)\n\tif type(ssgf) == str:\n\t\tmessage = \"Schedule Sort Order can only be \\nset to Ascending or Descending.\\nCheck your spelling please.\"\n\telse:\n\t\tmessage = addSortingField(_keySchedule, ssgf)\n\n# \"End\" the transaction\nTransactionManager.Instance.TransactionTaskDone()\n\n#Assign your output to the OUT variable\nif message == None:\n\tOUT = 0\nelse:\n\tOUT = '\\n'.join('{:^35}'.format(s) for s in message.split('\\n'))",
      "VariableInputPorts": true,
      "Id": "c770162655224934a8d99d68ec2f9a27",
      "Inputs": [
        {
          "Id": "98bf8eeabcf44e39b6e19319add2648c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "213b1dac4a474d7f9d8fe984009c0f8f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b494d6402a094cd38da527d77ebac5b8",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4e56490353543d0894d97886da90c37",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44c6c2cd40eb4c6088087c8c7a3d5bcd",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b4a07f8452845c98128469149667e0a",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e3cdef18d2248538032c9b5e8470ffa",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2da4201addb44619313332984a1533a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "sortOrder",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "2f9ca1e1a81c4525bfba4c986a311afc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2e79da52c31d4ddc81975b47adcd92df",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "out",
      "Id": "4873ebf4e76940d5b150f4f64de53fed",
      "Inputs": [
        {
          "Id": "3235dff1149f4410a9c5e03be9308151",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "3a161084c40f4ee9bb6f6f55620be29a",
      "End": "98bf8eeabcf44e39b6e19319add2648c",
      "Id": "ed52bcbb5c594bcabff4f6b247f497cf"
    },
    {
      "Start": "f426f33365dd4382853be94e0b8d4d28",
      "End": "213b1dac4a474d7f9d8fe984009c0f8f",
      "Id": "e1efbcfac1eb4be192647918183a83c9"
    },
    {
      "Start": "567bba2615a742ea8dc290087996b4d6",
      "End": "b494d6402a094cd38da527d77ebac5b8",
      "Id": "1fd407e5635a43a2b4257ec1c6b9f70f"
    },
    {
      "Start": "747f208e7ec74645a45b65a989943e17",
      "End": "f4e56490353543d0894d97886da90c37",
      "Id": "6e65fdc08981478fbef4fd1c04938448"
    },
    {
      "Start": "f0b9ab6e604a4406a3599617190e4f36",
      "End": "44c6c2cd40eb4c6088087c8c7a3d5bcd",
      "Id": "b03a7bf45b2e47a2a930b5eba67f09a9"
    },
    {
      "Start": "1b0ee4d0d3004868b26589ff28387a1e",
      "End": "4b4a07f8452845c98128469149667e0a",
      "Id": "683504d12f8940149c4301792fe65afe"
    },
    {
      "Start": "f2da4201addb44619313332984a1533a",
      "End": "3235dff1149f4410a9c5e03be9308151",
      "Id": "0905110e984a4fae91d626816cd2a62e"
    },
    {
      "Start": "2e79da52c31d4ddc81975b47adcd92df",
      "End": "2e3cdef18d2248538032c9b5e8470ffa",
      "Id": "bb452d98d7844568be45a75b1cede72b"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.2.1.5175",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -122.51142048613769,
      "EyeY": 92.141101271661384,
      "EyeZ": 140.21063381090761,
      "LookX": 137.87113307261112,
      "LookY": -82.009693609605577,
      "LookZ": -136.96277193455103,
      "UpX": 0.12928516837231663,
      "UpY": 0.98325490756395961,
      "UpZ": -0.12843337568693136
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "ed786f68f279420b887df97ed7be635f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 531.136069114471,
        "Y": 20.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "a4ffa78a79c44c8997d439785b715f59",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 482.62896856632585,
        "Y": 78.007037991178152
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "7b7fb25b770d45f58826b26f73df5e72",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 523.72917110821686,
        "Y": 142.37154011199425
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "581e2a60be8f4e6b8fb36c7d85eeb11c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 538.28902520370025,
        "Y": 195.379232771752
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "0d991c9733a34088a297b83de78c4f8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 539.33719607098374,
        "Y": 253.140196450813
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "710c373e4cee4e4295d63abd1d39518c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 538.28902520370036,
        "Y": 312.997501864442
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c770162655224934a8d99d68ec2f9a27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 906.7974633581814,
        "Y": 187.4259126148614
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "2f9ca1e1a81c4525bfba4c986a311afc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 534.17310490580667,
        "Y": 374.550668642565
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "4873ebf4e76940d5b150f4f64de53fed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 981.0,
        "Y": 20.0
      }
    ],
    "Annotations": [],
    "X": -84.927500000000009,
    "Y": 74.302500000000009,
    "Zoom": 1.1575
  }
}
<Workspace Category="Butterfly.06::Solution" Description="Solution Parameter." ID="45b45929-c711-43e4-950b-79cca4d6671a" Name="Solution Parameter" Version="1.2.0.2690" X="400" Y="-100" zoom="0.5">
  <NamespaceResolutionMap/>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="&quot;Butterfly&quot;;&#xA;&quot;solutionparam_node.py&quot;;" ShouldFocus="false" guid="6addd14e-c60d-42c6-b1eb-f74b6216f49a" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="input python script" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="-750" y="390"/>
    <PythonNodeModels.PythonNode guid="2a296574-31b8-4771-b70a-55978216ffc0" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="import and prepare py code" type="PythonNodeModels.PythonNode" x="-355" y="385">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Find packages from Dynamo folder and prepare the code.&quot;&quot;&quot;
import clr
from System import AppDomain, Environment, IO

def tryGetPluginPath(plugin):
    &quot;&quot;&quot;Try to get path to plugin folder.&quot;&quot;&quot;
    clr.AddReference('ProtoGeometry')
    _loc = tuple(a.Location
                 for a in AppDomain.CurrentDomain.GetAssemblies()
                 if 'ProtoGeometry' in a.FullName)

    try:
        _ver = float(_loc[0].split('\\')[-2])
    except:
        _ver = float(_loc[0].split('\\')[-2].split(' ')[-1])

    assert _ver &gt;= 1.2, 'You need Dynamo 1.2 or higher to use this plugin!'

    _appdata = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)
    _dynamoPath = '%s\\%.1f' % (('\\').join(_loc[0].split('\\')[-4:-2]), float(_loc[0].split('\\')[-2]))
    # if the assembly is cached put Revit folder first, and then try to load it from core
    _dynamoPaths = (_dynamoPath.replace('Dynamo Core', 'Dynamo Revit'),
                    _dynamoPath.replace('Dynamo Revit', 'Dynamo Core'))
    _settingsFilename = 'DynamoSettings.xml'

    pkf = []
    for path in _dynamoPaths:
        settingsFile = IO.Path.Combine(_appdata, path, _settingsFilename)
        if IO.File.Exists(settingsFile):
            with open(settingsFile, 'rb') as outf:
                for line in outf:
                    if line.strip().startswith('&lt;CustomPackageFolders&gt;'):
                        for l in outf:
                            if l.strip().startswith('&lt;/CustomPackageFolders&gt;'):
                                break
                            else:
                                pkf.append(l.replace('&lt;/string&gt;', '').replace('&lt;string&gt;', '').strip())

    for p in pkf:
        pp = IO.Path.Combine(p, 'packages', plugin, 'extra')
        if IO.Directory.Exists(pp):
            return pp

try:
    plugin, filename = IN
    p = tryGetPluginPath(plugin)
    if not p:
        raise ImportError('{} is not installed! Install it from package manager.'.format(plugin))
    # import the file and wrap it into sys.append
    f = IO.Path.Combine(p, 'nodesrc', filename)
    with open(f, 'rb') as inf:
        source = '    '.join(inf.readlines())

    header = 'try:\n    import sys\n' + \
        '    sys.path.append(r\'{}\')\n\n'.format(p) + \
        '    sys.path.append(r\'C:\Program Files (x86)\IronPython 2.7\Lib\')\n\n' + \
        '    '

    footer = '\nexcept Exception, e:\n' + \
        '    import traceback\n' + \
        '    OUT = &quot;ERROR:\\n\\t{}&quot;.format(str(e)) + \\\n' + \
        '    &quot;\\n\\nIf you think this is a bug submit an issue on github.\\n&quot; + \\\n' + \
        '    &quot;https://github.com/ladybug-tools/butterfly-plus/issues\\n&quot; +  \\\n' + \
        '    &quot;and include below error message:\\n\\n&quot; + \\\n' + \
        '    &quot;{}&quot;.format(traceback.format_exc())\n'

    OUT = header + source + footer

except Exception, e:
    import sys
    sys.path.append(r'C:\Program Files (x86)\IronPython 2.7\Lib')
    import traceback
    OUT = &quot;ERROR:\n\t{}&quot;.format(str(e)) + \
        &quot;\n\nIf you think this is a bug submit an issue on github.\n&quot; + \
        &quot;https://github.com/ladybug-tools/butterfly-plus/issues\n&quot; +  \
        &quot;and include below error message:\n\n&quot; + \
        &quot;{}&quot;.format(traceback.format_exc())

      </Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonStringNode guid="e50ffd22-8a91-455d-b613-83d7884fdda5" inputcount="5" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="core" type="PythonNodeModels.PythonStringNode" x="-75" y="460">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <PortInfo default="false" index="2"/>
      <PortInfo default="false" index="3"/>
      <PortInfo default="false" index="4"/>
    </PythonNodeModels.PythonStringNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="f03cd004-ecb3-4599-b94f-10bbdb24149f" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_filename" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="475">
      <Symbol value="// OpenFOAM filename that the values are belong to (e.g.&#xD;&#xA;// blockMeshDict, fvSchemes).&#xD;&#xA;_filename: string;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="932269b0-6519-4c73-9e75-97fe130cca95" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="_values" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="570">
      <Symbol value="// new values as a valid OpenFOAM (c++) dictionary.&#xD;&#xA;_values: string;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="0877cd03-e103-4b83-a515-ed2af8c9e98b" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="tRange_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="665">
      <Symbol value="// Script variable solutionParam&#xD;&#xA;tRange_: double[] = null;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="3c650f33-5f55-4a5f-a75b-435e985f1719" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="replace_" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" x="-750" y="760">
      <Symbol value="// Set to True if you want the original dictionary to be replaced&#xD;&#xA;// by new values. Default is False which means the original dictionary&#xD;&#xA;// will be only updated by new values.&#xD;&#xA;replace_: bool = false;"/>
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel CodeText="out[0];" ShouldFocus="false" guid="0581d70a-a75a-4101-9db5-428bcc41535c" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="decompose outputs" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" x="150" y="515"/>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="c1c1516a-c569-412b-b8ac-820ee22ef326" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="solutionParam" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="475">
      <Symbol value="// A solution parameter.&#xD;&#xA;solutionParam;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="77931e7a-a557-4d89-b867-9e94a228729b" inputcount="2" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="Error report" type="PythonNodeModels.PythonNode" x="150" y="380">
      <PortInfo default="false" index="0"/>
      <PortInfo default="false" index="1"/>
      <Script>
        
&quot;&quot;&quot;Report errors&quot;&quot;&quot;
importErr, runErr = IN
errors = []

if importErr and str(importErr).startswith(&quot;ERROR:&quot;):
    errors.append(importErr)

if runErr and str(runErr).startswith(&quot;ERROR:&quot;):
    errors.append(runErr)

if len(errors)==0:
    OUT = &quot;All good! Vvizzzz.&quot;
else:
    OUT = &quot;\n&quot;.join(errors)

      </Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="7cc65b52-8bb3-4c86-a2fc-50b3974d97c7" isFrozen="false" isPinned="false" isSelectedInput="true" isUpstreamVisible="true" isVisible="true" lacing="Disabled" nickname="ERRReport" type="Dynamo.Graph.Nodes.CustomNodes.Output" x="380" y="380">
      <Symbol value="// Report&#xD;&#xA;ERRReport;"/>
      <PortInfo default="false" index="0"/>
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel end="2a296574-31b8-4771-b70a-55978216ffc0" end_index="0" portType="0" start="6addd14e-c60d-42c6-b1eb-f74b6216f49a" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="2a296574-31b8-4771-b70a-55978216ffc0" end_index="1" portType="0" start="6addd14e-c60d-42c6-b1eb-f74b6216f49a" start_index="1"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e50ffd22-8a91-455d-b613-83d7884fdda5" end_index="0" portType="0" start="2a296574-31b8-4771-b70a-55978216ffc0" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e50ffd22-8a91-455d-b613-83d7884fdda5" end_index="1" portType="0" start="f03cd004-ecb3-4599-b94f-10bbdb24149f" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e50ffd22-8a91-455d-b613-83d7884fdda5" end_index="2" portType="0" start="932269b0-6519-4c73-9e75-97fe130cca95" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e50ffd22-8a91-455d-b613-83d7884fdda5" end_index="3" portType="0" start="0877cd03-e103-4b83-a515-ed2af8c9e98b" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="e50ffd22-8a91-455d-b613-83d7884fdda5" end_index="4" portType="0" start="3c650f33-5f55-4a5f-a75b-435e985f1719" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="0581d70a-a75a-4101-9db5-428bcc41535c" end_index="0" portType="0" start="e50ffd22-8a91-455d-b613-83d7884fdda5" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="c1c1516a-c569-412b-b8ac-820ee22ef326" end_index="0" portType="0" start="0581d70a-a75a-4101-9db5-428bcc41535c" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="77931e7a-a557-4d89-b867-9e94a228729b" end_index="0" portType="0" start="2a296574-31b8-4771-b70a-55978216ffc0" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="77931e7a-a557-4d89-b867-9e94a228729b" end_index="1" portType="0" start="e50ffd22-8a91-455d-b613-83d7884fdda5" start_index="0"/>
    <Dynamo.Graph.Connectors.ConnectorModel end="7cc65b52-8bb3-4c86-a2fc-50b3974d97c7" end_index="0" portType="0" start="77931e7a-a557-4d89-b867-9e94a228729b" start_index="0"/>
  </Connectors>
  <Notes/>
  <Annotations/>
  <Presets/>
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34.00" eyeY="-34.00" eyeZ="21.19" lookX="-14.19" lookY="-43.06" lookZ="-41.65" upX="-0.17" upY="0.85" upZ="-0.50"/>
  </Cameras>
</Workspace>

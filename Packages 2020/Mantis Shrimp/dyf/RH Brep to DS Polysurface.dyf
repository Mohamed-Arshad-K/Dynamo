<Workspace Version="1.0.0.1180" X="-36.200118407404" Y="206.198519670141" zoom="1.78359936238281" Name="RH Brep to DS Polysurface" Description="Converts Rhino breps to Design Script polysurfaces. " ID="13eb7045-a271-40f1-9cd8-7d0c363c96a8" Category="Archi-lab_MantisShrimp.Rhinoceros.Geometry">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7b28d231-3f9e-45d8-b9fd-1d587129fff0" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="33.6933045356371" y="0.863930885529157" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="RhinoObject" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="514094af-939c-4f5a-aaa2-da808ce52f41" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="449" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <Symbol value="PolySurface" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="719c3c16-8f35-4b10-9cee-36a0d955a575" type="PythonNodeModels.PythonNode" nickname="Python Script" x="248.394410412524" y="-4.68856752400995" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <Script># Copyright(c) 2015, Konrad Sobon
# @arch_laboratory, http://archi-lab.net

import clr
import sys

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)

import os
appDataPath = os.getenv('APPDATA')
msPath = appDataPath + r'\Dynamo\Dynamo Revit\1.0\packages\Mantis Shrimp\extra'
if msPath not in sys.path:
	sys.path.append(msPath)
rhDllPath = appDataPath + r'\Dynamo\Dynamo Revit\1.0\packages\Mantis Shrimp\bin\Rhino3dmIO.dll'
clr.AddReferenceToFileAndPath(rhDllPath)

import Rhino as rc
from mantisshrimp import rhBrepToPolySurface

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

if isinstance(IN[0], list):
	rhObjects = IN[0]
else:
	rhObjects = [IN[0]]

def GetBrep(rhObj):
	try:
		geo = rhObj.Geometry
		if geo.ToString() == "Rhino.Geometry.Brep":
			return rhBrepToPolySurface(geo)
	except:
		pass

def ProcessList(_func, _list):
	return map(lambda x: ProcessList(_func, x) if type(x) == list else _func(x) , _list)

#convert rhino/gh geometry to ds geometry
try:
	errorReport = None
	dsSurfaces = ProcessList(GetBrep, rhObjects)
except:
	# if error accurs anywhere in the process catch it
	import traceback
	errorReport = traceback.format_exc()
	
#Assign your output to the OUT variable
if errorReport == None:
	OUT = dsSurfaces
else:
	OUT = errorReport</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="7b28d231-3f9e-45d8-b9fd-1d587129fff0" start_index="0" end="719c3c16-8f35-4b10-9cee-36a0d955a575" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="719c3c16-8f35-4b10-9cee-36a0d955a575" start_index="0" end="514094af-939c-4f5a-aaa2-da808ce52f41" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>
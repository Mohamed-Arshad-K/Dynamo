<Workspace Version="1.0.0.1180" X="-529.955508675382" Y="-345.663998890277" zoom="2.05668026833428" Name="Get Objects by Type" Description="This node will retrieve all of the objects of given type from a Rhino model." ID="f0a7b8b2-cc4f-43b4-a059-7f70f2b47cd7" Category="Archi-lab_MantisShrimp.Rhinoceros.ReadRhino">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="02e1b54c-a957-49a8-a708-72a248c39492" type="PythonNodeModels.PythonNode" nickname="Python Script" x="494" y="248" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <Script># Copyright(c) 2015, Konrad Sobon
# @arch_laboratory, http://archi-lab.net

import clr
import sys

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)

import os
appDataPath = os.getenv('APPDATA')
msPath = appDataPath + r'\Dynamo\Dynamo Revit\1.0\packages\Mantis Shrimp\extra'
if msPath not in sys.path:
	sys.path.append(msPath)
rhDllPath = appDataPath + r'\Dynamo\Dynamo Revit\1.0\packages\Mantis Shrimp\bin\Rhino3dmIO.dll'
clr.AddReferenceToFileAndPath(rhDllPath)

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
rhModel = IN[0]

if isinstance(IN[1], list):
	rhType = IN[1]
else:
	rhType = [IN[1]]

def GetObjectType(obj):
	try:
		geo = obj.Geometry
		if geo.ToString() == "Rhino.Geometry.ArcCurve" and geo.IsArc():
			objType = "Arc"
		elif geo.ToString() == "Rhino.Geometry.NurbsCurve" and geo.IsClosed and geo.IsRational:
			objType = "Ellipse"
		elif geo.ToString() == "Rhino.Geometry.ArcCurve" and geo.IsCircle():
			objType = "Circle"
		else:
			objType = geo.ToString().split(".")[2]
	except:
		objType = "Unknown"
		pass
	return objType

def GetObjectsByType(rhObj = None, rht = rhType):
	if GetObjectType(rhObj) in rhType:
		return rhObj
	else:
		return None

def ClearList(_list):
    out = []
    for _list1 in _list:
        if _list1 is None:
            continue
        if not _list1:
        	continue
        if isinstance(_list1, list):
             _list1 = ClearList(_list1)
             if not _list1:
                 continue
        out.append(_list1)
    return out

def ProcessList(_func, _list):
    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )

try:
	errorReport = None
	allObjects = rhModel.Objects
	objects = ProcessList(GetObjectsByType, allObjects)
except:
	# if error accurs anywhere in the process catch it
	import traceback
	errorReport = traceback.format_exc()

#Assign your output to the OUT variable
if errorReport == None:
	OUT = ClearList(objects)
else:
	OUT = errorReport</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="478a8af8-4924-46c6-a415-43e934cb2fb4" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="345.113186901344" y="228.278541533876" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="RhinoFile" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="50f34578-f614-4865-8fcb-64e12d95425c" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="325.178148562494" y="302.670269969097" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="ObjectType" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="55d67ce6-5cb7-4e7d-aedb-65b35e185379" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="687.898602240106" y="266.689956869709" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <Symbol value="RhinoObject" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="02e1b54c-a957-49a8-a708-72a248c39492" start_index="0" end="55d67ce6-5cb7-4e7d-aedb-65b35e185379" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="478a8af8-4924-46c6-a415-43e934cb2fb4" start_index="0" end="02e1b54c-a957-49a8-a708-72a248c39492" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="50f34578-f614-4865-8fcb-64e12d95425c" start_index="0" end="02e1b54c-a957-49a8-a708-72a248c39492" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>
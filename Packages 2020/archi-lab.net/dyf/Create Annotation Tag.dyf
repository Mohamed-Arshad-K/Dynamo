{
  "Uuid": "feec7bb7-cd2a-412c-8f4e-d51cb409dc63",
  "IsCustomNode": true,
  "Category": "archilab.Revit.Tags",
  "Description": "This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. ",
  "Name": "Create Annotation Tag",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_tagLocations",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "8f3b379eeaca4346805cf18b97c1e713",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a560a58f437547d9b5bffdaf526b0e15",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_tagType",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "7707d45dedf0425595575c0db45709e1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d7a5a5a771f74a95bbb03d61b7fc64df",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_elements",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "476be2641cf246d58c20c09d0d471cf6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e16d9fbe7fa64e06b18e30d448cd97d6",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_views",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "a1aae2c57b1449928edf4c988e63b9db",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2c003308455143fab1b976e50e866ba3",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "Symbol": "_tag",
      "Id": "7f5266beff454146857f3cc41c233699",
      "Inputs": [
        {
          "Id": "1bd469274fc64a59ad55d24648d50b7f",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright(c) 2015, Konrad K Sobon\n# @arch_laboratory, http://archi-lab.net\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Import Element wrapper extension methods\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Import geometry conversion extension methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nimport sys\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\nsys.path.append(pyt_path)\n\n#The inputs to this node will be stored as a list in the IN variable.\ndataEnteringNode = IN\n\nlocationPts = UnwrapElement(IN[0])\ntagType = UnwrapElement(IN[1])\nelements = UnwrapElement(IN[2])\n\nif IN[4] != None:\n\tlink = UnwrapElement(IN[4])\nelse:\n\tlink = None\n\t\nRunIt = IN[5]\n\nif isinstance(IN[3], list):\n\tviews = [UnwrapElement(i) for i in IN[3]]\nelse:\n\tviews = UnwrapElement(IN[3])\n\ndef toRvtPoint(point):\n\treturn point.ToXyz()\n\ndef toRvtId(_id):\n\tif isinstance(_id, int) or isinstance(_id, str):\n\t\tid = ElementId(int(_id))\n\t\treturn id\n\telif isinstance(_id, ElementId):\n\t\treturn _id\n\ndef GetUVPoint(pt):\n\tif type(pt) == Autodesk.DesignScript.Geometry.Point:\n\t\treturn Autodesk.Revit.DB.UV(pt.X, pt.Y)\n\telif type(pt) == Autodesk.DesignScript.Geometry.UV:\n\t\treturn Autodesk.Revit.DB.UV(pt.U, pt.V)\n\ndef CreateSpaceTag(space, uv, view):\n\tdoc = DocumentManager.Instance.CurrentDBDocument\n\treturn doc.Create.NewSpaceTag(space, uv, view)\n\ntagTypeId = toRvtId(tagType.Id)\n\ntry:\n\terrorReport = None\n\tif RunIt:\n\t\tif tagType.Category.Name == \"Room Tags\":\n\t\t\tTransactionManager.Instance.EnsureInTransaction(doc)\n\t\t\troomTags = []\n\t\t\tif isinstance(views, list):\n\t\t\t\tfor i, j, k in zip(elements, views, locationPts):\n\t\t\t\t\troomId = LinkElementId(i.Id)\n\t\t\t\t\tlocation = Autodesk.Revit.DB.UV(toRvtPoint(k).X, toRvtPoint(k).Y)\n\t\t\t\t\troomTag = doc.Create.NewRoomTag(roomId, location, j.Id)\n\t\t\t\t\troomTag.RoomTagType = tagType\n\t\t\t\t\troomTags.append(roomTag)\n\t\t\telse:\n\t\t\t\tfor i, j in zip(elements, locationPts):\n\t\t\t\t\tif link != None:\n\t\t\t\t\t\troomId = LinkElementId(link.Id, i.Id)\n\t\t\t\t\telse:\n\t\t\t\t\t\troomId = LinkElementId(i.Id)\n\t\t\t\t\tlocation = Autodesk.Revit.DB.UV(toRvtPoint(j).X, toRvtPoint(j).Y)\n\t\t\t\t\troomTag = doc.Create.NewRoomTag(roomId, location, views.Id)\n\t\t\t\t\troomTag.RoomTagType = tagType\n\t\t\t\t\troomTags.append(roomTag)\n\t\t\tTransactionManager.Instance.TransactionTaskDone()\n\t\t\tresult = roomTags\n\t\telif tagType.Category.Name == \"Space Tags\":\n\t\t\tTransactionManager.Instance.EnsureInTransaction(doc)\n\t\t\troomTags = []\n\t\t\tif isinstance(views, list):\n\t\t\t\tfor i, j, k in zip(elements, views, locationPts):\n\t\t\t\t\tuv = GetUVPoint(k)\n\t\t\t\t\tspaceTag = CreateSpaceTag(i, uv, j)\n\t\t\t\t\tspaceTag.SpaceTagType = tagType\n\t\t\t\t\troomTags.append(spaceTag)\n\t\t\telse:\n\t\t\t\tfor i, j in zip(elements, locationPts):\n\t\t\t\t\tuv = GetUVPoint(j)\n\t\t\t\t\tspaceTag = CreateSpaceTag(i, uv, views)\n\t\t\t\t\tspaceTag.SpaceTagType = tagType\n\t\t\t\t\troomTags.append(spaceTag)\n\t\t\tTransactionManager.Instance.TransactionTaskDone()\n\t\t\tresult = roomTags\n\t\telse:\n\t\t\tTransactionManager.Instance.EnsureInTransaction(doc)\n\t\t\ttags = []\n\t\t\tif isinstance(views, list):\n\t\t\t\tfor i,j,k in zip(elements, views, locationPts):\n\t\t\t\t\tlocation = toRvtPoint(k)\n\t\t\t\t\ttag = doc.Create.NewTag(j, i, False, TagMode.TM_ADDBY_CATEGORY, TagOrientation.Horizontal, location)\n\t\t\t\t\ttag.ChangeTypeId(tagTypeId)\n\t\t\t\t\ttags.append(tag)\n\t\t\telse:\n\t\t\t\tfor i, j in zip(elements, locationPts):\n\t\t\t\t\tlocation = toRvtPoint(j)\n\t\t\t\t\ttag = doc.Create.NewTag(views, i, False, TagMode.TM_ADDBY_CATEGORY, TagOrientation.Horizontal, location)\n\t\t\t\t\ttag.ChangeTypeId(tagTypeId)\n\t\t\t\t\ttags.append(tag)\n\t\t\tTransactionManager.Instance.TransactionTaskDone()\n\t\t\tresult = tags\n\telse:\n\t\tresult = \"RunIt is set to False.\"\nexcept:\n\t# if error accurs anywhere in the process catch it\n\timport traceback\n\terrorReport = traceback.format_exc()\n\n#Assign your output to the OUT variable\nif errorReport == None:\n\tOUT = result\nelse:\n\tOUT = errorReport",
      "VariableInputPorts": true,
      "Id": "3cc76743a46349bf9ceca5aa76763828",
      "Inputs": [
        {
          "Id": "93dfe31a3f4346e2b140e41306906b58",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "975aa3e9e2114d57bdbe1ce52815078d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3d1f6e9091247359f35a618e24323d0",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc6003d070fe49c3b941d4e749499f30",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61c1eadad9dc407f8d5d51b22934220a",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e9df75868c34d1aa2579ddd7407409c",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51f61e2d127f4492a784139b6ae846fe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_linkInstance",
        "TypeName": "var",
        "TypeRank": 0,
        "DefaultValue": "null",
        "Description": ""
      },
      "Id": "039657d0d1f740c7a491b1914833a669",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a5211e4eb9cf4f4da7c0a467862e3020",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "_runIt",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": ""
      },
      "Id": "f7a7e3af854c4612aa99ddd73c7fd580",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2e6d702ce05f49989aae2492264a1e1a",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "a560a58f437547d9b5bffdaf526b0e15",
      "End": "93dfe31a3f4346e2b140e41306906b58",
      "Id": "c7cd72fb24034cdc8710af6128873f4c"
    },
    {
      "Start": "d7a5a5a771f74a95bbb03d61b7fc64df",
      "End": "975aa3e9e2114d57bdbe1ce52815078d",
      "Id": "b0dadae3e8ee40beaa12b4d20d1de7c9"
    },
    {
      "Start": "e16d9fbe7fa64e06b18e30d448cd97d6",
      "End": "e3d1f6e9091247359f35a618e24323d0",
      "Id": "eb7ecd7609944dffb9145903d38a7807"
    },
    {
      "Start": "2c003308455143fab1b976e50e866ba3",
      "End": "fc6003d070fe49c3b941d4e749499f30",
      "Id": "1eede049ad234cd89a707762faf2ccbf"
    },
    {
      "Start": "51f61e2d127f4492a784139b6ae846fe",
      "End": "1bd469274fc64a59ad55d24648d50b7f",
      "Id": "7bb9f4a7133546c48237a6c7f97e1258"
    },
    {
      "Start": "a5211e4eb9cf4f4da7c0a467862e3020",
      "End": "61c1eadad9dc407f8d5d51b22934220a",
      "Id": "302146bd8f3547da933253233d5960c1"
    },
    {
      "Start": "2e6d702ce05f49989aae2492264a1e1a",
      "End": "1e9df75868c34d1aa2579ddd7407409c",
      "Id": "b2ef0937ac654379bc85aff24c4264a1"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.2.1.5175",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "8f3b379eeaca4346805cf18b97c1e713",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 0.0,
        "Y": 0.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "7707d45dedf0425595575c0db45709e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3.14451260185012,
        "Y": 59.8573054136284
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "476be2641cf246d58c20c09d0d471cf6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3.14451260185024,
        "Y": 120.76278169454
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "a1aae2c57b1449928edf4c988e63b9db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5.4734557374469,
        "Y": 180.146682764117
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "7f5266beff454146857f3cc41c233699",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 402.37468047358,
        "Y": 57.1177504933909
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "3cc76743a46349bf9ceca5aa76763828",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 241.011351454361,
        "Y": 58.7448653945481
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "039657d0d1f740c7a491b1914833a669",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -115.329460074875,
        "Y": 244.303367054086
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "f7a7e3af854c4612aa99ddd73c7fd580",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -75.2016858673784,
        "Y": 307.068620304662
      }
    ],
    "Annotations": [],
    "X": 250.504978454036,
    "Y": 188.527718005538,
    "Zoom": 1.42639164656832
  }
}
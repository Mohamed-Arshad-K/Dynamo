<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StructuralDesign.Model</name>
    </assembly>
    <members>
        <member name="T:StructuralDesign.Model.AnalyticalModel.AnalyticalMember">
            <Summary>
             Analytical Member Category
            </Summary>
            
        </member>
        <member name="M:StructuralDesign.Model.AnalyticalModel.AnalyticalMember.ByCurve(Autodesk.DesignScript.Geometry.Curve)">
            <summary>Creates a new instance of an Analytical Member within the project.</summary>
            <param name="curve">Curve</param>
            <returns name="AnalyticalMember">Analytical Member.</returns>
            <search>
            physical, analytical, model, member
            </search>
        </member>
        <member name="M:StructuralDesign.Model.AnalyticalModel.AnalyticalMember.ByCurveAndProperties(Autodesk.DesignScript.Geometry.Curve,Autodesk.Revit.DB.Structure.AnalyticalStructuralRole,Revit.Elements.Material,Revit.Elements.Element,System.Double)">
            <summary>Creates a new instance of an Analytical Member within the project.</summary>
            <param name="curve">Curve</param>
            <param name="structuralRole">Structural Role</param>
            <param name="material">Structural Material</param>
            <param name="type">Structural Type</param>
            <param name="angle">Cross-Section Rotation Angle</param>
            <returns name="AnalyticalMember">Analytical Member</returns>
            <search>
            physical, analytical, model, member
            </search>
        </member>
        <member name="M:StructuralDesign.Model.AnalyticalModel.AnalyticalMember.ByElementLocationLine(Revit.Elements.Element,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>Creates a new instance of an Analytical Member within the project.</summary>
            <param name="element">Physical Member</param>
            <param name="inheritProperties">Bool</param>
            <param name="addAssociation">Bool</param>
            <returns name="AnalyticalMember">Analytical Member</returns>
            <search>
            physical, analytical, model, member
            </search>
        </member>
        <member name="M:StructuralDesign.Model.AnalyticalModel.AnalyticalMember.AssociateElement(Revit.Elements.Element,Revit.Elements.Element,System.Boolean)">
            <summary>Adds a new association between an analytical element and a physical element.</summary>
            <param name="analyticalMember">Analytical Member</param>
            <param name="physicalMember">Physical Member</param>
            <param name="editExistingAssociation">Bool</param>
            <returns name="Result">Bool</returns>
            <search>
            physical, analytical, model, member, association
            </search>
        </member>
        <member name="M:StructuralDesign.Model.AnalyticalModel.AnalyticalMember.SetStructuralRole(Revit.Elements.Element,Autodesk.Revit.DB.Structure.AnalyticalStructuralRole)">
            <summary>Sets Structural Role to Analytical Member.</summary>
            <param name="analiticalMember">Analytical Member</param>
            <param name="structuralRole">Structural Member Role</param>
            <returns name="Result">Analytical Member</returns>
            <search>
            physical, analytical, model, member, structural, role 
            </search>
        </member>
        <member name="M:StructuralDesign.Model.AnalyticalModel.AnalyticalMember.SetSectionType(Revit.Elements.Element,Revit.Elements.Element)">
            <summary>Sets Structural Type to Analytical Member.</summary>
            <param name="analiticalMember">Analytical Member</param>
            <param name="type">Structural Member Role</param>
            <returns name="Result">Analytical Member</returns>
            <search>
            physical, analytical, model, member, structural, type 
            </search>
        </member>
        <member name="M:StructuralDesign.Model.AnalyticalModel.AnalyticalMember.SetRotation(Revit.Elements.Element,System.Double)">
            <summary>Sets cross-section rotation angle to Analytical Member.</summary>
            <param name="analiticalMember">Analytical Member</param>
            <param name="angle">Cross-Section Rotation Angle</param>
            <returns name="Result">Analytical Member</returns>
            <search>
            physical, analytical, model, member, structural, angle, rotation 
            </search>
        </member>
        <member name="M:StructuralDesign.Model.AnalyticalModel.AnalyticalMember.SetMaterial(Revit.Elements.Element,Revit.Elements.Material)">
            <summary>Sets structural material to Analytical Member.</summary>
            <param name="analiticalMember">Analytical Member</param>
            <param name="material">Structural Material</param>
            <returns name="Result">Analytical Member</returns>
            <search>
            physical, analytical, model, member, structural, material 
            </search>
        </member>
        <member name="M:StructuralDesign.Model.AnalyticalModel.AnalyticalMember.GetAssociatedElement(Revit.Elements.Element)">
            <summary>Returns an associated element.</summary>
            <param name="element">Analytical/Physical Member</param>
            <returns name="Element">Analytical/Physical Member</returns>
            <search>
            physical, analytical, model, member, associated
            </search>
        </member>
        <member name="T:StructuralDesign.Model.AnalyticalToPhysicalAssociation">
            <Summary>
             Analytical Member Category
            </Summary>
            
        </member>
        <member name="M:StructuralDesign.Model.AnalyticalToPhysicalAssociation.AssociatedElement(Revit.Elements.Element)">
            <summary>Returns the element which is in association with the given element.</summary>
            <param name="element">Structural Model Element.</param>
            <returns name="Element">Associated Element.</returns>
            <search>
            physical, analytical, model
            </search>
        </member>
        <member name="T:StructuralDesign.Model.Default">
            <Summary>
             Default Values
            </Summary>
        </member>
        <member name="M:StructuralDesign.Model.Default.SetValue">
            <summary>null</summary>
        </member>
        <member name="T:StructuralDesign.Model.Frame">
            <Summary>
             Frame Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Model.Frame.XBracings(System.Collections.Generic.List{System.Collections.Generic.List{System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Point}}},System.Collections.Generic.List{System.Int32})">
            <summary>Creates X-bracings.</summary>
            <param name="points">Element end points.</param>
            <param name="zones">Frame zones.</param>
            <returns name="XBracings">List of X-Bracings.</returns>
            <search>
            frame, bracing
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Frame.VBracings(System.Collections.Generic.List{System.Collections.Generic.List{System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Point}}},System.Collections.Generic.List{System.Int32})">
            <summary>Creates V-bracings.</summary>
            <param name="points">Element end points.</param>
            <param name="zones">Frame zones.</param>
            <returns name="VBracings">List of V-Bracings.</returns>
            <search>
            frame, bracing
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Frame.SideRailsEavesBeams(System.Collections.Generic.List{System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Curve}},System.Collections.Generic.List{System.Double})">
            <summary>Creates side rails and eaves beams between columns.</summary>
            <param name="columns">Columns.</param>
            <param name="heights">Z coordinate of beam ends.</param>
            <returns name="Beams">List of Beams.</returns>
            <search>
            frame, side, rails, eaves, beams
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Frame.Purlins(System.Collections.Generic.List{System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Curve}},System.Int32,System.Double,System.Double)">
            <summary>Creates purlins between rafters.</summary>
            <param name="rafters">Rafters.</param>
            <param name="number">Number of purlins.</param>
            <param name="dp1">Start offset.</param>
            <param name="dp2">End offset.</param>
            <returns name="Purlins">List of Purlins.</returns>
            <search>
            frame, purlin
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Frame.Copy(System.Collections.Generic.List{System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Curve}},System.Boolean,System.Int32,System.Double,System.Collections.Generic.List{System.Double},System.Boolean)">
            <summary>Copy 2D frame.</summary>
            <param name="frame2DGeometry">2D Frame geometry. Input value should have the following data structure: Curve[Column[], Beam[]]</param>
            <param name="withEqualSpacing">Spacing type. True = equal spacing, False = varying spacing.</param>
            <param name="numberOfTimes">Number of times a 2D frame should be copied when spacing between frames is equal.</param>
            <param name="spacing">Spacing value between frame when distance between them is equal.</param>
            <param name="varyingSpacing">Varying spacing. Default value: [6, 5, 4, 5, 6]</param>
            <param name="flip">Toggles the frame orientation.</param>
            <returns name="2DFrames">List of 2D Frames</returns>
            <search>
            frame, copy
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Frame.ByWidthHeightAngles(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double,System.Double,System.Double)">
            <summary>Creates a 2D frame.</summary>
            <param name="insertionPoint">Insertion Point. Default value: (0, 0, 0)</param>
            <param name="vector">Vector in the 2D frame plane. Default value: (1, 0, 0)</param>
            <param name="width">Width</param>
            <param name="height">Column height</param>
            <param name="angle">Beam angle. Angle has to be greater than or equal 0 and less or equal than 60 degrees.</param>
            <returns name="2DFrame">2D Frame</returns>
            <returns name="Columns">Columns</returns>
            <returns name="Beams">Beams</returns>
            <search>
            frame
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Frame.CalculateHeight2(System.Double,System.Double,System.Double)">
            <summary>Calculates height2 for the Frame.ByWidthHeightAngles method.</summary>
        </member>
        <member name="M:StructuralDesign.Model.Frame.ByWidthHeights(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double,System.Double,System.Double)">
            <summary>Creates a 2D frame.</summary>
            <param name="insertionPoint">Insertion Point. Default value: (0, 0, 0)</param>
            <param name="vector">Vector in the 2D frame plane. Default value: (1, 0, 0)</param>
            <param name="width">Width</param>
            <param name="height1">Column height</param>
            <param name="height2">Roof height</param>
            <returns name="2DFrame">2D Frame</returns>
            <returns name="Columns">Columns</returns>
            <returns name="Beams">Beams</returns>
            <search>
            frame
            </search>
        </member>
        <member name="T:StructuralDesign.Model.Geom.Vector">
            <Summary>
             Vector Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Model.Geom.Vector.ByLine(Autodesk.DesignScript.Geometry.Line)">
            <summary>Creates a vector based on a line.</summary>
            <param name="line">Dynamo line.</param>
            <returns name="Vector">Vector.</returns>
            <search>
            vector, byLine, line 
            </search>
        </member>
        <member name="T:StructuralDesign.Model.Geometry">
            <Summary>
             Geometry Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Model.Geometry.DeleteElement(Revit.Elements.Element)">
            <summary>Deletes an element from the document.</summary>
            <param name="element">The element to delete.</param>
            <search>
            delete 
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.Geometry.CopyElement(Revit.Elements.Element,Autodesk.DesignScript.Geometry.Vector)">
            <summary>Copies an element and places the copy at a location indicated by a given transformation.</summary>
            <param name="element">The element to copy.</param>
            <param name="vector">The translation vector for the new element.</param>
            <returns name="Element">The newly created copied element.</returns>
            <search>
            copy 
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.Geometry.WallOriginLocation(Autodesk.DesignScript.Geometry.Surface)">
            <summary>Checks if a location of the origin is at the top or at the bottom of the wall.</summary>
            <param name="wallFace">Wall face.</param>
            <returns name="originLocation">Origin location.</returns>
            <search>
            point, origin, location, wall, face
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.Geometry.SurfacesFromFace(Autodesk.Revit.DB.Face)">
            <summary>Gets surfaces from a face.</summary>
            <param name="face">Revit face.</param>
            <returns name="surfaces">Dynamo surfaces.</returns>
            <search>
            face, convert, surface
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.Geometry.ViewType(Revit.Elements.Views.View)">
            <summary>Gets the type of the view.</summary>
            <param name="view">Revit view.</param>
            <returns name="type">View Type.</returns>
            <search>
            view, type
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.Geometry.Parameters(Revit.Elements.Element)">
            <summary>Get a list of parameters of the element</summary>
            <param name="element">Element</param>
            <returns name="Parameters">List of parameters</returns>
            <search>
            element, parameters
            </search>
        </member>
        <member name="T:StructuralDesign.Model.LoadCombinations.Loads">
            <Summary>
             Load Combinations Category
            </Summary>
            
        </member>
        <member name="M:StructuralDesign.Model.LoadCombinations.Loads.LoadComponent(Revit.Elements.Element,System.Double)">
             <summary>Creates a new instance of a Load Component.</summary>
             <param name="loadCaseOrCombination">Load Case or Load CombinationI.</param>
             <param name="factor">Factor.</param>
             <returns name="LoadComponent">Load Component.</returns>
             <search>
             load, case, combination, component, analytical, model  
             </search>
            
        </member>
        <member name="M:StructuralDesign.Model.LoadCombinations.Loads.LoadCombination(System.String,System.String,System.String,System.Collections.Generic.List{Autodesk.Revit.DB.Structure.LoadComponent})">
            <summary>Creates a new Load Combination.</summary>
            <param name="name">The name of the load combination.</param>
            <param name="type">The type of the load combination.</param>
            <param name="state">The state of the load combination.</param>
            <param name="components">A collection of the load combination components.</param>
            <returns name="LoadCombination">Load Combination.</returns>
            <search>
            load, combination, analytical, model  
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.LoadCombinations.Loads.LoadCase(System.String,Revit.Elements.Element,System.String)">
            <summary>Creates a new Load Case.</summary>
            <param name="name">The name of the load case.</param>
            <param name="nature">The load nature.</param>
            <param name="loadCaseCategory">The predefined load case category.</param>
            <returns name="LoadCase">Load Case.</returns>
            <search>
            load, case, analytical, model  
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.LoadCombinations.Loads.LoadUsage(System.String)">
            <summary>Creates a new Load Usage.</summary>
            <param name="name">The name of the load usage.</param>
            <returns name="LoadUsage">Load Usage.</returns>
            <search>
            load, usage, combination, analytical, model  
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.LoadCombinations.Loads.LoadCombinationComponents(Revit.Elements.Element,System.Collections.Generic.IList{Autodesk.Revit.DB.Structure.LoadComponent})">
            <summary>Sets a collection of the load combination components.</summary>
            <param name="loadCombination">Load Combination.</param>
            <param name="components">A collection of the load combination components.</param>
            <returns name="LoadCombination">Load Combination.</returns>
            <search>
            load, case, combination, component, analytical, model  
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.LoadCombinations.Loads.LoadCombinationUsage(Revit.Elements.Element,System.Collections.Generic.List{Autodesk.Revit.DB.ElementId})">
            <summary>Sets a collection of the load combination usage IDs.</summary>
            <param name="loadCombination">Load Combination.</param>
            <param name="usageIds">A collection of the load combination usage IDs.</param>
            <returns name="LoadCombination">Load Combination.</returns>
            <search>
            load, case, combination, usage, analytical, model  
            </search>
            
        </member>
        <member name="T:StructuralDesign.Model.Load.Loads">
            <Summary>
             Loads Category
            </Summary>
            
        </member>
        <member name="M:StructuralDesign.Model.Load.Loads.HostedPointLoad(Revit.Elements.Element,Revit.Elements.Element,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector,System.String,System.String,Revit.Elements.Element)">
            <summary>Creates a new hosted point load within the project.</summary>
            <param name="hostElement">The AnalyticalModelStick (Analytical Beam, Analytical Brace, Analytical Column) host element for the Point Load.</param>
            <param name="loadCase">The load case for the load.</param>
            <param name="forceVector">The applied 3d force vector. Default value: (0, 0, -1000N)</param>
            <param name="momentVector">The applied 3d force vector. </param>
            <param name="selector">The start or end point of the Analytical stick element. Three options are possible: "StartOrBase Start", "EndOrTop". Default value: "StartOrBase" </param>
            <param name="orientTo">For hosted load only LoadOrientTo.Project and LoadOrientTo.HostLocalCoordinateSystem are permitted. For non-hosted load only LoadOrientTo.Project and LoadOrientTo.WorkPlane are permitted. To determine if load is hosted use the Loads.IsHosted node.</param>
            <param name="pointLoadType">The symbol of the Point Load.</param>
            <returns name="PointLoad">Hosted point load.</returns>
            <search>
            point, load, analytical, model  
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.Load.Loads.HostedAreaLoad(Revit.Elements.Element,Revit.Elements.Element,Autodesk.DesignScript.Geometry.Vector,System.String,System.Boolean,Revit.Elements.Element)">
            <summary>Creates a new hosted area load within the project.</summary>
            <param name="hostElement">The analytical surface host element (Analytical Floor, Analytical Foundation Slab or Analytical Wall) for the area Load.</param>
            <param name="loadCase">The load case for the load.</param>
            <param name="forceVector">The force vector applied to the 1st reference point of the area load. Default value: (0, 0, -1000N)</param>
            <param name="orientTo">For hosted load only LoadOrientTo.Project and LoadOrientTo.HostLocalCoordinateSystem are permitted. For non-hosted load only LoadOrientTo.Project and LoadOrientTo.WorkPlane are permitted. To determine if load is hosted use the Loads.IsHosted node.</param>
            <param name="isProjected">Specifies if the load is projected.</param>
            <param name="areaLoadType">The symbol of the Area Load.</param>
            <returns name="AreaLoad">Hosted area load.</returns>
            <search>
            area, load, analytical, model  
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.Load.Loads.HostedLineLoad(Revit.Elements.Element,Revit.Elements.Element,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector,System.String,System.Boolean,Revit.Elements.Element)">
            <summary>Creates a new hosted line load within the project.</summary>
            <param name="hostElement">The analytical model stick host element for the Line Load. Could be one of beam, brace or column type.</param>
            <param name="loadCase">The load case for the load.</param>
            <param name="forceVector1">The applied 3d force vector. Default value: (0, 0, -1000N)</param>
            <param name="forceVector2">The applied 3d force vector. Default value: (0, 0, -1000N)</param>
            <param name="momentVector1">The applied 3d force vector. Default value: (0, 0, 0)</param>
            <param name="momentVector2">The applied 3d force vector. Default value: (0, 0, 0)</param>
            <param name="orientTo">For hosted load only LoadOrientTo.Project and LoadOrientTo.HostLocalCoordinateSystem are permitted. For non-hosted load only LoadOrientTo.Project and LoadOrientTo.WorkPlane are permitted. To determine if load is hosted use the Loads.IsHosted node.</param>
            <param name="isProjected">Specifies if the load is projected.</param>
            <param name="lineLoadType">The symbol of the LineLoad.</param>
            <returns name="LineLoad">Hosted line load.</returns>
            <search>
            line, load, analytical, model  
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.Load.Loads.IsLineLoadUniform(Revit.Elements.Element)">
            <summary>Indicates if the load is uniform.</summary>
            <param name="lineLoad">Line load.</param>
            <returns name="Uniform">Returns true if the line load is uniform, false otherwise.</returns>
            <search>
            line, load, analytical, model, uniform
            </search>
            
        </member>
        <member name="M:StructuralDesign.Model.Load.Loads.IsLoadHosted(Revit.Elements.Element)">
            <summary>Indicates if the Load is hosted or non-hosted.</summary>
            <param name="load">Structural load.</param>
            <returns name="Hosted">True is returned when load is hosted. False is returned load is non-hosted.</returns>
            <search>
            line, load, analytical, model, hosted
            </search>
            
        </member>
        <member name="T:StructuralDesign.Model.Opening.Geometry">
            <Summary>
             Openings Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Model.Opening.Geometry.WindowDoorOpeningCharacteristics(Revit.Elements.Element,System.Collections.Generic.IList{System.String},System.String)">
            <summary>Get window and door opening characteristics.</summary>
            <param name="opening">Revit opening (door or window).</param>
            <param name="dimensionParamNames">Names of Revit opening dimensions parameters. Default value: ["Width", "Height"]</param>
            <param name="hostThicknessParamName">Name of opening host read-only parameter with its thickness. Default value: "Width" </param>
            <returns name="Curves">Curves from which an opening is created.</returns>
            <returns name="Plane">Opening plane.</returns>
            <returns name="Host">Opening host.</returns>
            <returns name="HostWidth">Opening host width.</returns>
            <returns name="Normal">Vector normal to opening plane.</returns>
            <returns name="Category">Opening category.</returns>
            <returns name="Width">Opening width.</returns>
            <returns name="Height">Opening height.</returns>
            <returns name="Points">Opening corner points.</returns>
            <search>
            opening 
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Opening.Geometry.ConcreteBeamColumnCharacteristics(Revit.Elements.Element)">
            <summary>Concrete Beam and Column Characteristics.</summary>
            <search>
            concrete, beam, column
            </search>
        </member>
        <member name="T:StructuralDesign.Model.Processing">
            <Summary>
             Processing Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Model.Processing.OriginLocation(Autodesk.DesignScript.Geometry.Surface)">
            <summary>Checks if the location of the origin is at the top or at the bottom.</summary>
            <param name="wallFace">Wall face.</param>
            <returns name="originLocation">Origin location.</returns>
            <search>
            point, origin, location, wall, face
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Processing.SurfacesFromFace(Autodesk.Revit.DB.Face)">
            <summary>Get surfaces from a face.</summary>
            <param name="face">Revit face.</param>
            <returns name="surfaces">Dynamo surfaces.</returns>
            <search>
            face, convert, surface
            </search>
            
        </member>
        <member name="T:StructuralDesign.Model.RevitFrame.RevitFrame">
            <Summary>
             RevitFrame Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Model.RevitFrame.RevitFrame.DisallowJoinAtEnd(Revit.Elements.StructuralFraming,System.Int32,System.Boolean)">
            <summary>Sets the indicated end of the framing element to be disallowed or allowed to join to others.</summary>
            <param name="structuralFraming">Structural framing element.</param>
            <param name="end">The index of the end (0 for the start, 1 for the end).</param>
            <param name="allow">True = Allow join at end; False = Disallow join at end</param>
            <returns name="StructuralFraming">Structural Framing</returns>
            <search>
            revit, frame, allow, joint, ends, end 
            </search>
        </member>
        <member name="M:StructuralDesign.Model.RevitFrame.RevitFrame.FlipEnds(Revit.Elements.StructuralFraming)">
            <summary>Flips the ends of the structural framing element. Only ends of non-concrete structural framing element like beam and brace can be flipped and only in case if it is a line, arc or ellipse element.</summary>
            <param name="structuralFraming">Structural framing element.</param>
            <returns name="StructuralFraming">Structural Framing</returns>
            <search>
            revit, frame, flip, ends
            </search>
        </member>
        <member name="M:StructuralDesign.Model.RevitFrame.RevitFrame.CanFlipEnds(Revit.Elements.StructuralFraming)">
            <summary>Determines if the ends of the given framing element can be flipped.</summary>
            <param name="structuralFraming">Structural framing element.</param>
            <returns name="Boolean">True for non-concrete line, arc or ellipse framing element, false otherwise. </returns>
            <search>
            revit, frame, can, flip, ends
            </search>
        </member>
        <member name="T:StructuralDesign.Model.Selection">
            <Summary>
             Selection Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Model.Selection.ActiveSelection(System.Boolean)">
            <summary>Get active selection from the model.</summary>
            <param name="refresh">Refresh selection.</param>
            <returns name="Elements">Selected elements.</returns>
            <search>
            rebar 
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Selection.ActiveSelectionOfCategory(System.Collections.Generic.IList{Revit.Elements.Category},System.Boolean)">
            <summary>Get active selection of the defined category.</summary>
            <param name="category">Single category or a list of categories.</param>
            <param name="refresh">Refresh selection.</param>
            <returns name="Elements">Selected elements of the category.</returns>
            <search>
            rebar 
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Selection.PickElementsByRectangle(System.Boolean)">
            <summary>Prompts the user to select multiple elements by drawing a rectangle while showing a custom status prompt string.</summary>
            <param name="refresh">Refresh Selection</param>
        </member>
        <member name="M:StructuralDesign.Model.Selection.PickElements(System.String,System.Boolean)">
            <summary>Prompts the user to select multiple elements while showing a custom status prompt string.</summary>
            <param name="statusPrompt">The message shown on the status bar.</param>
            <param name="refresh">Refresh selection.</param>
            <returns name="Elements">Selected elements.</returns>
            <search>
            selection 
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Selection.PickFaces(System.String,System.Boolean)">
            <summary>Prompts the user to select multiple faces while showing a custom status prompt string.</summary>
            <param name="statusPrompt">The message shown on the status bar.</param>
            <param name="refresh">Refresh selection.</param>
            <returns name="Faces">Selected elements.</returns>
            <search>
            selection 
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Selection.PickObjects(System.Int32,System.String,System.Boolean)">
            <summary>Prompts the user to select multiple objects while showing a custom status prompt string.</summary>
            <param name="objectType">Specifies the type of object to be selected. 0-Nothing, 1-Element, 2-PointOnElement, 3-Edge, 4-Face, 5-LinkedElement, 6-Subelement</param>
            <param name="statusPrompt">The message shown on the status bar.</param>
            <param name="refresh">Refresh selection.</param>
            <returns name="Elements">Selected elements.</returns>
            <search>
            selection 
            </search>
        </member>
        <member name="M:StructuralDesign.Model.Selection.PickObjectsOfCategory(System.Collections.Generic.IList{Revit.Elements.Category},System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>Prompts the user to select multiple objects of the defined categories while showing a custom status prompt string.</summary>
            <param name="category">Single category or a list of categories.</param>
            <param name="objectType">Specifies the type of object to be selected. 0-Nothing, 1-Element, 2-PointOnElement, 3-Edge, 4-Face, 5-LinkedElement, 6-Subelement</param>
            <param name="statusPrompt">The message shown on the status bar.</param>
            <param name="preselection">Take into account the initially selected set of objects.</param>
            <param name="refresh">Refresh selection.</param>
            <returns name="Elements">Selected elements.</returns>
            <search>
            selection 
            </search>
        </member>
        <member name="T:StructuralDesign.Model.SpatialTrussType1.Truss">
            <Summary>
             Spatial Truss Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Model.SpatialTrussType1.Truss.SpatialType1ByFourCurves(Autodesk.DesignScript.Geometry.Curve[],System.Int32,System.Int32,System.Double)">
            <summary>Creates a spatial truss by 4 curves.</summary>
            <param name="contourCurves">A list of 4 curves defining a closed boundary (contour curves)</param>
            <param name="divisionA">Division A</param>
            <param name="divisionB">Division B</param>
            <param name="depth">Depth</param>
            <search>
            spatial, truss, curves
            </search>
        </member>
        <member name="M:StructuralDesign.Model.SpatialTrussType1.Truss.SpatialType1ByTwoCurves(Autodesk.DesignScript.Geometry.Curve[],System.Int32,System.Int32,System.Double)">
            <summary>Creates a spatial truss by two curves.</summary>
            <param name="contourCurves">A list of 2 curves laying opposite themselves.</param>
            <param name="divisionA">Division A</param>
            <param name="divisionB">Division B</param>
            <param name="depth">Depth</param>
            <search>
            spatial, truss, curves
            </search>
        </member>
        <member name="M:StructuralDesign.Model.SpatialTrussType1.Truss.SpatialType1ByPoints(Autodesk.DesignScript.Geometry.Point[],System.Int32,System.Int32,System.Double)">
            <summary>Creates a spatial truss by points.</summary>
            <param name="contourPoints">A list of 4 points defining boundary (corners points). Default value: [(0, 0, 6), (0, 10, 6), (10, 10, 6), (10, 0, 6)]</param>
            <param name="divisionA">Division A</param>
            <param name="divisionB">Division B</param>
            <param name="depth">Depth</param>
            <search>
            spatial, truss, points
            </search>
        </member>
        <member name="T:StructuralDesign.Model.WarrenTruss.Truss">
            <Summary>
             Spatial Truss Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Model.WarrenTruss.Truss.Warren(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Double,System.Double)">
            <summary>Creates a Warren truss.</summary>
            <param name="insertionPoint">Insertion Point. Default value: (0, 0, 0)</param>
            <param name="vector">Vector in the 2D frame plane. Default value: (1, 0, 0)</param>
            <param name="length">Length</param>
            <param name="startHeight">Start Height</param>
            <param name="endHeight">End Height</param>
            <param name="division">Division</param>
            <param name="posts">True = create posts, False = don't add posts</param>
            <param name="firstDiagonalUp">Orientation of the first diagonal</param>
            <param name="removeTrianglesAtEnds">Removes triangles at the truss ends</param>
            <param name="d1">Upper chord height</param>
            <param name="d2">Bottom chord height</param>
            <search>
            Warren, truss
            </search>
        </member>
    </members>
</doc>

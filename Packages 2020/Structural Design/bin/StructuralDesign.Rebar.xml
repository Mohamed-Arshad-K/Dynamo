<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StructuralDesign.Rebar</name>
    </assembly>
    <members>
        <member name="T:StructuralDesign.Rebar.Annotation.Annotation">
            <Summary>
             Annotation Category
            </Summary>
        </member>
        <member name="T:StructuralDesign.Rebar.AreaReinforcement.AreaReinforcement">
            <Summary>
             AreaReinforcement Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Rebar.AreaReinforcement.AreaReinforcement.CreateBasedOnHost(Revit.Elements.Element,Autodesk.DesignScript.Geometry.Vector,System.Boolean,Revit.Elements.Element,System.Double,System.Double,Revit.Elements.Element,System.Double,System.Double,Revit.Elements.Element,System.Double,System.Double,Revit.Elements.Element,System.Double,System.Double)">
            <summary>Creates a new Area Reinforcement object based on a host boundary.</summary>
            <param name="hostElement">The element that will host the AreaReinforcement. The host can be a Structural Floor, Structural Wall, Structural Slab, or a Part created from a structural layer belonging to one of those element types.</param>
            <param name="majorDirection">A vector to define the major direction of the AreaReinforcement.</param>
            <param name="layoutRule">Toggle to set Layout Rule: True = Maximum Spacing, False = Fixed Number.</param>
            <param name="topMajorBarType">Top Major Bar Type. If it is not set then Top Major Direction is not created.</param>
            <param name="topMinorBarType">Top Minor Bar Type. If it is not set then Top Minor Direction is not created.</param>
            <param name="bottomMajorBarType">Bottom Major Bar Type. If it is not set then Bottom Major Direction is not created.</param>
            <param name="bottomMinorBarType">Bottom Minor Bar Type. If it is not set then Bottom Minor Direction is not created.</param>
            <param name="topMajorSpacing">Top Major Spacing.</param>
            <param name="topMinorSpacing">Top Minor Spacing.</param>
            <param name="bottomMajorSpacing">Bottom Major Spacing.</param>
            <param name="bottomMinorSpacing">Bottom Minor Spacing.</param>
            <param name="topMajorNumberLines">Top Major Number Of Lines.</param>
            <param name="topMinorNumberLines">Top Minor Number Of Lines.</param>        
            <param name="bottomMajorNumberLines">Bottom Major Number Of Lines.</param>
            <param name="bottomMinorNumberLines">Bottom Minor Number Of Lines.</param>
            <returns name="AreaReinforcement">Area Reinforcement</returns>
            <search>
            rebar, area, reinforcement
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.AreaReinforcement.AreaReinforcement.SetHooks(Revit.Elements.Element,Revit.Elements.Element,System.Boolean,Revit.Elements.Element,System.Boolean,Revit.Elements.Element,System.Boolean,Revit.Elements.Element,System.Boolean)">
            <summary>Sets up hooks of a given Area Reinforcement.</summary>
            <param name="areaReinforcement">Area Reinforcement.</param>
            <param name="topMajorHookType">Top Major Hook Type.</param>
            <param name="topMajorHookOrientation">Toggle to set Top Major Hook Orientation: True = Up, False = Down.</param>
            <param name="topMinorHookType">Top Minor Hook Type.</param>
            <param name="topMinorHookOrientation">Toggle to set Top Minor Hook Orientation: True = Up, False = Down.</param>
            <param name="bottomMajorHookType">Bottom Major Hook Type.</param>
            <param name="bottomMajorHookOrientation">Toggle to set Bottom Major Hook Orientation: True = Up, False = Down.</param>
            <param name="bottomMinorHookType">Bottom Minor Hook Type.</param>
            <param name="bottomMinorHookOrientation">Toggle to set Bottom Minor Hook Orientation: True = Up, False = Down.</param>
            <returns name="AreaReinforcement">Area Reinforcement</returns>
            <search>
            rebar, area, reinforcement
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.AreaReinforcement.AreaReinforcement.RemoveAreaReinforcementSystem(Revit.Elements.Element)">
            <summary>Deletes the specified AreaReinforcement, and converts its RebarInSystem elements to equivalent Rebar elements.</summary>
            <param name="areaReinforcement">An AreaReinforcement element in the document.</param>
            <returns name="Rebars">The list of the newly created Rebar elements.</returns>
            <search>
            rebar, area, reinforcement, remove
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.AreaReinforcement.AreaReinforcement.SetSolidInView(Revit.Elements.Element,Revit.Elements.Views.View3D,System.Boolean)">
            <summary>Sets this Area Reinforcement to be shown solidly in a 3D view.</summary>
            <param name="areaReinforcement">An AreaReinforcement element in the document.</param>
            <param name="view">The 3D view element.</param>
            <param name="solid">True if rebar is shown solidly, false otherwise.</param>
            <returns name="AreaReinforcement">Area Reinforcement</returns>
            <search>
            rebar, area, reinforcement, visibility
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.AreaReinforcement.AreaReinforcement.SetUnobscuredInView(Revit.Elements.Element,Revit.Elements.Views.View,System.Boolean)">
            <summary>Sets this Area Reinforcement to be shown unobscured in a view.</summary>
            <param name="areaReinforcement">An AreaReinforcement element in the document.</param>
            <param name="view">The view element.</param>
            <param name="unobscured">True if rebar is shown unobscured, false otherwise.</param>
            <returns name="AreaReinforcement">Area Reinforcement</returns>
            <search>
            rebar, area, reinforcement, visibility
            </search>
        </member>
        <member name="T:StructuralDesign.Rebar.Create">
            <Summary>
             Create Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Rebar.Create.FromCurve(Autodesk.DesignScript.Geometry.Curve,System.String,Revit.Elements.Element,Revit.Elements.Element,Revit.Elements.Element,System.String,System.String,Revit.Elements.Element,Autodesk.DesignScript.Geometry.Vector)">
            <summary>Creates a new instance of a shape driven Rebar element within the project.</summary>
            <param name="curve">Dynamo curve that define the shape of the rebar curve. It must belong to the plane defined by the normal and origin. Bends and hooks should not be included in the curve definition</param>
            <param name="rebarStyle">The usage of the bar, "standard" or "stirrup/tie"</param>
            <param name="rebarBarType">A RebarBarType element that defines bar diameter, bend radius and material of the rebar.</param>
            <param name="startHookType">A RebarHookType element that defines the hook for the start of the bar. If this parameter is None, it means to create a rebar with no hook.</param>
            <param name="endHookType">A RebarHookType element that defines the hook for the end of the bar. If this parameter is None, it means to create a rebar with no hook.</param>
            <param name="startHookOrientation">Defines the orientation of the hook plane at the start of the rebar with respect to the orientation of the first curve and the plane normal. </param>
            <param name="endHookOrientation">Defines the orientation of the hook plane at the end of the rebar with respect to the orientation of the first curve and the plane normal.</param>
            <param name="hostElement">The element to which the rebar belongs. The element must support rebar hosting.</param>
            <param name="vector">The normal to the plane that the rebar curve lies on.</param>
            <returns name="Rebar">Rebar Element</returns>        
            <search>
            rebar, create
            </search>
            
        </member>
        <member name="M:StructuralDesign.Rebar.Create.FromCurves(System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Curve},System.String,Revit.Elements.Element,Revit.Elements.Element,Revit.Elements.Element,System.String,System.String,Revit.Elements.Element,Autodesk.DesignScript.Geometry.Vector)">
            <summary>Creates a new instance of a shape driven Rebar element within the project.</summary>
            <param name="curves">Dynamo curves that define the shape of the rebar curve. It must belong to the plane defined by the normal and origin. Bends and hooks should not be included in the curve definition</param>
            <param name="rebarStyle">The usage of the bar, "standard" or "stirrup/tie"</param>
            <param name="rebarBarType">A RebarBarType element that defines bar diameter, bend radius and material of the rebar.</param>
            <param name="startHookType">A RebarHookType element that defines the hook for the start of the bar. If this parameter is None, it means to create a rebar with no hook.</param>
            <param name="endHookType">A RebarHookType element that defines the hook for the end of the bar. If this parameter is None, it means to create a rebar with no hook.</param>
            <param name="startHookOrientation">Defines the orientation of the hook plane at the start of the rebar with respect to the orientation of the first curve and the plane normal. </param>
            <param name="endHookOrientation">Defines the orientation of the hook plane at the end of the rebar with respect to the orientation of the first curve and the plane normal.</param>
            <param name="hostElement">The element to which the rebar belongs. The element must support rebar hosting.</param>
            <param name="vector">The normal to the plane that the rebar curve lies on.</param>
            <returns name="Rebar">Rebar Element</returns>        
            <search>
            rebar, create
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Create.FromCurvesAndShape(Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Element,Revit.Elements.Element,Revit.Elements.Element,Revit.Elements.Element,System.String,System.String,Revit.Elements.Element,Autodesk.DesignScript.Geometry.Vector)">
            <summary>Creates a new instance of a shape driven Rebar element within the project. The instance will have the default shape parameters from the RebarShape. If the RebarShapeDefinesHooks flag in ReinforcementSettings has been set to true, then both the curves and hooks must match the RebarShape definition. Otherwise, the hooks can be different than the defaults specified in the RebarShape.</summary>
            <param name="curve">Dynamo curve that define the shape of the rebar curve. It must belong to the plane defined by the normal and origin. Bends and hooks should not be included in the curve definition.</param>
            <param name="rebarShape">A RebarShape element that defines the shape of the rebar.</param>
            <param name="rebarBarType">A RebarBarType element that defines bar diameter, bend radius and material of the rebar.</param>
            <param name="startHookType">A RebarHookType element that defines the hook for the start of the bar. If this parameter is None, it means to create a rebar with no hook.</param>
            <param name="endHookType">A RebarHookType element that defines the hook for the end of the bar. If this parameter is None, it means to create a rebar with no hook.</param>
            <param name="startHookOrientation">Defines the orientation of the hook plane at the start of the rebar with respect to the orientation of the first curve and the plane normal. </param>
            <param name="endHookOrientation">Defines the orientation of the hook plane at the end of the rebar with respect to the orientation of the first curve and the plane normal.</param>
            <param name="hostElement">The element to which the rebar belongs. The element must support rebar hosting.</param>
            <param name="vector">The normal to the plane that the rebar curve lies on.</param>
            <returns name="Rebar">Rebar Element</returns>
            <search>
            rebar, create 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Create.FreeFormRebar(Revit.Elements.Element,Revit.Elements.Element,System.Collections.Generic.IList{System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Curve}})">
            <summary>Creates a free form rebar that will be unconstrained. Constraints can't be added later to this rebar.</summary>
            <param name="rebarBarType">A RebarBarType element that defines bar diameter, bend radius and material of the rebar.</param>
            <param name="hostElement">The element to which the rebar belongs. The element must support rebar hosting.</param>
            <param name="curves">Dynamo curves that define the shape of the rebar.</param>
            <returns name="FreeFormRebar">Free Form Rebar Element</returns>
            <search>
            rebar, create 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Create.SetRebarShapeId(Revit.Elements.Element,Revit.Elements.Element)">
            <summary>Changes the RebarShape element that defines the shape of the rebar. Changing the value of this member causes the Rebar instance to choose values for its shape parameters to preserve its previous shape as closely as possible.</summary>
            <param name="rebar">Rebar Element.</param>
            <param name="rebarShape">Rebar Shape.</param>
            <returns name="Rebar">Rebar Element</returns>
            <search>
            rebar
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Create.SetSolidInView(Revit.Elements.Element,Revit.Elements.Views.View3D,System.Boolean)">
            <summary>Sets this rebar element to be shown solidly in a 3D view.</summary>
            <param name="rebar">Rebar Element.</param>
            <param name="view">The 3D view element.</param>
            <param name="solid">True if rebar is shown solidly, false otherwise.</param>
            <returns name="Rebar">Rebar Element</returns>
            <search>
            rebar, visibility
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Create.SetUnobscuredInView(Revit.Elements.Element,Revit.Elements.Views.View,System.Boolean)">
            <summary>Sets this rebar element to be shown unobscured in a view.</summary>
            <param name="rebar">Rebar Element.</param>
            <param name="view">The view element.</param>
            <param name="unobscured">True if rebar is shown unobscured, false otherwise.</param>
            <returns name="Rebar">Rebar Element</returns>
            <search>
            rebar
            </search>
        </member>
        <member name="T:StructuralDesign.Rebar.Designs">
            <Summary>
             Design Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Rebar.Designs.OpeningStraightRebarCurves(System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Curve},Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double,System.Double,System.String,System.Double,System.Double,System.Boolean)">
            <summary>Opening straight rebar curves.</summary>
            <param name="curves">Opening curves.</param>
            <param name="openingPlane">Opening plane.</param>
            <param name="hostWidth">Opening host width.</param>
            <param name="cover">Host cover.</param>
            <param name="rebarExtension">Straight rebar extension.</param>
            <param name="category">Opening category.</param>
            <param name="rebarDiameter">Straight rebar diameter.</param>
            <param name="stirrupDiameter">Stirrup rebar diameter.</param>
            <param name="twoLayers">Two layers.</param>
            <returns name="Curves">Rebar curves.</returns>
            <returns name="Spacing">Rebar spacing.</returns>
            <returns name="Vector">The normal to the plane that the rebar curve lies on.</returns>
            <search>
            rebar, design, opening 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Designs.OpeningDiagonalRebarCurves(System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Point},Autodesk.DesignScript.Geometry.Plane,System.Double,System.Double,System.Double,System.Double,System.Double,System.String,System.Boolean)">
            <summary>Opening diagonal rebar curves.</summary>
            <param name="points">Opening corner points.</param>
            <param name="openingPlane">Opening plane.</param>
            <param name="length">Diagonal rebar length.</param>
            <param name="spacing">Rebar spacing.</param>
            <param name="cover">Host cover.</param>
            <param name="rebarDiameter">Diagonal rebar diameter.</param>
            <param name="straightRebarDiameter">Straight rebar diameter.</param>
            <param name="category">Opening category.</param>
            <param name="twoLayers">Two layers.</param>
            <returns name="Curves">Rebar curves.</returns>
            <returns name="Spacing">Rebar spacing.</returns>
            <returns name="Vector">The normal to the plane that the rebar curve lies on.</returns>
            <search>
            rebar, design, opening 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Designs.OpeningUShapeCurves(Autodesk.DesignScript.Geometry.Plane,System.Int32,System.Double,System.Double,Autodesk.DesignScript.Geometry.Curve)">
            <summary>U-shape rebar curves.</summary>
            <param name="openingPlane">Opening plane.</param>
            <param name="segmentA">Segment A length.</param>
            <param name="hostWidth">Opening host width.</param>
            <param name="cover">Host cover.</param>
            <param name="openingCurve">Opening curve.</param>
            <returns name="Curves">Rebar curves.</returns>
            <returns name="Vector">The normal to the plane that the rebar curve lies on.</returns>
            <search>
            rebar, design, opening, shape
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Designs.StirrupShapeCurves(Autodesk.DesignScript.Geometry.Surface,System.Int32,System.Int32)">
            <summary>Stirrup shape.</summary>
            <search>
            rebar, design, opening, shape, stirrup
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Designs.OpeningStirrupShapeCurves(Autodesk.DesignScript.Geometry.Plane,System.Int32,System.Double,System.Double,Autodesk.DesignScript.Geometry.Curve)">
            <summary>Closed stirrup shape rebar curves.</summary>
            <param name="openingPlane">Opening plane.</param>
            <param name="segmentA">Segment A length.</param>
            <param name="hostWidth">Opening host width.</param>
            <param name="cover">Host cover.</param>
            <param name="openingCurve">Opening curve.</param>
            <returns name="Curves">Rebar curves.</returns>
            <returns name="Vector">The normal to the plane that the rebar curve lies on.</returns>
            <search>
            rebar, design, opening, shape, stirrup
            </search>
        </member>
        <member name="T:StructuralDesign.Rebar.FabricArea.FabricArea">
            <Summary>
             FabricArea Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Rebar.FabricArea.FabricArea.Create(Revit.Elements.Element,Autodesk.DesignScript.Geometry.Vector,Revit.Elements.Element,System.String,System.String,System.Double)">
            <summary>Creates a new instance of a single flat Fabric Sheet element within the project. </summary>
            <param name="hostElement">The element that will host the FabricArea. The host can be a Structural Floor, Structural Wall, Structural Slab, or a Part created from a structural layer belonging to one of those element types.</param>
            <param name="majorDirection">A vector to define the major direction of the FabricArea.</param>
            <param name="location">'TopOrExternal' = The fabric is on the top face of a floor host, or on the external face of a wall host. 'BottomOrInternal' = The fabric is on the bottom face of a floor host, or on the internal face of a wall host.</param>
            <param name="lapSplicePosition">'Aligned' = The fabric sheets are aligned. 'MajorHalfwayStagger' = Every second fabric sheet is shifted half way in major direction. 'MajorPassingStagger' = Every second fabric sheet is shifted half way and reversed in major direction. 'MinorHalfwayStagger' = Every second fabric sheet is shifted half way in minor direction. 'MinorPassingStagger' = Every second fabric sheet is shifted half way and reversed in minor direction.</param>
            <param name="additionalCoverOffset">The additional cover offset of the fabric distribution.</param>
            <param name="fabricSheetTypeId">The id of the FabricSheetType.</param>
            <returns name="FabricArea">Fabric Area</returns>
            <search>
            fabric, sheet, rebar, reinforcement
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.FabricArea.FabricArea.RemoveFabricReinforcementSystem(Revit.Elements.Element)">
            <summary>Deletes the specified FabricArea, and converts its FabricSheet elements to equivalent Single Fabric Sheet elements.</summary>
            <param name="fabricArea">A FabricArea Reinforcement element in the document.</param>
            <returns name="FabricSheets">The list of the newly created Single Fabric Sheet elements.</returns>
            <search>
            rebar, area, fabric, remove
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.FabricArea.FabricArea.SetSolidInView(Revit.Elements.Element,Revit.Elements.Views.View3D,System.Boolean)">
            <summary>Sets Fabric Sheets of this Fabric Area to be shown solidly in a 3D view.</summary>
            <param name="fabricArea">A FabricArea element in the document.</param>
            <param name="view">The 3D view element.</param>
            <param name="solid">True if fabric sheet is shown solidly, false otherwise. </param>
            <returns name="FabricArea">Fabric Area</returns>
            <search>
            fabric, area, reinforcement, visibility
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.FabricArea.FabricArea.SetUnobscuredInView(Revit.Elements.Element,Revit.Elements.Views.View,System.Boolean)">
            <summary>Sets Fabric Sheets of this Fabric Area to be shown unobscured in a view.</summary>
            <param name="fabricArea">A FabricArea element in the document.</param>
            <param name="view">The view element.</param>
            <param name="unobscured">True if fabric sheet is shown unobscured, false otherwise.</param>
            <returns name="FabricArea">Fabric Area</returns>
            <search>
            fabric, area, reinforcement, visibility
            </search>
        </member>
        <member name="T:StructuralDesign.Rebar.FabricSheet.FabricSheet">
            <Summary>
             FabricSheet Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Rebar.FabricSheet.FabricSheet.SetSolidInView(Revit.Elements.Element,Revit.Elements.Views.View3D,System.Boolean)">
            <summary>Sets Fabric Sheets to be shown solidly in a 3D view.</summary>
            <param name="fabricSheet">A FabricSheet element in the document.</param>
            <param name="view">The 3D view element.</param>
            <param name="solid">True if fabric sheet is shown solidly, false otherwise. </param>
            <returns name="FabricSheet">Fabric Sheet</returns>
            <search>
            fabric, sheet, reinforcement, visibility
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.FabricSheet.FabricSheet.SetUnobscuredInView(Revit.Elements.Element,Revit.Elements.Views.View,System.Boolean)">
            <summary>Sets Fabric Sheets to be shown unobscured in a view.</summary>
            <param name="fabricSheet">A FabricSheet element in the document.</param>
            <param name="view">The 3D view element.</param>
            <param name="unobscured">True if fabric sheet is shown unobscured, false otherwise.</param>
            <returns name="FabricSheet">Fabric Sheet</returns>
            <search>
            fabric, sheet, reinforcement, visibility
            </search>
        </member>
        <member name="T:StructuralDesign.Rebar.Layout">
            <Summary>
             ShapeDrivenRebar Category
            </Summary>  
        </member>
        <member name="M:StructuralDesign.Rebar.Layout.SetLayoutAsNumberWithSpacing(Revit.Elements.Element,System.Int32,System.Double,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Sets the Layout Rule property of rebar set to NumberWithSpacing.</summary>
            <param name="rebar">Rebar Element.</param>
            <param name="numberOfBarPositions">The number of bar positions in rebar set.</param>
            <param name="spacing">The maximum spacing between rebar in rebar set [mm].</param>
            <param name="barsOnNormalSide">Identifies if the bars of the rebar set are on the same side of the rebar plane indicated by the normal.</param>
            <param name="includeFirstBar">Identifies if the first bar in rebar set is shown.</param>
            <param name="includeLastBar">Identifies if the last bar in rebar set is shown.</param>
            <returns name="Rebar">Rebar Element</returns>        
            <search>
            rebar 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Layout.SetLayoutAsFixedNumber(Revit.Elements.Element,System.Double,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Sets the Layout Rule property of rebar set to FixedNumber</summary>
            <param name="rebar">Rebar Element.</param>
            <param name="numberOfBarPositions">The number of bar positions in rebar set.</param>
            <param name="arrayLength">The distribution length of rebar set [mm].</param>
            <param name="barsOnNormalSide">Identifies if the bars of the rebar set are on the same side of the rebar plane indicated by the normal.</param>
            <param name="includeFirstBar">Identifies if the first bar in rebar set is shown.</param>
            <param name="includeLastBar">Identifies if the last bar in rebar set is shown.</param>
            <returns name="Rebar">Rebar Element</returns>
            <search>
            rebar 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Layout.SetLayoutAsMaximumSpacing(Revit.Elements.Element,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Sets the Layout Rule property of rebar set to MaximumSpacing.</summary>
            <param name="rebar">Rebar Element.</param>
            <param name="spacing">The maximum spacing between rebar in rebar set [mm].</param>
            <param name="arrayLength">The distribution length of rebar set [mm].</param>
            <param name="barsOnNormalSide">Identifies if the bars of the rebar set are on the same side of the rebar plane indicated by the normal.</param>
            <param name="includeFirstBar">Identifies if the first bar in rebar set is shown.</param>
            <param name="includeLastBar">Identifies if the last bar in rebar set is shown.</param>
            <returns name="Rebar">Rebar Element</returns>
            <search>
            rebar 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Layout.SetLayoutAsMinimumClearSpacing(Revit.Elements.Element,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Sets the Layout Rule property of rebar set to MinimumClearSpacing.</summary>
            <param name="rebar">Rebar Element.</param>
            <param name="spacing">The minimum spacing between rebar in rebar set[mm].</param>
            <param name="arrayLength">The distribution length of rebar set [mm].</param>
            <param name="barsOnNormalSide">Identifies if the bars of the rebar set are on the same side of the rebar plane indicated by the normal.</param>
            <param name="includeFirstBar">Identifies if the first bar in rebar set is shown.</param>
            <param name="includeLastBar">Identifies if the last bar in rebar set is shown.</param>
            <returns name="Rebar">Rebar Element</returns>
            <search>
            rebar 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Layout.SetLayoutAsSingle(Revit.Elements.Element)">
            <summary>Only one bar will remain, which is at the position of rebar plane</summary>
            <param name="rebar">Rebar Element.</param>
            <returns name="Rebar">Rebar Element</returns>
            <search>
            rebar 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Layout.SetDistributionType(Revit.Elements.Element,System.Boolean)">
            <summary>Toggle to set the distribution type of a rebar set to "Varying Length" (True) or "Uniform" (False).</summary>
            <param name="rebar">Rebar Element.</param>
            <param name="distributionType">True = Varying length distribution; False = Uniform distribution</param>
            <returns name="Rebar">Rebar Element</returns>
            <search>
            rebar 
            </search>
        </member>
        <member name="T:StructuralDesign.Rebar.PathReinforcement.PathReinforcement">
            <Summary>
             PathReinforcement Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Rebar.PathReinforcement.PathReinforcement.CreateByCurveAndShapeCode(Revit.Elements.Element,System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Curve},System.Boolean,System.Boolean,System.Boolean,Revit.Elements.Element,Revit.Elements.Element,System.Double,System.Int32,System.Double,Revit.Elements.Element,Revit.Elements.Element,System.Double,System.Double)">
            <summary>Creates a new PathReinforcement object from an array of curves and given Rebar Shape id.</summary>
            <param name="hostElement">The element that will host the PathReinforcement. The host can be a Structural Floor, Structural Wall, Structural Slab, or a Part created from a structural layer belonging to one of those element types.</param>
            <param name="curvesPath">A list of curves that will define the outline of the PathReinforcement.</param>
            <param name="layoutRule">Toggle to set Layout Rule: True = Maximum Spacing, False = Fixed Number.</param>
            <param name="flip">A flag controlling the bars relative to the curves.</param>
            <param name="face">Toggle to set Face: True = Top, False = Bottom.</param>
            <param name="primaryBarType">Primary Bar Type.</param>
            <param name="primaryBarShape">The RebarShape element that defines the shape of the rebars in the object.</param>
            <param name="primarySpacing">Primary Spacing.</param>
            <param name="primaryNumberLines">Primary Number Lines.</param>
            <param name="primaryBarLength">Primary Bar Length.</param>
            <param name="alternatingBarType">Alternating Bar Type. If it is not set then Alternating Bars are not created.</param>
            <param name="alternatingBarShape">The RebarShape element that defines the shape of the alternating rebars in the object.</param>
            <param name="alternatingBarLength">Alternating Bar Length.</param>
            <param name="alternatingBarOffset">Alternating Bar Offset.</param>
            <returns name="PathReinforcement">Path Reinforcement</returns>
            <search>
            rebar, path, reinforcement
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.PathReinforcement.PathReinforcement.SetHooks(Revit.Elements.Element,Revit.Elements.Element,Revit.Elements.Element,Revit.Elements.Element,Revit.Elements.Element)">
            <summary>Sets up hooks of a given Path Reinforcement.</summary>
            <param name="pathReinforcement">Path Reinforcement.</param>
            <param name="primaryBarStartHookType">Primary Bar Start Hook Type.</param>
            <param name="primaryBarEndtHookType">Primary Bar End Hook Type.</param>
            <param name="alternatingBarStartHookType">Alternating Bar Start Hook Type.</param>
            <param name="alternatingBarEndtHookType">Alternating Bar End Hook Type.</param>
            <returns name="PathReinforcement">Path Reinforcement</returns>
            <search>
            rebar, path, reinforcement
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.PathReinforcement.PathReinforcement.RemovePathReinforcementSystem(Revit.Elements.Element)">
            <summary>Deletes the specified PathReinforcement, and converts its RebarInSystem elements to equivalent Rebar elements.</summary>
            <param name="pathReinforcement">A PathReinforcement element in the document.</param>
            <returns name="Rebars">The list of the newly created Rebar elements.</returns>
            <search>
            rebar, path, reinforcement, remove
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.PathReinforcement.PathReinforcement.SetSolidInView(Revit.Elements.Element,Revit.Elements.Views.View3D,System.Boolean)">
            <summary>Sets this Path Reinforcement to be shown solidly in a 3D view.</summary>
            <param name="pathReinforcement">A PathReinforcement element in the document.</param>
            <param name="view">The 3D view element.</param>
            <param name="solid">True if rebar is shown solidly, false otherwise.</param>
            <returns name="PathReinforcement">Path Reinforcement</returns>
            <search>
            rebar, path, reinforcement, visibility
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.PathReinforcement.PathReinforcement.SetUnobscuredInView(Revit.Elements.Element,Revit.Elements.Views.View,System.Boolean)">
            <summary>Sets this Path Reinforcement to be shown unobscured in a view.</summary>
            <param name="pathReinforcement">A PathReinforcement element in the document.</param>
            <param name="view">The view element.</param>
            <param name="unobscured">True if rebar is shown unobscured, false otherwise.</param>
            <returns name="PathReinforcement">Path Reinforcement</returns>
            <search>
            rebar, path, reinforcement, visibility
            </search>
        </member>
        <member name="T:StructuralDesign.Rebar.Properties">
            <Summary>
             Properties Category
            </Summary>
        </member>
        <member name="M:StructuralDesign.Rebar.Properties.RebarHostCover(Revit.Elements.Element)">
            <summary>Get the rebar cover dimensions for a  selected element.</summary>
            <param name="element">Element that can host a rebar.</param>
            <returns name="Top/Exterior">Rebar Cover</returns>
            <returns name="Bottom/Interior">Rebar Cover</returns>
            <returns name="Other">Rebar Cover</returns>
            <search>
            rebar 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Properties.RebarHostElement(Revit.Elements.Element)">
            <summary>The element that contains the rebar.</summary>
            <param name="rebar">Rebar Element</param>
            <returns name="Element">The Element that contains the rebar</returns>
            <search>
            rebar 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Properties.RebarDiameter(Revit.Elements.Element)">
            <summary>Gets Rebar Diameter</summary>
            <returns name="Diameter">Rebar Diameter [mm]/[in]</returns>
            <param name="rebar">Rebar Element</param>
            <search>
            rebar 
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Properties.RebarProperties(Revit.Elements.Element)">
            <summary>Get the rebar properties</summary>
            <param name="rebar">Rebar Element</param>
            <search>
            rebar, property
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Properties.RebarCenterlineCurves(Revit.Elements.Element,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>A chain of curves representing the centerline of the rebar. </summary>
            <param name="rebar">Rebar Element</param>
            <param name="adjustForSelfIntersection">If the curves overlap, as in a planar stirrup, this parameter controls whether they should be adjusted to avoid intersection (as in fine views), or kept in a single plane for simplicity (as in coarse views). </param>
            <param name="suppressHooks">Identifies if the chain will include hooks curves.</param>
            <param name="suppressBendRadius">Identifies if the connected chain will include unfilleted curves.</param>
            <param name="multiplanarOption">If the Rebar is a multi-planar shape, this parameter controls whether to generate only the curves in the primary plane (IncludeOnlyPlanarCurves), or to generate all curves, (IncludeAllMultiplanarCurves) including the out-of-plane connector segments as well as multi-planar copies of the primary plane curves. This argument is ignored for planar shapes.</param>
            <param name="barPositionIndex">Use this value to obtain all the curves at a specific index in the distribution.</param>
            <returns name="Curves">The centerline curves</returns>
            <search>
            rebar
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Properties.GetHookRotationAngle(Revit.Elements.Element,System.Int32)">
            <summary>Gets the out of plane hook rotation angle at the specified end.</summary>
            <param name="rebar">Rebar Element</param>
            <param name="rebarEnd">0 for the start , 1 for the end.</param>
            <returns name="Angle">Returns the out of plane hook rotation angle at the specified end. </returns>
            <search>
            rebar, angle
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Properties.SetHookRotationAngle(Revit.Elements.Element,System.Double,System.Int32)">
            <summary>Sets the out of plane hook rotation angle at the specified end.</summary>
            <param name="rebar">Rebar Element</param>
            <param name="hookRotationAngle">The out of plane hook rotation angle at the specified end.</param>
            <param name="rebarEnd">0 for the start , 1 for the end.</param>
            <returns name="Rebar">Rebar Element</returns> 
            <search>
            rebar, angle
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Properties.SetEndTreatment(Revit.Elements.Element,Revit.Elements.Element,System.Int32)">
            <summary>Sets the id of the EndTreatmentType to be applied to the rebar. This can be done if and only if the end of the bar on which the end treatment is applied has no RebarCoupler on it, otherwise will throw an exception. If a RebarHookType is present at the rebar end, it will automatically set to invalidElementId.</summary>
            <param name="rebar">Rebar Element</param>
            <param name="endTreatmentType">The id of a EndTreatmentType element, or invalidElementId if the rebar should have no end treatment at the specified end.</param>
            <param name="rebarEnd">0 for the start end treatment, 1 for the end end treatment. </param>
            <returns name="Rebar">Rebar Element</returns> 
            <search>
            rebar, angle
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Properties.EnableHookLengthOverride(Revit.Elements.Element,System.Boolean)">
            <summary>Enables or disables the ability to override hook lengths for this rebar instance.</summary>
            <param name="rebar">Rebar Element</param>
            <param name="enable">True to enable, False to disable. </param>
            <returns name="Rebar">Rebar Element</returns> 
            <search>
            rebar, angle
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Properties.IsHookLengthOverrideEnabled(Revit.Elements.Element)">
            <summary>Check ability to override hook lengths.</summary>
            <param name="rebar">Rebar Element</param>
            <returns name="Enabled">Returns True if the ability to override hook lengths is enabled for this rebar instance, False otherwise.</returns>
            <search>
            rebar, angle
            </search>
        </member>
        <member name="M:StructuralDesign.Rebar.Properties.ListOfParameters(Revit.Elements.Element)">
            <summary>Get a list of parameters of the element</summary>
            <param name="element">Element</param>
            <returns name="Parameters">List of parameters</returns>
            <search>
            element, parameters
            </search>
        </member>
    </members>
</doc>

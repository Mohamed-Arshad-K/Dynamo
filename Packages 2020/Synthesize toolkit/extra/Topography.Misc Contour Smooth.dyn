{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Topography.Misc Contour Smooth",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "825d9765f8cc4af385e22377c1ea6a01",
      "Name": "01.Select Topography",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select a model element from the document.",
      "SelectedIndex": 0
    },
    {
      "Id": "384bbe1732e549b3865a04a6945c394d",
      "Name": "02.Smoothness",
      "Type": "number",
      "Value": "25",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "4a188fdb7feb4188a40d478e0c32b320",
      "Name": "03.Distance Between Points ?",
      "Type": "number",
      "Value": "5",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "9cda04ce89e348ddbd2e335026056ef3",
      "Name": "04.Delete Old ?",
      "Type": "boolean",
      "Value": "true",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "6c9ce37a-b02c-4b40-a3d9-9b7b0432d546",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "74da721ac5624c60bc788645158d6de5",
      "Inputs": [
        {
          "Id": "cc89d3f9abab48b39a2314fe4df34604",
          "Name": "VARpassThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "478ba7d0fc2b40369fdd34fee8963790",
          "Name": "VARwaitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "258802147c0b405b9ea907e8d3d38e62",
          "Name": "VARpassThrough",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "60d3ea8512b044ab855a04e6b3168fa3",
      "Inputs": [
        {
          "Id": "eea3fb9012bd483eb7ffe7b7c2abc587",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96b6c58544db49f48ec1f182826c32b7",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d829fd3044d94870bc2c2895c890b438",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "685bb4a3c60b4163ad2a58a522dafc8c",
      "Inputs": [
        {
          "Id": "14d486e5ecf94270b617d09d48674b0c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb1bb9f5863f4415bbf4af2c770c173f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "007b46a7df90420e932a54ea48e78ad2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "c80e94a9-40a4-46fe-9976-3fe5d6acf151",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "3de7953006a348afbb0d6847a84c0671",
      "Inputs": [
        {
          "Id": "d6c18db102c147ae9966bb2988836621",
          "Name": "VARList",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce405dd19efd46c9aa5b6cc252f544cb",
          "Name": "VARCantdeleteIds",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Try to delete any element from project"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "fcf22a6a80da41c084a29552c6c5ecec",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "67eb9978b3cf4716bb2eda4d85899e44",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Created By Karam Baki : karam@aecedx.com\n# Enable Python support and load DesignScript library\n# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nimport math\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\n\n# EXTENSION Enable ToDSType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Enable Revit Elements\nfrom Revit.Elements import *\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Enable Revit API\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\n\n# Enable DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Enable ICollection List Translate\nclr.AddReference(\"System\")\nimport System.Collections.Generic\nfrom System.Collections.Generic import List\nfrom System import Array\nfrom array import array\n#The inputs to this node will be stored as a list in the IN variables.\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\ndef flatten(x):\n    result = []\n    for el in x:\n        if hasattr(el, \"__iter__\") and not isinstance(el, basestring):\n            result.extend(flatten(el))\n        else:\n            result.append(el)\n    return result\n\ninside = UnwrapElement(IN[0])\ndistance = IN[1]\n\nresult=[]\n\nlengths = []\nfor e in inside:\n\tnum = round(e.Length/distance)\n\tif num < 4:\n\t\tnum = range(4)\n\t\tlengths.append(num)\n\telse:\n\t\tlengths.append(range(int(num)))\n\nOUT = lengths",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f6d87237a11d4e8692e43da69ab2fcbe",
      "Inputs": [
        {
          "Id": "56a0aaa0331241d2a67526de14e48f9a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7fa423d630ed4bbfadf02e13be6d8f83",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa0576b0db2349e682c3d6b92f61eb10",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.RemapRange@double[],double,double",
      "Id": "08029b22bb7f49cebbdf108d7acb7811",
      "Inputs": [
        {
          "Id": "c3666ea27907460db747c7a7020be883",
          "Name": "numbers",
          "Description": "List of numbers to adjust range of.\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f6da7c796184f7e9c1666d391536d77",
          "Name": "newMin",
          "Description": "New minimum of the range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99f0d28b65af499a92d380a74c484618",
          "Name": "newMax",
          "Description": "New maximum of the range\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dccc3868dd7c4515abbcb88b0a5df950",
          "Name": "list",
          "Description": "List remapped to new range.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adjusts the range of a list of numbers while preserving the distribution ratio.\n\nMath.RemapRange (numbers: double[], newMin: double = 0, newMax: double = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "1ca3ae8c4da240b095997574cc603e50",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "84fba87f55334be09ffc0acea20856d6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d12b3055484c458481961b5b43d7362d",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Created By Karam Baki : karam@aecedx.com\n# Enable Python support and load DesignScript library\n# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nimport math\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\n\n# EXTENSION Enable ToDSType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Enable Revit Elements\nfrom Revit.Elements import *\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Enable Revit API\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\nimport Autodesk.Revit.DB\n# Enable DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Enable ICollection List Translate\nclr.AddReference(\"System\")\nimport System.Collections.Generic\nfrom System.Collections.Generic import List\nfrom System import Array\nfrom array import array\n#The inputs to this node will be stored as a list in the IN variables.\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\ndef flatten(x):\n    result = []\n    for el in x:\n        if hasattr(el, \"__iter__\") and not isinstance(el, basestring):\n            result.extend(flatten(el))\n        else:\n            result.append(el)\n    return result\n\ninside = UnwrapElement(IN[0])\nnums = IN[1]\n\nresult=[]\n\ncount = 0\nfor each in inside:\n\ttry:\n\t\ttmp = []\n\t\tfor e in nums[count]:\n\t\t\ttmp.append(dg.Curve.PointAtParameter(each,e))\n\t\tclosedornot = each.IsClosed\n\t\tif closedornot == True:\n\t\t\ttmp.pop(-1)\n\t\tcu = dg.NurbsCurve.ByControlPoints(tmp,3,closedornot)\n\t\tresult.append(cu)\n\t\tcount = count + 1\n\texcept:\n\t\tcount = count + 1\n\nresult = flatten(result)\n\nOUT = result",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f9a9629103394bf7872803652953b803",
      "Inputs": [
        {
          "Id": "fd96fd938feb4cb0836c2c70d6d17288",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1428810a0a65497d99fa75155adad807",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74d3756f029c4b56955d3e10a1ffd4bb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Created By Karam Baki : karam@aecedx.com\n# Enable Python support and load DesignScript library\n# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nimport math\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\n\n# EXTENSION Enable ToDSType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Enable Revit Elements\nfrom Revit.Elements import *\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Enable Revit API\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\nimport Autodesk.Revit.DB\n# Enable DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Enable ICollection List Translate\nclr.AddReference(\"System\")\nimport System.Collections.Generic\nfrom System.Collections.Generic import List\nfrom System import Array\nfrom array import array\n#The inputs to this node will be stored as a list in the IN variables.\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\ndef flatten(x):\n    result = []\n    for el in x:\n        if hasattr(el, \"__iter__\") and not isinstance(el, basestring):\n            result.extend(flatten(el))\n        else:\n            result.append(el)\n    return result\n\ninside = UnwrapElement(IN[0])\nnums = IN[1]\n\nresult=[]\n\ncount = 0\nfor each in inside:\t\n\ttmp = []\n\tfor e in nums[count]:\n\t\ttmp.append(dg.Curve.PointAtParameter(each,e))\n\tclosedornot = each.IsClosed\n\tif closedornot == True:\n\t\ttmp.pop(-1)\n\tresult.append(tmp)\n\tcount = count + 1\n\nresult = flatten(result)\n\ndef p2t(p) : return round(p.X,4), round(p.Y,4), round(p.Z,4)\n\npts = map(p2t, result)\nunique_pts = set(pts)\nif not True:\n\tsame_z = [(i[:2],i[-1]) for i in unique_pts]\n\tsame_z.sort(key = itemgetter(0) )\n\tunique_pts = []\n\tfor k, g in groupby(same_z, itemgetter(0) ):\n\t\tcoord = list(k)\n\t\tcoord.append(max([i[-1] for i in g]) )\n\t\tunique_pts.append(coord)\npruned = [dg.Point.ByCoordinates(*i) for i in unique_pts]\n\nxyznow = []\nfor e in pruned:\n\txyznow.append(e.ToXyz())\n\ncoords = List[Autodesk.Revit.DB.XYZ](xyznow)\n\nTransactionManager.Instance.EnsureInTransaction(doc)\n\ntopo = Architecture.TopographySurface.Create(doc,coords)\n\nTransactionManager.Instance.TransactionTaskDone()\n\nOUT = topo",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "0fd310b228e5435498314c144eb1131b",
      "Inputs": [
        {
          "Id": "f475ab22544e46e48b89327e94d95501",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95308b81f5254a428622657a57c68f95",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98b062bf59104afa8229d1ff9c4e6c50",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Created By Karam Baki : karam@aecedx.com\n# Enable Python support and load DesignScript library\n# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nimport math\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\n\n# EXTENSION Enable ToDSType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Enable Revit Elements\nfrom Revit.Elements import *\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Enable Revit API\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\n\n# Enable DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Enable ICollection List Translate\nclr.AddReference(\"System\")\nimport System.Collections.Generic\nfrom System.Collections.Generic import List\nfrom System import Array\nfrom array import array\n#The inputs to this node will be stored as a list in the IN variables.\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\ndef flatten(x):\n    result = []\n    for el in x:\n        if hasattr(el, \"__iter__\") and not isinstance(el, basestring):\n            result.extend(flatten(el))\n        else:\n            result.append(el)\n    return result\n\ninside = UnwrapElement(IN[0])\ndistance = IN[1]\n\nresult=[]\n\nlengths = []\nfor e in inside:\n\tnum = round(e.Length/distance)\n\tif num < 4:\n\t\tnum = range(4)\n\t\tlengths.append(num)\n\telse:\n\t\tlengths.append(range(int(num)))\n\nOUT = lengths",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "a250289692ae4a7491db8a17306d08e6",
      "Inputs": [
        {
          "Id": "6172569c0c55421aa4e94e007e480f63",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44c21f9c467b44b78b48aae25fca1dcc",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c44d1b98874348f7a6a261aff2194073",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.RemapRange@double[],double,double",
      "Id": "d34f6dce93eb40098b3371501a60fc72",
      "Inputs": [
        {
          "Id": "5d6be187d88046d98dc4548240c6c80d",
          "Name": "numbers",
          "Description": "List of numbers to adjust range of.\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f944ca98db4e46478979e1df9d6d61b5",
          "Name": "newMin",
          "Description": "New minimum of the range.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "392bc6146ae84193a6782d914959a935",
          "Name": "newMax",
          "Description": "New maximum of the range\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "729c87a616294cda9f9c1221c8148ca4",
          "Name": "list",
          "Description": "List remapped to new range.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adjusts the range of a list of numbers while preserving the distribution ratio.\n\nMath.RemapRange (numbers: double[], newMin: double = 0, newMax: double = 1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "825d9765f8cc4af385e22377c1ea6a01",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bfc9560bd2dc4d3c83cbf257a9fb3f7a",
          "Name": "Element",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 25.0,
      "Id": "384bbe1732e549b3865a04a6945c394d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0b49f8438bd44acab79d49ae86ff2a69",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 5.0,
      "Id": "4a188fdb7feb4188a40d478e0c32b320",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "38fedb2187d54fa2905f86b1291ce15d",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "9cda04ce89e348ddbd2e335026056ef3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "63a018f56b854fc68b96c7a79fa67371",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "05702df1-2b09-4fc7-a578-83290d1f9291",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8d17ca3b20834921a5a837f5fd14d799",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4b7ea960c9744536b70c597295150703",
          "Name": "VAROut",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Debug Python"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9edb0bad-9374-4d25-babb-879336c1d0e1",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "be1ad14823e44b088d0c26dae1e447d9",
      "Inputs": [
        {
          "Id": "360f475747fb41f78c1e870d773b3131",
          "Name": "VARTopography",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ccc6d9c32d643199a060749e9f4dc42",
          "Name": "VARLeaveAsIs",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "baeb5181583743ffbf5708f3c5e9b8f2",
          "Name": "VARTopography",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Select Topography From Subregion"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f93a177d-065b-47f6-a305-3a9cc4831b69",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "36e1c01b3ec64adea4a848e305958df5",
      "Inputs": [
        {
          "Id": "4a7189531b364274b52a835e7c8f0904",
          "Name": "VARTopography",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18c0fb1593fd40ff9768796212d91c6a",
          "Name": "VARFullTopo",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb5a0d390b394619a6c44278926ac439",
          "Name": "VAROnlyCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "179689002f1345088907384a20200e8e",
          "Name": "VARFullTopoRemoveRegions",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b71e996b6a7244eea5b77555d56e4c02",
          "Name": "VARFullTopoRemovePads",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b6bb5977a64412189a4a2e4545aafe7",
          "Name": "VARJointoPolysurface",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f350efcc235b4471b45dd16be187b9b1",
          "Name": "VARPolySurface",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a85762ed01e48afb94f6c9ff122a08b",
          "Name": "VARPolyCurves",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9158ee942bec4e42bf11c70cc913f14c",
          "Name": "VARSubregionsList",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "654da82a28e9436cb69227a6284f283f",
          "Name": "VARHostTopography",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9ed3e71204b41e3805facd341df1609",
          "Name": "VARLineStyleIds",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Convert topography element to polysurface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "be9de24f15cd4e5eb04b6bcbe058053d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d8caa57739048c0927233f0b531dc69",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "597def74-6997-4484-bb18-67a97819c8bd",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "a888597c90994f699ad63c47ccab7e69",
      "Inputs": [
        {
          "Id": "fdc0cf41e0db43a0859d8e64da568cb2",
          "Name": "VARtest",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94463f0964cb452e83e2fbf031aebe5c",
          "Name": "VARtrue",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dbabda0ccc4c459b88fe2ccb09508303",
          "Name": "VARfalse",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5fa71f8b46d9402ca595423611dbafb8",
          "Name": "VARresult",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "A (hopefully) more robust implementation of ScopeIf. Tests a single boolean and returns a value accordingly."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Empty",
      "Id": "b33d2683a24d47fe9216a2895c687903",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e015b053275644f7b1de0a31523906d1",
          "Name": "list",
          "Description": "Empty list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an Empty List.\n\nList.Empty: var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "258802147c0b405b9ea907e8d3d38e62",
      "End": "94463f0964cb452e83e2fbf031aebe5c",
      "Id": "39ae63cc25dd47b7bbf6b7e494e99b76",
      "IsHidden": "False"
    },
    {
      "Start": "d829fd3044d94870bc2c2895c890b438",
      "End": "14d486e5ecf94270b617d09d48674b0c",
      "Id": "f1630ac0f0544fd28670313f4b3bf1e3",
      "IsHidden": "False"
    },
    {
      "Start": "007b46a7df90420e932a54ea48e78ad2",
      "End": "d6c18db102c147ae9966bb2988836621",
      "Id": "e0e40c692fc64492bc46bfea7776e296",
      "IsHidden": "False"
    },
    {
      "Start": "67eb9978b3cf4716bb2eda4d85899e44",
      "End": "96b6c58544db49f48ec1f182826c32b7",
      "Id": "6308211cfc564a2785fa5d3d610fe25f",
      "IsHidden": "False"
    },
    {
      "Start": "fa0576b0db2349e682c3d6b92f61eb10",
      "End": "c3666ea27907460db747c7a7020be883",
      "Id": "221e29de151547a994361ca6fe68c72c",
      "IsHidden": "False"
    },
    {
      "Start": "dccc3868dd7c4515abbcb88b0a5df950",
      "End": "1428810a0a65497d99fa75155adad807",
      "Id": "b26aeb4afc14464a94737b238d7fd220",
      "IsHidden": "False"
    },
    {
      "Start": "84fba87f55334be09ffc0acea20856d6",
      "End": "9f6da7c796184f7e9c1666d391536d77",
      "Id": "60c1c7a76a954c7ea246fbf13b76ef91",
      "IsHidden": "False"
    },
    {
      "Start": "84fba87f55334be09ffc0acea20856d6",
      "End": "f944ca98db4e46478979e1df9d6d61b5",
      "Id": "5be898b910ec4afc80c135f2db100da8",
      "IsHidden": "False"
    },
    {
      "Start": "d12b3055484c458481961b5b43d7362d",
      "End": "99f0d28b65af499a92d380a74c484618",
      "Id": "a7a9532f4cad4bbb8d194669c0406d9d",
      "IsHidden": "False"
    },
    {
      "Start": "d12b3055484c458481961b5b43d7362d",
      "End": "392bc6146ae84193a6782d914959a935",
      "Id": "c641dcc16a454f6385e2ded32c000520",
      "IsHidden": "False"
    },
    {
      "Start": "74d3756f029c4b56955d3e10a1ffd4bb",
      "End": "6172569c0c55421aa4e94e007e480f63",
      "Id": "1d5f492a87b14a3ebc531ec6d54e2851",
      "IsHidden": "False"
    },
    {
      "Start": "74d3756f029c4b56955d3e10a1ffd4bb",
      "End": "f475ab22544e46e48b89327e94d95501",
      "Id": "6b29745f312c4f7f9a907fa4a37aa41c",
      "IsHidden": "False"
    },
    {
      "Start": "98b062bf59104afa8229d1ff9c4e6c50",
      "End": "478ba7d0fc2b40369fdd34fee8963790",
      "Id": "bf5732e3f1eb46bcb43668e793be64bf",
      "IsHidden": "False"
    },
    {
      "Start": "c44d1b98874348f7a6a261aff2194073",
      "End": "5d6be187d88046d98dc4548240c6c80d",
      "Id": "015ebbd1e79a4a52b2b05b58e29d4c95",
      "IsHidden": "False"
    },
    {
      "Start": "729c87a616294cda9f9c1221c8148ca4",
      "End": "95308b81f5254a428622657a57c68f95",
      "Id": "d40ae26341504c6ca45feac49cc2873f",
      "IsHidden": "False"
    },
    {
      "Start": "bfc9560bd2dc4d3c83cbf257a9fb3f7a",
      "End": "360f475747fb41f78c1e870d773b3131",
      "Id": "7aefb13d2271418c86882a7ac93f12e7",
      "IsHidden": "False"
    },
    {
      "Start": "0b49f8438bd44acab79d49ae86ff2a69",
      "End": "7fa423d630ed4bbfadf02e13be6d8f83",
      "Id": "44d230be8f9f4a9698dcf7a9d0091d42",
      "IsHidden": "False"
    },
    {
      "Start": "38fedb2187d54fa2905f86b1291ce15d",
      "End": "44c21f9c467b44b78b48aae25fca1dcc",
      "Id": "c02fd68fa5af4c25af2f57e81153df22",
      "IsHidden": "False"
    },
    {
      "Start": "63a018f56b854fc68b96c7a79fa67371",
      "End": "fdc0cf41e0db43a0859d8e64da568cb2",
      "Id": "994815570b274fcc92860b326e4e49da",
      "IsHidden": "False"
    },
    {
      "Start": "baeb5181583743ffbf5708f3c5e9b8f2",
      "End": "cc89d3f9abab48b39a2314fe4df34604",
      "Id": "529b5c11c96a49cb818f84628d344b7d",
      "IsHidden": "False"
    },
    {
      "Start": "baeb5181583743ffbf5708f3c5e9b8f2",
      "End": "4a7189531b364274b52a835e7c8f0904",
      "Id": "8b0eef32b9804341a5711dce8ced1af3",
      "IsHidden": "False"
    },
    {
      "Start": "3a85762ed01e48afb94f6c9ff122a08b",
      "End": "56a0aaa0331241d2a67526de14e48f9a",
      "Id": "ebcd883aace340eb85c169f7dec13d94",
      "IsHidden": "False"
    },
    {
      "Start": "3a85762ed01e48afb94f6c9ff122a08b",
      "End": "fd96fd938feb4cb0836c2c70d6d17288",
      "Id": "fd42b928aead420caf324e9ca7d5d65c",
      "IsHidden": "False"
    },
    {
      "Start": "0d8caa57739048c0927233f0b531dc69",
      "End": "fb5a0d390b394619a6c44278926ac439",
      "Id": "a07c59fe1b5d415da789ab77956024d7",
      "IsHidden": "False"
    },
    {
      "Start": "5fa71f8b46d9402ca595423611dbafb8",
      "End": "eea3fb9012bd483eb7ffe7b7c2abc587",
      "Id": "e541cd85f0fe48ab98b600f1befe5bab",
      "IsHidden": "False"
    },
    {
      "Start": "e015b053275644f7b1de0a31523906d1",
      "End": "dbabda0ccc4c459b88fe2ccb09508303",
      "Id": "17f8402d85d340a9862be6c6135a069d",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "6c9ce37a-b02c-4b40-a3d9-9b7b0432d546",
    "c80e94a9-40a4-46fe-9976-3fe5d6acf151",
    "05702df1-2b09-4fc7-a578-83290d1f9291",
    "9edb0bad-9374-4d25-babb-879336c1d0e1",
    "f93a177d-065b-47f6-a305-3a9cc4831b69",
    "597def74-6997-4484-bb18-67a97819c8bd"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Synthesize toolkit",
      "Version": "12.5.1",
      "ReferenceType": "Package",
      "Nodes": [
        "74da721ac5624c60bc788645158d6de5",
        "3de7953006a348afbb0d6847a84c0671",
        "8d17ca3b20834921a5a837f5fd14d799",
        "be1ad14823e44b088d0c26dae1e447d9",
        "36e1c01b3ec64adea4a848e305958df5",
        "a888597c90994f699ad63c47ccab7e69"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "karam@aecedx.com",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 598.546630859375,
      "EyeY": 163.3064727783203,
      "EyeZ": 92.34188079833984,
      "LookX": -47.7086067199707,
      "LookY": -174.5869140625,
      "LookZ": -98.20561981201172,
      "UpX": -0.31220218539237976,
      "UpY": 0.6996633410453796,
      "UpZ": -0.6426515579223633
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "CW.Passthrough",
        "ShowGeometry": false,
        "Id": "74da721ac5624c60bc788645158d6de5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2939.72534224875,
        "Y": 296.172014808268
      },
      {
        "Name": "List.Clean",
        "ShowGeometry": false,
        "Id": "60d3ea8512b044ab855a04e6b3168fa3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3686.91468921836,
        "Y": 256.060651974859
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "685bb4a3c60b4163ad2a58a522dafc8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4046.93702587015,
        "Y": 296.952604312059
      },
      {
        "Name": "ST.Tool.Eraser",
        "ShowGeometry": true,
        "Id": "3de7953006a348afbb0d6847a84c0671",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4321.78519011795,
        "Y": 183.103407916669
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "fcf22a6a80da41c084a29552c6c5ecec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3452.54875119025,
        "Y": 359.238371203958
      },
      {
        "Name": "Python Script",
        "ShowGeometry": false,
        "Id": "f6d87237a11d4e8692e43da69ab2fcbe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1497.47355535094,
        "Y": 648.888807042894
      },
      {
        "Name": "Math.RemapRange",
        "ShowGeometry": false,
        "Id": "08029b22bb7f49cebbdf108d7acb7811",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1789.57359577975,
        "Y": 637.962181959553
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "1ca3ae8c4da240b095997574cc603e50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1634.5398839427,
        "Y": 720.0
      },
      {
        "Name": "Python Script",
        "ShowGeometry": false,
        "Id": "f9a9629103394bf7872803652953b803",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2107.39296321577,
        "Y": 459.967643272024
      },
      {
        "Name": "Python Script",
        "ShowGeometry": false,
        "Id": "0fd310b228e5435498314c144eb1131b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2727.50066774517,
        "Y": 350.895517823559
      },
      {
        "Name": "Python Script",
        "ShowGeometry": false,
        "Id": "a250289692ae4a7491db8a17306d08e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2284.63653311743,
        "Y": 357.404501206649
      },
      {
        "Name": "Math.RemapRange",
        "ShowGeometry": false,
        "Id": "d34f6dce93eb40098b3371501a60fc72",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2465.56089865595,
        "Y": 416.774512414325
      },
      {
        "Name": "01.Select Topography",
        "ShowGeometry": true,
        "Id": "825d9765f8cc4af385e22377c1ea6a01",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -379.044783322787,
        "Y": 255.588991456991
      },
      {
        "Name": "02.Smoothness",
        "ShowGeometry": true,
        "Id": "384bbe1732e549b3865a04a6945c394d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -343.487761971606,
        "Y": 393.945425466481
      },
      {
        "Name": "03.Distance Between Points ?",
        "ShowGeometry": true,
        "Id": "4a188fdb7feb4188a40d478e0c32b320",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -380.532323771113,
        "Y": 471.772321280054
      },
      {
        "Name": "04.Delete Old ?",
        "ShowGeometry": true,
        "Id": "9cda04ce89e348ddbd2e335026056ef3",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -368.370787425589,
        "Y": 537.540085012913
      },
      {
        "Name": "Debug Python",
        "ShowGeometry": false,
        "Id": "8d17ca3b20834921a5a837f5fd14d799",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 879.85327857618,
        "Y": 842.989719976862
      },
      {
        "Name": "Select Topography From Subregion",
        "ShowGeometry": true,
        "Id": "be1ad14823e44b088d0c26dae1e447d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -106.569551279829,
        "Y": 245.697618724429
      },
      {
        "Name": "ZK.Topography.PolySurface",
        "ShowGeometry": true,
        "Id": "36e1c01b3ec64adea4a848e305958df5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 293.673613782836,
        "Y": 379.731879481219
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "be9de24f15cd4e5eb04b6bcbe058053d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 128.313746209195,
        "Y": 496.607582685753
      },
      {
        "Name": "CW.ScopeIf+",
        "ShowGeometry": false,
        "Id": "a888597c90994f699ad63c47ccab7e69",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3326.63730630418,
        "Y": 154.242562135921
      },
      {
        "Name": "List.Empty",
        "ShowGeometry": false,
        "Id": "b33d2683a24d47fe9216a2895c687903",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3163.11748113558,
        "Y": 101.568951349474
      }
    ],
    "Annotations": [
      {
        "Id": "24f57ee9d8274d4ebdab80bd81502210",
        "Title": "Input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "825d9765f8cc4af385e22377c1ea6a01",
          "384bbe1732e549b3865a04a6945c394d",
          "4a188fdb7feb4188a40d478e0c32b320",
          "9cda04ce89e348ddbd2e335026056ef3"
        ],
        "HasNestedGroups": false,
        "Left": -390.532323771113,
        "Top": 189.588991456991,
        "Width": 313.6,
        "Height": 479.7510935559219,
        "FontSize": 30.0,
        "InitialTop": 255.588991456991,
        "InitialHeight": 426.95109355592194,
        "TextblockHeight": 56.0,
        "Background": "#FFD8D8D8"
      }
    ],
    "X": 369.649592550581,
    "Y": -42.8235169281251,
    "Zoom": 0.818892424603037
  }
}
{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Cut.Bruteforce By Selection",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "8b256da9653b40119f296ada59a23a3d",
      "Name": "01.Select Elements to Cut",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select multiple elements from the Revit document.",
      "SelectedIndex": 0
    },
    {
      "Id": "f4190d6767f04cc08a3272666661da5b",
      "Name": "02.Solid with Solid = Fasle | Solid with Void = True",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "4ca4aa81-a130-43a0-ac68-feec91efb216",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "3c4d65da0d59451fae183e33a77f9cc4",
      "Inputs": [
        {
          "Id": "8b91a1c3144e4e778b92c180eec0f832",
          "Name": "VARElementList",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7862bdb3011c4c7f8cb4696274ea5a88",
          "Name": "VAROUT",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": ""
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "6e97fb89ade2414fb0f2b032d33d012c",
      "Inputs": [
        {
          "Id": "bbcf0da3ca474386979672045ad3d52c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ab2ca65461845e6a9f8c26e0bbf6e20",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "133c554724a24be2bd2eb4e789bd88d2",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "75d63dde-9828-405a-8b37-f611aed6370c",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "b87d351b0bbd418c944d6c072fe333c5",
      "Inputs": [
        {
          "Id": "2673f8f8f9c9447894d99db6b81945cc",
          "Name": "VARElementList",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c9f715b597641f090ce87289777cecf",
          "Name": "VAROUT",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": ""
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "597def74-6997-4484-bb18-67a97819c8bd",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "11c35f8c5441420eb5b88e658df9b745",
      "Inputs": [
        {
          "Id": "073dc152d24d411faccef6c94735fd27",
          "Name": "VARtest",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5337adb925a64acb9d24dff72aae61a6",
          "Name": "VARtrue",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7623356d66334005b88653131b8b2a68",
          "Name": "VARfalse",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49ebe1874186456e9fb52b4104f1b87d",
          "Name": "VARresult",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "A (hopefully) more robust implementation of ScopeIf. Tests a single boolean and returns a value accordingly."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "c3e76829623b4711a275b7dac7de74bb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1bedeef52fc04a41a3892d2696b2f3e5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "597def74-6997-4484-bb18-67a97819c8bd",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "c75420a519d1486dbceee5ec3bfdf855",
      "Inputs": [
        {
          "Id": "228bbf9cbf304c4e853fc888947f3059",
          "Name": "VARtest",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86a43eef674b428eb2805fb1aea5f63f",
          "Name": "VARtrue",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5537ab02a3094a4b800e9c82c17ecfc6",
          "Name": "VARfalse",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f237af9217241198d0054224e4372a3",
          "Name": "VARresult",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "A (hopefully) more robust implementation of ScopeIf. Tests a single boolean and returns a value accordingly."
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "8b256da9653b40119f296ada59a23a3d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99314b51957d4c7dbc9bc0465c9692c5",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "f4190d6767f04cc08a3272666661da5b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7bd17cb53d2b45b48ceeabaf32099514",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "05702df1-2b09-4fc7-a578-83290d1f9291",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8d17ca3b20834921a5a837f5fd14d799",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c648e5b7119a4a089a3b6af3423d46a2",
          "Name": "VAROut",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Debug Python"
    }
  ],
  "Connectors": [
    {
      "Start": "133c554724a24be2bd2eb4e789bd88d2",
      "End": "7623356d66334005b88653131b8b2a68",
      "Id": "9c0df57d8f794a25abdd78760d8e9f92",
      "IsHidden": "False"
    },
    {
      "Start": "133c554724a24be2bd2eb4e789bd88d2",
      "End": "86a43eef674b428eb2805fb1aea5f63f",
      "Id": "5556fec89e174bf585cbd93980ac9f73",
      "IsHidden": "False"
    },
    {
      "Start": "49ebe1874186456e9fb52b4104f1b87d",
      "End": "2673f8f8f9c9447894d99db6b81945cc",
      "Id": "14c33643aef44be59a78da5abe9f01e0",
      "IsHidden": "False"
    },
    {
      "Start": "1bedeef52fc04a41a3892d2696b2f3e5",
      "End": "5337adb925a64acb9d24dff72aae61a6",
      "Id": "591672f3a5fc4510861cc69f03c4af7f",
      "IsHidden": "False"
    },
    {
      "Start": "1bedeef52fc04a41a3892d2696b2f3e5",
      "End": "5537ab02a3094a4b800e9c82c17ecfc6",
      "Id": "ce9cd2a8bbb14c95958ab7ccbbf5dfe0",
      "IsHidden": "False"
    },
    {
      "Start": "4f237af9217241198d0054224e4372a3",
      "End": "8b91a1c3144e4e778b92c180eec0f832",
      "Id": "d77db6c45b3449cfa960c8f4ca655340",
      "IsHidden": "False"
    },
    {
      "Start": "99314b51957d4c7dbc9bc0465c9692c5",
      "End": "bbcf0da3ca474386979672045ad3d52c",
      "Id": "57d365186e8b4330bae325f05343a03b",
      "IsHidden": "False"
    },
    {
      "Start": "7bd17cb53d2b45b48ceeabaf32099514",
      "End": "228bbf9cbf304c4e853fc888947f3059",
      "Id": "38c3c3e44ec54d75b7be443cab0abd15",
      "IsHidden": "False"
    },
    {
      "Start": "7bd17cb53d2b45b48ceeabaf32099514",
      "End": "073dc152d24d411faccef6c94735fd27",
      "Id": "cbc6956b24d84c15891641962f86ba20",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "4ca4aa81-a130-43a0-ac68-feec91efb216",
    "75d63dde-9828-405a-8b37-f611aed6370c",
    "597def74-6997-4484-bb18-67a97819c8bd",
    "05702df1-2b09-4fc7-a578-83290d1f9291"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Synthesize toolkit",
      "Version": "12.5.1",
      "ReferenceType": "Package",
      "Nodes": [
        "3c4d65da0d59451fae183e33a77f9cc4",
        "b87d351b0bbd418c944d6c072fe333c5",
        "11c35f8c5441420eb5b88e658df9b745",
        "c75420a519d1486dbceee5ec3bfdf855",
        "8d17ca3b20834921a5a837f5fd14d799"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "karam@aecedx.com",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "HOT.CutGeometry",
        "ShowGeometry": true,
        "Id": "3c4d65da0d59451fae183e33a77f9cc4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 51.6535059182635,
        "Y": 588.176175051296
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "6e97fb89ade2414fb0f2b032d33d012c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -530.864080370276,
        "Y": 154.924413482152
      },
      {
        "Name": "HOT.CutGeometry Solid with Solid",
        "ShowGeometry": true,
        "Id": "b87d351b0bbd418c944d6c072fe333c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8.25468915951001,
        "Y": 435.324498149931
      },
      {
        "Name": "CW.ScopeIf+",
        "ShowGeometry": true,
        "Id": "11c35f8c5441420eb5b88e658df9b745",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -240.681793148122,
        "Y": 347.028168143084
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c3e76829623b4711a275b7dac7de74bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -506.0,
        "Y": 399.0
      },
      {
        "Name": "CW.ScopeIf+",
        "ShowGeometry": true,
        "Id": "c75420a519d1486dbceee5ec3bfdf855",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -214.375977720539,
        "Y": 547.51625448061
      },
      {
        "Name": "01.Select Elements to Cut",
        "ShowGeometry": true,
        "Id": "8b256da9653b40119f296ada59a23a3d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1945.58004754504,
        "Y": 610.618682722348
      },
      {
        "Name": "02.Solid with Solid = Fasle | Solid with Void = True",
        "ShowGeometry": true,
        "Id": "f4190d6767f04cc08a3272666661da5b",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2005.30991784379,
        "Y": 752.152505821559
      },
      {
        "Name": "Debug Python",
        "ShowGeometry": false,
        "Id": "8d17ca3b20834921a5a837f5fd14d799",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 694.609148224469,
        "Y": 634.025304641091
      }
    ],
    "Annotations": [
      {
        "Id": "26f03d3e8c2947be89c41c370e24ddcf",
        "Title": "Input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f4190d6767f04cc08a3272666661da5b",
          "8b256da9653b40119f296ada59a23a3d"
        ],
        "HasNestedGroups": false,
        "Left": -2015.30991784379,
        "Top": 544.618682722348,
        "Width": 468.79999999999995,
        "Height": 339.3338230992109,
        "FontSize": 30.0,
        "InitialTop": 610.618682722348,
        "InitialHeight": 286.53382309921096,
        "TextblockHeight": 56.0,
        "Background": "#FFD8D8D8"
      }
    ],
    "X": 1761.8052960449586,
    "Y": -294.0906862545966,
    "Zoom": 0.8327379369130656
  }
}
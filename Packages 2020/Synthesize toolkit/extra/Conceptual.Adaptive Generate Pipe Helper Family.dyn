{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Conceptual.Adaptive Generate Pipe Helper Family",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [
    {
      "Id": "ce1f24b24e7b45c283973d6ed56c04d8",
      "Name": "01.Report",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ce1f24b24e7b45c283973d6ed56c04d8",
      "Inputs": [
        {
          "Id": "feab85c32f6f47ea988274509ec5703f",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca0adc7ebe134f76abda3ddf20201a3b",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI') \r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nclr.AddReference(\"RevitAPIUI\")\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference('DynamoRevitDS')\r\nimport Dynamo \r\nimport System\r\npf_path = System.Environment.GetFolderPath(System.Environment.SpecialFolder.ProgramFilesX86)\r\nimport sys\r\nsys.path.append('%s\\IronPython 2.7\\Lib' %pf_path)\r\nimport os.path \r\n\r\nclass FamOptions(IFamilyLoadOptions):\r\n\tdef __init__(self):\r\n\t\tpass\r\n\tdef OnFamilyFound(self,familyInUse, overwriteParameterValues):\r\n\t\toverwriteParameterValues.Value = False\r\n\t\treturn True\r\n\tdef OnSharedFamilyFound(self,familyInUse, source, overwriteParameterValues):\r\n\t\toverwriteParameterValues.Value = False\r\n\t\treturn True\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nfamname = \"Pipe Helper\"\r\n\r\nstringedfamname = '\"' + famname + '\"'\r\n\r\ncheckfamily = [x for x in FilteredElementCollector(doc).OfClass(Family).ToElements() if famname.lower() == x.Name.lower()]\r\nif len(checkfamily) == 0:\r\n\tscript = Dynamo.Applications.DynamoRevit().RevitDynamoModel.CurrentWorkspace.FileName.split(\"\\\\\")[:-1]\r\n\tfullpath = \"\\\\\".join(script) + \"\\\\\" + \"Sample \" + famname + \".rfa\"\r\n\tif os.path.isfile(fullpath):\r\n\t\tTransactionManager.Instance.ForceCloseTransaction()\r\n\t\ttrans1 = Transaction(doc, 'Load ' + famname)\r\n\t\ttrans1.Start()\r\n\t\tloadedfamily = doc.LoadFamily(fullpath,FamOptions())[1]\r\n\t\tloadedfamily.Name = famname\r\n\t\tsymbol = loadedfamily.GetFamilySymbolIds().GetEnumerator()\r\n\t\tsymbol.MoveNext()\r\n\t\tsymbol = doc.GetElement(symbol.Current)\r\n\t\tsymbol.Name = famname\r\n\t\tif not symbol.IsActive: symbol.Activate()\r\n\t\ttrans1.Commit()\r\n\t\tresult = \"Family \" + stringedfamname + \" Is Now Loaded\"\r\n\t\tTaskDialog.Show(\"AECedx - Karam\", result)\r\n\telse:\r\n\t\tresult = \"Unknown Error: Please Contact Karam\\n karam@aecedx.com\"\r\n\t\tTaskDialog.Show(\"AECedx - Karam\", result)\r\nelse:\r\n\tresult = stringedfamname + \" Is Already Loaded\"\r\n\tTaskDialog.Show(\"AECedx - Karam\", result)\r\n\r\nOUT = result",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "41d077aa41374290b3b5e86aa01f06ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2f26107b68ad4b95bf5edaa57e4e58c8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "e3b15dcf-8a04-4048-81bc-0e3c0480d780",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "7951c1c8b3944ddd8955937634b8efb2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2c3f07812ccc4943aec22137cda55944",
          "Name": "VAROut",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Debug Python"
    }
  ],
  "Connectors": [
    {
      "Start": "2f26107b68ad4b95bf5edaa57e4e58c8",
      "End": "feab85c32f6f47ea988274509ec5703f",
      "Id": "34a6d9c3edf740528767eb37131c7515",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "e3b15dcf-8a04-4048-81bc-0e3c0480d780"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Synthesize toolkit",
      "Version": "12.5.1",
      "ReferenceType": "Package",
      "Nodes": [
        "7951c1c8b3944ddd8955937634b8efb2"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "karam@aecedx.com",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "01.Report",
        "ShowGeometry": true,
        "Id": "ce1f24b24e7b45c283973d6ed56c04d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": -956.3127410576,
        "Y": 833.693576631602
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "41d077aa41374290b3b5e86aa01f06ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1244.82502465664,
        "Y": 836.180059571052
      },
      {
        "Name": "Debug Python No Message",
        "ShowGeometry": true,
        "Id": "7951c1c8b3944ddd8955937634b8efb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1262.94731120837,
        "Y": 1071.92789644289
      }
    ],
    "Annotations": [
      {
        "Id": "b48ffd3dde334e9ea9bad001d7b6b142",
        "Title": "Output",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ce1f24b24e7b45c283973d6ed56c04d8"
        ],
        "HasNestedGroups": false,
        "Left": -966.3127410576,
        "Top": 767.693576631602,
        "Width": 292.80000000000007,
        "Height": 364.19999999999993,
        "FontSize": 30.0,
        "InitialTop": 833.693576631602,
        "InitialHeight": 145.0,
        "TextblockHeight": 56.0,
        "Background": "#FFD8D8D8"
      }
    ],
    "X": 1119.50556610387,
    "Y": -481.093131669833,
    "Zoom": 0.747692817123325
  }
}
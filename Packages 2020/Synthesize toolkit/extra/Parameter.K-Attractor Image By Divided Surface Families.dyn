{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Parameter.K-Attractor Image By Divided Surface Families",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "3d3468809e4740478daa10c30534bc4d",
      "Name": "01.Select Divided Surface Families",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select a divided surface and get its family instances.",
      "SelectedIndex": 0
    },
    {
      "Id": "7228f80293404d8694a122ad67b674e4",
      "Name": "02.Image File",
      "Type": "string",
      "Value": ".\\Image.png",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "9c405c720943473090b9b03f8d76fc8e",
      "Name": "03.Multiplier",
      "Type": "number",
      "Value": "1",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "f72b35b26a2f4dae9cbe5a8a9ab9ef8b",
      "Name": "04.Number of Units in Row (Test Both Rows)",
      "Type": "number",
      "Value": "10",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "5623beecb62543c0bd31f85d863648aa",
      "Name": "05.Flip Image",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    },
    {
      "Id": "d3c504c0a1634c0b83261ced7ff2c818",
      "Name": "06.Parameter",
      "Type": "string",
      "Value": "Height",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "ac1e9548edc847b6901eff2a937a5a00",
      "Name": "07.Minimum Value",
      "Type": "number",
      "Value": "1",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "bb54deb2c0b74c0eb4c752bc1a0a15d9",
      "Name": "08.Maximum Value",
      "Type": "number",
      "Value": "5",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "7f23d1ec5f2f4d2caa2f8fec27e32526",
      "Inputs": [
        {
          "Id": "770a6a3e94ff4ca794bd09ccb2a3f273",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15c4450a1a3242a79a5c50da4377f8d9",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47d09ecf0e6f48b78d8ecf2769158021",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56774eb812734a0990c0f0175e42ccff",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "597def74-6997-4484-bb18-67a97819c8bd",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "493547b0f0734497b78b424584e1a6a2",
      "Inputs": [
        {
          "Id": "45fb8cb80d8a4f679b8e1f3acae26296",
          "Name": "VARtest",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ada7628604cd42618a221162ddf71b7b",
          "Name": "VARtrue",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5505c07f15e4480fb70e2df7b0adf3af",
          "Name": "VARfalse",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f208b0a31c849049248fc7adc51cf91",
          "Name": "VARresult",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "A (hopefully) more robust implementation of ScopeIf. Tests a single boolean and returns a value accordingly."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Id": "1bfb0dd8558d4042ad2741a7d4d86159",
      "Inputs": [
        {
          "Id": "693c6a073fb94cbea6ebd0b860b34fa0",
          "Name": "list",
          "Description": "List to be reversed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12a58cf65b584066b6e86fb3ba290bfb",
          "Name": "list",
          "Description": "Reversed list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing the items of the given list but in reverse order.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "252f89c99a6445f2b2d178027cdbeb53",
      "Inputs": [
        {
          "Id": "c0e01ae0481e40498c157fd82f996149",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9110988fb42487b8a16a18af75c2b38",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a865548c09be412f83af454d5ac43d22",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.MapTo@double,double,double,double,double",
      "Id": "a9520fe3d2ca4fba8624d2099f496334",
      "Inputs": [
        {
          "Id": "0ad75619d42248399dd3406ea3180e44",
          "Name": "rangeMin",
          "Description": "The minimum value of the input range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f85b3a6f2cf243728720c6a4ba6638d1",
          "Name": "rangeMax",
          "Description": "The maximum value of the input range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3dfaf1929ed847d68ff41f58f61a45fd",
          "Name": "inputValue",
          "Description": "The number to be mapped.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4730e1d0768d4b4c988ee9142b77a84b",
          "Name": "targetRangeMin",
          "Description": "The minimum value of the new range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "213cda5529bc420689649f0f9941ac92",
          "Name": "targetRangeMax",
          "Description": "The maximum value of the new range.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f94d769e3fd146038fec26d28bb12d6d",
          "Name": "double",
          "Description": "The mapped value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Maps the input value to a number between targetRangeMin and targetRangeMax.\n\nMath.MapTo (rangeMin: double, rangeMax: double, inputValue: double, targetRangeMin: double, targetRangeMax: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "cf1415576d5543fc82e8c4c8677b247e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "03c18819689b4798b899fec1d5c7746b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50965a4b19dc45d0b68fc069891e1152",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Color.Brightness@DSCore.Color",
      "Id": "93edc392468349a791a1c36c4ef7b3c6",
      "Inputs": [
        {
          "Id": "cdea8dae5b414bd6956968661f040267",
          "Name": "color",
          "Description": "Color to query brightness from\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4157407c6a1b4d099d23ac0f0e07b685",
          "Name": "double",
          "Description": "Brightness value (between 0 and 1 inclusive)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the brightness value for this color.\n\nColor.Brightness (color: Color): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.Image.Pixels@var,int,int",
      "Id": "33087e5a20b3416eac384a07b10fd083",
      "Inputs": [
        {
          "Id": "504e27f65dcd418fb7a998fbbe1d5231",
          "Name": "image",
          "Description": "Image object to get pixel colors from\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "841ca04701ae4e498e70d9257f2b8a48",
          "Name": "xSamples",
          "Description": "Number of sample grid points in the X direction.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "315b044c3a2a4d63aa9b7b80de0dcecd",
          "Name": "ySamples",
          "Description": "Number of sample grid points in the Y direction.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c9a57a0ff944ff2a2cbd57f6ece79fc",
          "Name": "colors",
          "Description": "Colors at the specified grid points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Reads an image file and returns the color values at the specified grid locations.\n\nImage.Pixels (image: var, xSamples: int, ySamples: int): Color[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f91373b8683c46df9d3e1f6fda03bb67",
      "Inputs": [
        {
          "Id": "49be645af54e47f69d4f2fae31539644",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f9c12fbbccb4e5480ee9d1f68651f22",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.Image.ReadFromFile@var",
      "Id": "926d9876811d45b1987358a8cef1611c",
      "Inputs": [
        {
          "Id": "8fe3d1630cb34f45b7b7bbe9aefde515",
          "Name": "file",
          "Description": "File object to load image from\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10b23a49cb0a4248b538032f208d7b9f",
          "Name": "image",
          "Description": "Image object from file",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Loads the file as a bitmap.\n\nImage.ReadFromFile (file: var): var"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "15aca638a7a34c6a8709bb380f6e7cbe",
      "Inputs": [
        {
          "Id": "b0442678bb7a470db21d0a30bd08cf2c",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe59d4b206de460fbdb5592376f3b6a6",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f74901b7e864fd68d5187f7596fa9dd",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "da17207915a54ff09cdc5f551fe31225",
      "Inputs": [
        {
          "Id": "7483d5d6b7bf48fdbc27912964715f36",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3dcd1e0d458491b813175eea2f943dc",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "b1d7607b38124738bfeeb73cd433ba69",
      "Inputs": [
        {
          "Id": "6436febc93054218b2ee731c2017da60",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61e7d0afd4e44692be32cd1d4fd0d214",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "af378e64a66f471087197d3bfaebd899",
      "Inputs": [
        {
          "Id": "d1e1ac4a90e848c6aa44e51440c5f9b7",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c772fc4070340f297379a595eff3e19",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a*b;",
      "Id": "a80c7bb4789f4d04ae5910ea65ad283c",
      "Inputs": [
        {
          "Id": "5d5399ea80d443a7a91e7fbd82b6b8db",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1449162fa8b4d5abd5c33d18f8d817f",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bf171d136ff4a3baaff4a3c23a167f5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSDividedSurfaceFamiliesSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "3d3468809e4740478daa10c30534bc4d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0698648b55b240b1a1e4883977bd4316",
          "Name": "Element",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\karam\\Desktop\\Image.png",
      "InputValue": ".\\Image.png",
      "NodeType": "ExtensionNode",
      "Id": "7228f80293404d8694a122ad67b674e4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c49a7b5543254d3eb8995ddd607aafb5",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "9c405c720943473090b9b03f8d76fc8e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9cb913d267ed4f70859aef934046ebac",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 10.0,
      "Id": "f72b35b26a2f4dae9cbe5a8a9ab9ef8b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e333b2ca8b6b4a23a7103d7aee4c5f75",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "5623beecb62543c0bd31f85d863648aa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dadf7e4e618044a19d0c6d37cacd5264",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Height",
      "Id": "d3c504c0a1634c0b83261ced7ff2c818",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e1cb04763eca44cf91abaae3d0fa4e35",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "ac1e9548edc847b6901eff2a937a5a00",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dd52a9e661ce4ee5815d61525d674a39",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 5.0,
      "Id": "bb54deb2c0b74c0eb4c752bc1a0a15d9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9cbf4578a83d420492e27c030e150835",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "05702df1-2b09-4fc7-a578-83290d1f9291",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8d17ca3b20834921a5a837f5fd14d799",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "645767a9ac334fa6b3cab07649849526",
          "Name": "VAROut",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Debug Python"
    }
  ],
  "Connectors": [
    {
      "Start": "6f208b0a31c849049248fc7adc51cf91",
      "End": "47d09ecf0e6f48b78d8ecf2769158021",
      "Id": "b44ae329fa474ec2a05a51122e926e07",
      "IsHidden": "False"
    },
    {
      "Start": "12a58cf65b584066b6e86fb3ba290bfb",
      "End": "ada7628604cd42618a221162ddf71b7b",
      "Id": "fc8d0fdc09444fe9921e7e96e387c859",
      "IsHidden": "False"
    },
    {
      "Start": "a865548c09be412f83af454d5ac43d22",
      "End": "5505c07f15e4480fb70e2df7b0adf3af",
      "Id": "e592c8fd3b2f43a182e7b338c71331f1",
      "IsHidden": "False"
    },
    {
      "Start": "a865548c09be412f83af454d5ac43d22",
      "End": "693c6a073fb94cbea6ebd0b860b34fa0",
      "Id": "31e2209baf38429e976dfd0e8e56ff37",
      "IsHidden": "False"
    },
    {
      "Start": "f94d769e3fd146038fec26d28bb12d6d",
      "End": "c0e01ae0481e40498c157fd82f996149",
      "Id": "bcc750a9b63f4f2ea6b3893fa790f622",
      "IsHidden": "False"
    },
    {
      "Start": "03c18819689b4798b899fec1d5c7746b",
      "End": "0ad75619d42248399dd3406ea3180e44",
      "Id": "74f9c997e8464c8c947ac983a1be0c0c",
      "IsHidden": "False"
    },
    {
      "Start": "50965a4b19dc45d0b68fc069891e1152",
      "End": "f85b3a6f2cf243728720c6a4ba6638d1",
      "Id": "efc14b5688fe477a92b5fb8204b4b0fe",
      "IsHidden": "False"
    },
    {
      "Start": "4157407c6a1b4d099d23ac0f0e07b685",
      "End": "5d5399ea80d443a7a91e7fbd82b6b8db",
      "Id": "e9cbb2b1448e4c0bba6348af2e4c5647",
      "IsHidden": "False"
    },
    {
      "Start": "9c9a57a0ff944ff2a2cbd57f6ece79fc",
      "End": "cdea8dae5b414bd6956968661f040267",
      "Id": "f7d2825f910e400897a609dd43a07433",
      "IsHidden": "False"
    },
    {
      "Start": "0f9c12fbbccb4e5480ee9d1f68651f22",
      "End": "8fe3d1630cb34f45b7b7bbe9aefde515",
      "Id": "8656d3eaa7b14fec84d47faf8f02a68e",
      "IsHidden": "False"
    },
    {
      "Start": "10b23a49cb0a4248b538032f208d7b9f",
      "End": "504e27f65dcd418fb7a998fbbe1d5231",
      "Id": "60c9f9dfaf914533b93551aeb52df728",
      "IsHidden": "False"
    },
    {
      "Start": "2f74901b7e864fd68d5187f7596fa9dd",
      "End": "7483d5d6b7bf48fdbc27912964715f36",
      "Id": "7c987f7667e5469796971431199cbc71",
      "IsHidden": "False"
    },
    {
      "Start": "2f74901b7e864fd68d5187f7596fa9dd",
      "End": "6436febc93054218b2ee731c2017da60",
      "Id": "fc8d9ebb0ee94ad8b4d6f4bb12a7be72",
      "IsHidden": "False"
    },
    {
      "Start": "a3dcd1e0d458491b813175eea2f943dc",
      "End": "315b044c3a2a4d63aa9b7b80de0dcecd",
      "Id": "2065ce86cd89426d9728f15f35eb6f2e",
      "IsHidden": "False"
    },
    {
      "Start": "61e7d0afd4e44692be32cd1d4fd0d214",
      "End": "d1e1ac4a90e848c6aa44e51440c5f9b7",
      "Id": "c464afdd8f9547e09826db4cd6277f9a",
      "IsHidden": "False"
    },
    {
      "Start": "4c772fc4070340f297379a595eff3e19",
      "End": "841ca04701ae4e498e70d9257f2b8a48",
      "Id": "cf285bf9a55240bbab7f8a8c195e9d4b",
      "IsHidden": "False"
    },
    {
      "Start": "0bf171d136ff4a3baaff4a3c23a167f5",
      "End": "3dfaf1929ed847d68ff41f58f61a45fd",
      "Id": "3b59b939759442008040411f1c51a953",
      "IsHidden": "False"
    },
    {
      "Start": "0698648b55b240b1a1e4883977bd4316",
      "End": "770a6a3e94ff4ca794bd09ccb2a3f273",
      "Id": "eee1de9131f54e718a5ff19cbee36d0c",
      "IsHidden": "False"
    },
    {
      "Start": "0698648b55b240b1a1e4883977bd4316",
      "End": "b0442678bb7a470db21d0a30bd08cf2c",
      "Id": "f3771361459c46538e02a3aff125ca8c",
      "IsHidden": "False"
    },
    {
      "Start": "c49a7b5543254d3eb8995ddd607aafb5",
      "End": "49be645af54e47f69d4f2fae31539644",
      "Id": "78805216e30247fe82428128bfcf92c5",
      "IsHidden": "False"
    },
    {
      "Start": "9cb913d267ed4f70859aef934046ebac",
      "End": "a1449162fa8b4d5abd5c33d18f8d817f",
      "Id": "923ce7167c3c4b47956b232bb528075a",
      "IsHidden": "False"
    },
    {
      "Start": "e333b2ca8b6b4a23a7103d7aee4c5f75",
      "End": "fe59d4b206de460fbdb5592376f3b6a6",
      "Id": "ab485be725ba4ada9161dda0f2cd84fe",
      "IsHidden": "False"
    },
    {
      "Start": "dadf7e4e618044a19d0c6d37cacd5264",
      "End": "45fb8cb80d8a4f679b8e1f3acae26296",
      "Id": "58db2f0042e746899f400b7dcff6e24b",
      "IsHidden": "False"
    },
    {
      "Start": "e1cb04763eca44cf91abaae3d0fa4e35",
      "End": "15c4450a1a3242a79a5c50da4377f8d9",
      "Id": "192c47119c5d45a7baf0723cb4c03aa9",
      "IsHidden": "False"
    },
    {
      "Start": "dd52a9e661ce4ee5815d61525d674a39",
      "End": "4730e1d0768d4b4c988ee9142b77a84b",
      "Id": "00f6ff7f25e94423b4095e1be22f5195",
      "IsHidden": "False"
    },
    {
      "Start": "9cbf4578a83d420492e27c030e150835",
      "End": "213cda5529bc420689649f0f9941ac92",
      "Id": "9e748e777ccc430cb9a419e548def8c5",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "597def74-6997-4484-bb18-67a97819c8bd",
    "05702df1-2b09-4fc7-a578-83290d1f9291"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Synthesize toolkit",
      "Version": "12.5.1",
      "ReferenceType": "Package",
      "Nodes": [
        "493547b0f0734497b78b424584e1a6a2",
        "8d17ca3b20834921a5a837f5fd14d799"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "karam@aecedx.com",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 30.316186904907227,
      "EyeY": 21.921504974365234,
      "EyeZ": 38.867286682128906,
      "LookX": -13.084157943725586,
      "LookY": -34.19355773925781,
      "LookZ": -27.418411254882812,
      "UpX": -0.2531464993953705,
      "UpY": 0.80901700258255,
      "UpZ": -0.5304793119430542
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "7f23d1ec5f2f4d2caa2f8fec27e32526",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 802.685716213362,
        "Y": 1120.48273361136
      },
      {
        "Name": "CW.ScopeIf+",
        "ShowGeometry": true,
        "Id": "493547b0f0734497b78b424584e1a6a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 43.4197238830607,
        "Y": 1019.77599113865
      },
      {
        "Name": "List.Reverse",
        "ShowGeometry": true,
        "Id": "1bfb0dd8558d4042ad2741a7d4d86159",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -344.575926258333,
        "Y": 1296.87243686711
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "252f89c99a6445f2b2d178027cdbeb53",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -675.037869057654,
        "Y": 1127.27468038629
      },
      {
        "Name": "Math.MapTo",
        "ShowGeometry": true,
        "Id": "a9520fe3d2ca4fba8624d2099f496334",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1148.68864843081,
        "Y": 876.142104057624
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "cf1415576d5543fc82e8c4c8677b247e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1401.10886349572,
        "Y": 789.418596306415
      },
      {
        "Name": "Color.Brightness",
        "ShowGeometry": true,
        "Id": "93edc392468349a791a1c36c4ef7b3c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1864.67055202096,
        "Y": 582.469518649683
      },
      {
        "Name": "Image.Pixels",
        "ShowGeometry": true,
        "Id": "33087e5a20b3416eac384a07b10fd083",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2262.59277567692,
        "Y": 524.596363353133
      },
      {
        "Name": "File.FromPath",
        "ShowGeometry": true,
        "Id": "f91373b8683c46df9d3e1f6fda03bb67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3119.32849409438,
        "Y": 778.685614702535
      },
      {
        "Name": "Image.ReadFromFile",
        "ShowGeometry": true,
        "Id": "926d9876811d45b1987358a8cef1611c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2929.04781782334,
        "Y": 646.977824330008
      },
      {
        "Name": "List.Chop",
        "ShowGeometry": true,
        "Id": "15aca638a7a34c6a8709bb380f6e7cbe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3264.87360744315,
        "Y": 269.599309212207
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "da17207915a54ff09cdc5f551fe31225",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2689.83473165063,
        "Y": 302.002092906537
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "b1d7607b38124738bfeeb73cd433ba69",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2936.89235117965,
        "Y": 449.958465733669
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "af378e64a66f471087197d3bfaebd899",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2686.32903830174,
        "Y": 441.416534612832
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a80c7bb4789f4d04ae5910ea65ad283c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1637.8787471032,
        "Y": 687.425705411548
      },
      {
        "Name": "01.Select Divided Surface Families",
        "ShowGeometry": true,
        "Id": "3d3468809e4740478daa10c30534bc4d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5590.89737994304,
        "Y": 320.081029530184
      },
      {
        "Name": "02.Image File",
        "ShowGeometry": true,
        "Id": "7228f80293404d8694a122ad67b674e4",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5549.66239104174,
        "Y": 455.966238349057
      },
      {
        "Name": "03.Multiplier",
        "ShowGeometry": true,
        "Id": "9c405c720943473090b9b03f8d76fc8e",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5544.61893252804,
        "Y": 590.806771784383
      },
      {
        "Name": "04.Number of Units in Row (Test Both Rows)",
        "ShowGeometry": true,
        "Id": "f72b35b26a2f4dae9cbe5a8a9ab9ef8b",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5606.2827857209,
        "Y": 692.360631033491
      },
      {
        "Name": "05.Flip Image",
        "ShowGeometry": true,
        "Id": "5623beecb62543c0bd31f85d863648aa",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5583.02964900286,
        "Y": 865.56643646408
      },
      {
        "Name": "06.Parameter",
        "ShowGeometry": true,
        "Id": "d3c504c0a1634c0b83261ced7ff2c818",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5569.78321688164,
        "Y": 944.802472057762
      },
      {
        "Name": "07.Minimum Value",
        "ShowGeometry": true,
        "Id": "ac1e9548edc847b6901eff2a937a5a00",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5574.1815212037,
        "Y": 1096.47097995954
      },
      {
        "Name": "08.Maximum Value",
        "ShowGeometry": true,
        "Id": "bb54deb2c0b74c0eb4c752bc1a0a15d9",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5575.78361059191,
        "Y": 1174.48132897032
      },
      {
        "Name": "Debug Python",
        "ShowGeometry": false,
        "Id": "8d17ca3b20834921a5a837f5fd14d799",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 694.609148224469,
        "Y": 634.025304641091
      }
    ],
    "Annotations": [
      {
        "Id": "44ad245aaeeb4d31af3f8f66942b5f85",
        "Title": "Input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7228f80293404d8694a122ad67b674e4",
          "9c405c720943473090b9b03f8d76fc8e",
          "f72b35b26a2f4dae9cbe5a8a9ab9ef8b",
          "5623beecb62543c0bd31f85d863648aa",
          "d3c504c0a1634c0b83261ced7ff2c818",
          "ac1e9548edc847b6901eff2a937a5a00",
          "bb54deb2c0b74c0eb4c752bc1a0a15d9",
          "3d3468809e4740478daa10c30534bc4d"
        ],
        "HasNestedGroups": false,
        "Left": -5616.2827857209,
        "Top": 254.08102953018403,
        "Width": 427.1999999999998,
        "Height": 1052.200299440136,
        "FontSize": 30.0,
        "InitialTop": 320.081029530184,
        "InitialHeight": 999.400299440136,
        "TextblockHeight": 56.0,
        "Background": "#FFD8D8D8"
      }
    ],
    "X": 3615.62234720117,
    "Y": -148.689134293365,
    "Zoom": 0.612592682937423
  }
}
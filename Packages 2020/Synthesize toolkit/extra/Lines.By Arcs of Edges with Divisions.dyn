{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Lines.By Arcs of Edges with Divisions",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "a887720a1a364243b601feea7bbf27eb",
      "Name": "01.Select Edges",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select multiple edges.",
      "SelectedIndex": 0
    },
    {
      "Id": "0ffc04c55ac04680bd417ddb714c4e5d",
      "Name": "02.Result Linestyle",
      "Type": "string",
      "Value": "Lines",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "1e09a2b7680e41da8a265981baef5b5a",
      "Name": "03.Let Dynamo Guess ?",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    },
    {
      "Id": "0f4198e328904dbbb4996bf523447cd6",
      "Name": "04.By Number = False | By Distance = True",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    },
    {
      "Id": "36cf510f94694079a50394d8cec58952",
      "Name": "05.Divisions Number/Distance",
      "Type": "number",
      "Value": "25",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Created By Karam Baki : karam@aecedx.com\n# Enable Python support and load DesignScript library\n# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\n\n# EXTENSION Enable ToDSType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Enable Revit Elements\nfrom Revit.Elements import *\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Enable Revit API\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\n\n# Enable DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\ndef tolist(obj1):\n\tif hasattr(obj1,'__iter__'): return obj1\n\telse: return [obj1]\n\ndef normalize(length,nostartend = False,twominonly = False):\n\tif length != None:\n\t\tif length <= 3 and twominonly == False:\n\t\t\tlength = 4\n\t\telif length <= 3 and twominonly == True:\n\t\t\tif length < 2:\n\t\t\t\tlength = 2\n\t\tif nostartend:\n\t\t\tlength += 2\n\t\ta = range(0,int(length))\n\t\tpoints = []\n\t\tamin, amax = min(a), max(a)\n\t\titem = []\n\t\tfor val in a:\n\t\t\titem.append(float(val-amin) / float(amax-amin))\n\telse:\n\t\titem = [None]\n\tif nostartend == True:\n\t\titem.pop(0)\n\t\titem.pop(-1)\n\treturn item\n\ndef fixcurve(crv,div):\n\tnums = normalize(div)\n\tpts = []\n\tfor n in nums:\n\t\tpts.append(dg.Curve.PointAtParameter(crv,n))\n\tcurve = dg.NurbsCurve.ByControlPoints(pts)\n\treturn curve\n\t\ndef spltocurve(crv,numordis,distance):\n\ttry:\n\t\tif \"NurbsCurve\" in crv.ToString() and distance != 0:\n\t\t\tif numordis:\n\t\t\t\tdiv = int(round(crv.Length/distance))\n\t\t\telse:\n\t\t\t\tdiv = int(distance)\n\t\t\tarcs = []\n\t\t\tincrement = 1.0 / div\n\t\t\ttry:\n\t\t\t\ttan = crv.TangentAtParameter(0)\n\t\t\texcept:\n\t\t\t\tcrv = fixcurve(crv,div*10)\n\t\t\t\ttan = crv.TangentAtParameter(0)\n\t\t\tfor j in range(0, div):\n\t\t\t\tincstart = increment * j\n\t\t\t\tincend = increment * (j+1)\n\t\t\t\tptstart = crv.PointAtParameter(incstart)\n\t\t\t\tptend = crv.PointAtParameter(incend)\n\t\t\t\ttry:\n\t\t\t\t\tarc = dg.Arc.ByStartPointEndPointStartTangent(ptstart,ptend,tan)\n\t\t\t\texcept:\n\t\t\t\t\tarc = dg.Line.ByStartPointEndPoint(ptstart,ptend)\n\t\t\t\tarcs.append(arc)\n\t\t\t\ttan = arc.TangentAtParameter(1)\n\t\t\tjoined = dg.PolyCurve.ByJoinedCurves(arcs)\n\t\t\treturn joined\n\t\telse:\n\t\t\treturn crv\n\texcept:\n\t\treturn crv\n\ndef ptsGenerate(poly):\n\treturn [dg.Curve.PointAtParameter(poly,0),dg.Curve.PointAtParameter(poly,0.25),dg.Curve.PointAtParameter(poly,0.5),dg.Curve.PointAtParameter(poly,0.75),dg.Curve.PointAtParameter(poly,1)]\n\nlists = UnwrapElement(tolist(IN[0]))\nnumordis = IN[1]\ndistance = IN[2]\ndynguess = IN[3]\nLineStyle = UnwrapElement(IN[4])\n\nopt1 = Options()\ndoc = DocumentManager.Instance.CurrentDBDocument\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\nview = uidoc.ActiveView\nTransactionManager.Instance.EnsureInTransaction(doc)\nif doc.IsFamilyDocument: \n\tdoc_create = doc.FamilyCreate\nelse: \n\tdoc_create = doc.Create\nfor l in lists:\n\ttry:\n\t\tgeom = l\n\t\tsplitcurve = spltocurve(geom,numordis,distance)\n\t\tif dynguess:\n\t\t\tsplitted = dg.Curve.ApproximateWithArcAndLineSegments(geom)\n\t\telse:\n\t\t\tsplitted = dg.Geometry.Explode(splitcurve)\n\t\tfor s in splitted:\n\t\t\ttry:\n\t\t\t\tmodline = UnwrapElement(Revit.Elements.ModelCurve.ByCurve(s))\n\t\t\texcept:\n\t\t\t\ttry:\n\t\t\t\t\tplane = SketchPlane.Create(doc,dg.PolyCurve.BasePlane(dg.PolyCurve.ByJoinedCurves(splitted)).ToPlane())\n\t\t\t\texcept:\n\t\t\t\t\tjoined = dg.PolyCurve.ByJoinedCurves(splitted)\n\t\t\t\t\ttry:\n\t\t\t\t\t\tplane = SketchPlane.Create(doc,dg.Plane.ByBestFitThroughPoints(ptsGenerate(joined)).ToPlane())\n\t\t\t\t\texcept:\n\t\t\t\t\t\tcontinue\n\t\t\t\tmodline = doc_create.NewModelCurve(s.ToRevitType(),plane)\n\t\t\tmodline.LineStyle = LineStyle\n\texcept:\n\t\tpass\nTransactionManager.Instance.TransactionTaskDone()\n\n# Assign your output to the OUT variable.\nOUT = \"Done\"",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "dfbede1f48314a0c9c4dead283d4d01b",
      "Inputs": [
        {
          "Id": "fc317f17071e421489ad64655b3c8057",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e872b8a26581472fb49f5e61b0191551",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06823206d7974ad48365da2ee9b5ac73",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b907b129cb44c7195dd1f86c3526eb1",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "475ed668ac6844b5bfd3f69ab35b804f",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d69b00277ada429da13d8a8d21e4ab7e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "cfe1610e-2106-4e05-952c-f33e1e5717ff",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "5470f9a07ede4f7eb2b6de4228d595b6",
      "Inputs": [
        {
          "Id": "fc54e374754b49ea89a732a0c1e4a86b",
          "Name": "VARLinestylename",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72251012bdca4c1caedef722b2613c88",
          "Name": "VARLinestylename",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Default Linestyles Name Revit Compatiblity"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementTypes, DSRevitNodesUI",
      "SelectedIndex": 151,
      "SelectedString": "GraphicsStyle",
      "NodeType": "ExtensionNode",
      "Id": "06cc3eadde934905aaea3663197cf2ae",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99746134def843b8b761fe8297a901f6",
          "Name": "Types",
          "Description": "The selected Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All element subclasses."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "b35da786f70c4f47aba8cc150b707ff6",
      "Inputs": [
        {
          "Id": "52cdde5caf0e40f5b518921c7147420e",
          "Name": "element type",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca437f82fac5449a89372b4c7cb82443",
          "Name": "elements",
          "Description": "All elements in the active document of a given type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All elements in the active document of a given class."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "f934b29fccda4a3da15f5fb824f57a9b",
      "Inputs": [
        {
          "Id": "8c08d13896af471f9e31c4e41aeefce6",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "706a9a9c8c9541599c0fa820814e68a5",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "04e56c5d996248319ba29436aad2bf8f",
      "Inputs": [
        {
          "Id": "ff39181579e443a993cabba2d2e0287e",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c5f131eb1fa4706942e961502527aba",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb9c805da19c4de1a54bb933e85f6a96",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "db5c672240ce4824af8cf488b02abcf1",
      "Inputs": [
        {
          "Id": "9763b09aabe54dc3864095e9cb58f12f",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3cd819e04674570b89a20b7a3dd0bea",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26c740e75a944c68aa510cb6f5530dd0",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d49e77e0282444d8d24e4f85dbc3a5c",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "402be616aee84a86b118fd87d6cab931",
      "Inputs": [
        {
          "Id": "8bdca3c19f0847bc8c5cb759ffb7460a",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d6c4bac842ff4d7aae4f272b451c2edb",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Nodes.SelectEdges, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "a887720a1a364243b601feea7bbf27eb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a8dab52f7ac945668c01444c4553771d",
          "Name": "Curves",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Lines",
      "Id": "0ffc04c55ac04680bd417ddb714c4e5d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "45180fe8740b4a7a97ac272c87530e02",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "1e09a2b7680e41da8a265981baef5b5a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4b40b6f241c44fe3b599f44b8e0de199",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "0f4198e328904dbbb4996bf523447cd6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9a01abed73db49299f54cbca12c9aec0",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 25.0,
      "Id": "36cf510f94694079a50394d8cec58952",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eabb228d90eb4659a499708402abaa70",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "e3b15dcf-8a04-4048-81bc-0e3c0480d780",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "5590171cb89444b4bfa668758c7798a2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "de33f2f5edbf4dce971b66e8c2ac50c3",
          "Name": "VAROut",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Debug Python"
    }
  ],
  "Connectors": [
    {
      "Start": "72251012bdca4c1caedef722b2613c88",
      "End": "ff39181579e443a993cabba2d2e0287e",
      "Id": "ed55a89e9f91405b9be303c848048258",
      "IsHidden": "False"
    },
    {
      "Start": "99746134def843b8b761fe8297a901f6",
      "End": "52cdde5caf0e40f5b518921c7147420e",
      "Id": "8042b60ffa554b029064751d630fb728",
      "IsHidden": "False"
    },
    {
      "Start": "ca437f82fac5449a89372b4c7cb82443",
      "End": "8c08d13896af471f9e31c4e41aeefce6",
      "Id": "4204d7848aad40a5a109ad93e592aa68",
      "IsHidden": "False"
    },
    {
      "Start": "ca437f82fac5449a89372b4c7cb82443",
      "End": "9763b09aabe54dc3864095e9cb58f12f",
      "Id": "aca06a1d7d8e40528dca7c566af8d5d4",
      "IsHidden": "False"
    },
    {
      "Start": "706a9a9c8c9541599c0fa820814e68a5",
      "End": "4c5f131eb1fa4706942e961502527aba",
      "Id": "378fa7ff75e6421098980403280111f1",
      "IsHidden": "False"
    },
    {
      "Start": "eb9c805da19c4de1a54bb933e85f6a96",
      "End": "b3cd819e04674570b89a20b7a3dd0bea",
      "Id": "f937227921d64e698d1fcca930864040",
      "IsHidden": "False"
    },
    {
      "Start": "26c740e75a944c68aa510cb6f5530dd0",
      "End": "8bdca3c19f0847bc8c5cb759ffb7460a",
      "Id": "4e4aa813fb2b423783747d7f9c0aee4e",
      "IsHidden": "False"
    },
    {
      "Start": "d6c4bac842ff4d7aae4f272b451c2edb",
      "End": "475ed668ac6844b5bfd3f69ab35b804f",
      "Id": "74da1932a0a9409ba1b7b7fa6b566825",
      "IsHidden": "False"
    },
    {
      "Start": "a8dab52f7ac945668c01444c4553771d",
      "End": "fc317f17071e421489ad64655b3c8057",
      "Id": "64b4335431d446b8a98eaf826aafbf7c",
      "IsHidden": "False"
    },
    {
      "Start": "45180fe8740b4a7a97ac272c87530e02",
      "End": "fc54e374754b49ea89a732a0c1e4a86b",
      "Id": "1672a024bb044b79b784161d228ab4af",
      "IsHidden": "False"
    },
    {
      "Start": "4b40b6f241c44fe3b599f44b8e0de199",
      "End": "3b907b129cb44c7195dd1f86c3526eb1",
      "Id": "3f2788d03d2548e09da99e6cfffd5589",
      "IsHidden": "False"
    },
    {
      "Start": "9a01abed73db49299f54cbca12c9aec0",
      "End": "e872b8a26581472fb49f5e61b0191551",
      "Id": "31fa3d6aea3f4f5f8d56ed69d4066328",
      "IsHidden": "False"
    },
    {
      "Start": "eabb228d90eb4659a499708402abaa70",
      "End": "06823206d7974ad48365da2ee9b5ac73",
      "Id": "b1300004fa7a4f1faf5a3018a4871998",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "cfe1610e-2106-4e05-952c-f33e1e5717ff",
    "e3b15dcf-8a04-4048-81bc-0e3c0480d780"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Synthesize toolkit",
      "Version": "12.5.1",
      "ReferenceType": "Package",
      "Nodes": [
        "5470f9a07ede4f7eb2b6de4228d595b6",
        "5590171cb89444b4bfa668758c7798a2"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "karam@aecedx.com",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 105.0463638305664,
      "EyeY": 37.4813346862793,
      "EyeZ": -173.44400024414062,
      "LookX": -36.403114318847656,
      "LookY": -33.4813346862793,
      "LookZ": 13.473600387573242,
      "UpX": -0.44605210423469543,
      "UpY": 0.8796485662460327,
      "UpZ": 0.1650937795639038
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "dfbede1f48314a0c9c4dead283d4d01b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1792.71782784313,
        "Y": -394.531324014273
      },
      {
        "Name": "Default Linestyles Name Revit Compatiblity",
        "ShowGeometry": true,
        "Id": "5470f9a07ede4f7eb2b6de4228d595b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 73.7834134815057,
        "Y": -74.1211863511565
      },
      {
        "Name": "Element Types",
        "ShowGeometry": true,
        "Id": "06cc3eadde934905aaea3663197cf2ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 150.422448596916,
        "Y": 92.8181178140859
      },
      {
        "Name": "All Elements of Type",
        "ShowGeometry": true,
        "Id": "b35da786f70c4f47aba8cc150b707ff6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 496.961064709752,
        "Y": 55.49921833698
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "f934b29fccda4a3da15f5fb824f57a9b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 750.549133461944,
        "Y": 51.3958515286922
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "04e56c5d996248319ba29436aad2bf8f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 987.723734980985,
        "Y": -21.6440776588325
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "db5c672240ce4824af8cf488b02abcf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1267.57335130622,
        "Y": -147.207101992442
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "402be616aee84a86b118fd87d6cab931",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1534.27524010268,
        "Y": -103.252889508202
      },
      {
        "Name": "01.Select Edges",
        "ShowGeometry": true,
        "Id": "a887720a1a364243b601feea7bbf27eb",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -374.973790411151,
        "Y": -502.573348426003
      },
      {
        "Name": "02.Result Linestyle",
        "ShowGeometry": true,
        "Id": "0ffc04c55ac04680bd417ddb714c4e5d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -357.074657428672,
        "Y": -370.471312563199
      },
      {
        "Name": "03.Let Dynamo Guess ?",
        "ShowGeometry": true,
        "Id": "1e09a2b7680e41da8a265981baef5b5a",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -362.842983114069,
        "Y": -291.355605056302
      },
      {
        "Name": "04.By Number = False | By Distance = True",
        "ShowGeometry": true,
        "Id": "0f4198e328904dbbb4996bf523447cd6",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -416.575887531848,
        "Y": -193.753739497619
      },
      {
        "Name": "05.Divisions Number/Distance",
        "ShowGeometry": true,
        "Id": "36cf510f94694079a50394d8cec58952",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -382.819336837155,
        "Y": -120.415588970381
      },
      {
        "Name": "Debug Python No Message",
        "ShowGeometry": true,
        "Id": "5590171cb89444b4bfa668758c7798a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1776.17182019258,
        "Y": -74.1753688999582
      }
    ],
    "Annotations": [
      {
        "Id": "daae93c10a094fd0874f8c4d69deaec3",
        "Title": "Input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1e09a2b7680e41da8a265981baef5b5a",
          "36cf510f94694079a50394d8cec58952",
          "0f4198e328904dbbb4996bf523447cd6",
          "a887720a1a364243b601feea7bbf27eb",
          "0ffc04c55ac04680bd417ddb714c4e5d"
        ],
        "HasNestedGroups": false,
        "Left": -426.575887531848,
        "Top": -568.573348426003,
        "Width": 410.4,
        "Height": 579.957759455622,
        "FontSize": 30.0,
        "InitialTop": -502.573348426003,
        "InitialHeight": 527.157759455622,
        "TextblockHeight": 56.0,
        "Background": "#FFD8D8D8"
      }
    ],
    "X": 468.9324450219041,
    "Y": 552.1160622930231,
    "Zoom": 0.888234375288633
  }
}
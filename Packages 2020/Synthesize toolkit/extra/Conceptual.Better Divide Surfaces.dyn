{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Conceptual.Better Divide Surfaces",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "04f1c08807d8407193060bf65646ed3f",
      "Name": "01.Select Faces",
      "Type": "hostSelection",
      "Value": "",
      "Description": "Select multiple faces from the Revit document.",
      "SelectedIndex": 0
    },
    {
      "Id": "52fdb65194f9416bb36fe29d5b68187a",
      "Name": "02.Fetch Whole Body ?",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    },
    {
      "Id": "6e11d130ba4a42c3965d15b57f8cf2ef",
      "Name": "03.Faces Filter (1 = Vertical Faces | 2 = Horizontal Up Faces | 3 = Horizontal Down Faces | 4 = All Faces)",
      "Type": "number",
      "Value": "4",
      "MaximumValue": 4.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values.",
      "SelectedIndex": 0
    },
    {
      "Id": "d0fb587dfeba43afb59a383ebfa40960",
      "Name": "04.U Number",
      "Type": "number",
      "Value": "10",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "b8dfa816b740471383d4e3d517538142",
      "Name": "05.V Number",
      "Type": "number",
      "Value": "10",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\n# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\n\n# EXTENSION Enable ToDSType\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Enable Revit Elements\nfrom Revit.Elements import *\n\n# EXTENSION Enable Geometry Conversion Methods\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Enable Revit API\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\n\n# Enable DocumentManager and TransactionManager\nclr.AddReference('RevitServices')\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Enable ICollection List Translate\nclr.AddReference(\"System\")\nimport System.Collections.Generic\nfrom System.Collections.Generic import List\n\ndataEnteringNode = IN\n# Use UnwrapElement(IN[0]) When Translating From Dynamo to Revit\nfacesref=UnwrapElement(IN[0])\nudiv = IN[1]\nvdiv = IN[2]\n# Choose The Current Document\ndoc = DocumentManager.Instance.CurrentDBDocument\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\n# Create Empty List\nresult = []\nnames = []\n# Start a Transaction with Current Document (doc)\nTransactionManager.Instance.EnsureInTransaction(doc)\nfor f in facesref:\n\ttry:\n\t\tdivsurf = DividedSurface.Create(doc,f)\n\t\ttry:\n\t\t\tdivsurf.get_Parameter(BuiltInParameter.SPACING_NUM_DIVISIONS_U).Set(udiv)\n\t\t\tdivsurf.get_Parameter(BuiltInParameter.SPACING_NUM_DIVISIONS_V).Set(vdiv)\n\t\texcept:\n\t\t\tpass\n\t\tresult.append(divsurf)\n\texcept:\n\t\tdivsurf = DividedSurface.GetDividedSurfaceForReference(doc,f)\n\t\tresult.append(divsurf)\n\n# End the Transaction with Current Document ()\nTransactionManager.Instance.TransactionTaskDone()\n\n\n# Assign your output to the OUT variable.\nOUT = result",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "4afebbe796ea4467b2a08811af56bff7",
      "Inputs": [
        {
          "Id": "9e3bfda1d4d34625991a1be1fabcf21b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db8f42ea80944713b29925c23a1880c9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "655c5c94f98b447e9d23558a4db98e59",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62effdb53d614d06a4e240ac15dd3f21",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Nodes.SelectFaces, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "04f1c08807d8407193060bf65646ed3f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cb903ad2aee943a491fa52fc4a0a8ed2",
          "Name": "Surfaces",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "52fdb65194f9416bb36fe29d5b68187a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2c89df815d874c959a72ff6e0cac68fa",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 4,
      "MaximumValue": 4,
      "MinimumValue": 1,
      "StepValue": 1,
      "Id": "6e11d130ba4a42c3965d15b57f8cf2ef",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "011204d311db4962b36d76dd55a11f6f",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 10.0,
      "Id": "d0fb587dfeba43afb59a383ebfa40960",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34c1d408add6493e9fdff4ba39d3c2af",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 10.0,
      "Id": "b8dfa816b740471383d4e3d517538142",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "60931edfa0684392a590844fc4d2f4c3",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "e3b15dcf-8a04-4048-81bc-0e3c0480d780",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "5a03bc441fd24ff9a0646f758b4f70f2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "06437fdd04ca477f8f98cb102c5e27fc",
          "Name": "VAROut",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Debug Python"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "89c1879e-a7fc-45e2-abc1-58d78c9cc9a5",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "9bfbbf6f81104b00bdf2481773f392d8",
      "Inputs": [
        {
          "Id": "3f21e2d49f904afd97b37ea3fcefd4a8",
          "Name": "VARSurfaces",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0673e7725fcf43c584115567c4d5efdf",
          "Name": "VARFetchWholeBody",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "718e2abb1490491aba1ff4b7cca4b22d",
          "Name": "VAROrienataion",
          "Description": "int\nDefault value : 4",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34c167ee137e44b68ca39e831e6a485c",
          "Name": "VARBruteForceGeometryReferencesWillNotWork",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cecbe9d3823f48c99a888224af5fc885",
          "Name": "VARDynamoFace",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6b13f9838c34ff19ce89d1af33e5265",
          "Name": "VARRevitFaceReference",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "All Surfaces or Surface Filtering"
    }
  ],
  "Connectors": [
    {
      "Start": "cb903ad2aee943a491fa52fc4a0a8ed2",
      "End": "3f21e2d49f904afd97b37ea3fcefd4a8",
      "Id": "defa0fce7d044befb2e2b36e4bdac02b",
      "IsHidden": "False"
    },
    {
      "Start": "2c89df815d874c959a72ff6e0cac68fa",
      "End": "0673e7725fcf43c584115567c4d5efdf",
      "Id": "4812df56e70340d0b7a76d62bb3aeff7",
      "IsHidden": "False"
    },
    {
      "Start": "011204d311db4962b36d76dd55a11f6f",
      "End": "718e2abb1490491aba1ff4b7cca4b22d",
      "Id": "7791f02bec9645f28ec24c79dc13ee3e",
      "IsHidden": "False"
    },
    {
      "Start": "34c1d408add6493e9fdff4ba39d3c2af",
      "End": "db8f42ea80944713b29925c23a1880c9",
      "Id": "80cb113b58124d47864556a0cc14dbe3",
      "IsHidden": "False"
    },
    {
      "Start": "60931edfa0684392a590844fc4d2f4c3",
      "End": "655c5c94f98b447e9d23558a4db98e59",
      "Id": "3307d61129e1458abfe1e52a890b43d5",
      "IsHidden": "False"
    },
    {
      "Start": "e6b13f9838c34ff19ce89d1af33e5265",
      "End": "9e3bfda1d4d34625991a1be1fabcf21b",
      "Id": "c330f4327b0f4a9399992312d5b83318",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "e3b15dcf-8a04-4048-81bc-0e3c0480d780",
    "89c1879e-a7fc-45e2-abc1-58d78c9cc9a5"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Synthesize toolkit",
      "Version": "12.5.1",
      "ReferenceType": "Package",
      "Nodes": [
        "5a03bc441fd24ff9a0646f758b4f70f2",
        "9bfbbf6f81104b00bdf2481773f392d8"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "karam@aecedx.com",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "4afebbe796ea4467b2a08811af56bff7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 823.235859866193,
        "Y": 365.490694240414
      },
      {
        "Name": "01.Select Faces",
        "ShowGeometry": true,
        "Id": "04f1c08807d8407193060bf65646ed3f",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -717.837353485147,
        "Y": 166.175838040301
      },
      {
        "Name": "02.Fetch Whole Body ?",
        "ShowGeometry": true,
        "Id": "52fdb65194f9416bb36fe29d5b68187a",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -726.601443179551,
        "Y": 299.236556655376
      },
      {
        "Name": "03.Faces Filter (1 = Vertical Faces | 2 = Horizontal Up Faces | 3 = Horizontal Down Faces | 4 = All Faces)",
        "ShowGeometry": true,
        "Id": "6e11d130ba4a42c3965d15b57f8cf2ef",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -927.764736616041,
        "Y": 401.975274486646
      },
      {
        "Name": "04.U Number",
        "ShowGeometry": true,
        "Id": "d0fb587dfeba43afb59a383ebfa40960",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -691.85440309474,
        "Y": 501.771226606905
      },
      {
        "Name": "05.V Number",
        "ShowGeometry": true,
        "Id": "b8dfa816b740471383d4e3d517538142",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -687.877258804625,
        "Y": 564.762379579015
      },
      {
        "Name": "Debug Python No Message",
        "ShowGeometry": true,
        "Id": "5a03bc441fd24ff9a0646f758b4f70f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 388.276173927215,
        "Y": 600.932710208006
      },
      {
        "Name": "All Surfaces or Surface Filtering",
        "ShowGeometry": true,
        "Id": "9bfbbf6f81104b00bdf2481773f392d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 210.179955787213,
        "Y": 228.847951518003
      }
    ],
    "Annotations": [
      {
        "Id": "c28ebe72733e4747abb8e7f71c73793e",
        "Title": "Input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "04f1c08807d8407193060bf65646ed3f",
          "52fdb65194f9416bb36fe29d5b68187a",
          "6e11d130ba4a42c3965d15b57f8cf2ef",
          "d0fb587dfeba43afb59a383ebfa40960",
          "b8dfa816b740471383d4e3d517538142"
        ],
        "HasNestedGroups": false,
        "Left": -937.764736616041,
        "Top": 100.17583804030099,
        "Width": 860.0,
        "Height": 596.386541538714,
        "FontSize": 30.0,
        "InitialTop": 166.175838040301,
        "InitialHeight": 543.5865415387141,
        "TextblockHeight": 56.0,
        "Background": "#FFD8D8D8"
      }
    ],
    "X": 566.845769172422,
    "Y": 94.5582915626055,
    "Zoom": 0.56284405820127
  }
}
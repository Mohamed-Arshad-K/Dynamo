{
  "Uuid": "ba9219c9-e6c5-4641-b0ca-dee2c1954492",
  "IsCustomNode": true,
  "Category": "Synthesize.Automate.Geometry",
  "Description": "Element.Geometry With Detail Level",
  "Name": "Element.Geometry With Detail Level",
  "ElementResolver": {
    "ResolutionMap": {
      "Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Created By Karam Baki, karam@aecedx.com\nimport clr\nimport System\nfrom System.Collections.Generic import *\n\nfrom itertools import repeat\n\npf_path = System.Environment.GetFolderPath(System.Environment.SpecialFolder.ProgramFilesX86)\nimport sys\nsys.path.append('%s\\IronPython 2.7\\Lib' %pf_path)\nimport traceback\nimport random\nimport string\n\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\nfrom Autodesk.DesignScript.Geometry import Point as DynPoint\nfrom Autodesk.DesignScript.Geometry import Line as DynLine\nfrom Autodesk.DesignScript.Geometry import Curve as DynCurve\nfrom Autodesk.DesignScript import Geometry as dg\n\n\nclr.AddReference('RevitServices')\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference('RevitAPI')\nfrom Autodesk.Revit.DB import *\nfrom Autodesk.Revit.DB.Structure import StructuralType\n\nclr.AddReference('RevitNodes')\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\ndef tolist(obj1):\n\tif hasattr(obj1,'__iter__'): return obj1\n\telse: return [obj1]\n\ndef flatten(x):\n    result = []\n    try:\n    \tfor el in x:\n        \tif hasattr(el, \"__iter__\") and not isinstance(el, basestring):\n        \t    result.extend(flatten(el))\n        \telse:\n        \t    result.append(el)\n    except:\n    \tresult = x\n    return result\n    \ndef analgeom(elem):\n\tresult = []\n\ttry:\n\t\tbreakstatus = False\n\t\tgeoms = elem.get_Geometry(opt1)\n\t\textracted = []\n\t\tfor e in geoms:\n\t\t\tif e.ToString() == \"Autodesk.Revit.DB.GeometryInstance\":\n\t\t\t\ttry:\n\t\t\t\t\textracted.append(e.GetInstanceGeometry())\n\t\t\t\texcept:\n\t\t\t\t\tpass\n\t\t\telif e.ToString() == \"Autodesk.Revit.DB.Solid\":\n\t\t\t\textracted.append(e)\n\t\tif len(extracted) == 0:\n\t\t\tbreakstatus = True\n\t\telse:\n\t\t\textracted = flatten(extracted)\n\t\t\tgeoms = extracted\n\t\tif breakstatus == False:\n\t\t\tfor e in geoms:\n\t\t\t\ttry:\n\t\t\t\t\tif e.ToString() == \"Autodesk.Revit.DB.Solid\":\n\t\t\t\t\t\tattempt = e.ToProtoType()\n\t\t\t\t\t\tif attempt == None:\n\t\t\t\t\t\t\tif len(result) != 0:\n\t\t\t\t\t\t\t\tfor r in result:\n\t\t\t\t\t\t\t\t\ttry: r.Dispose()\n\t\t\t\t\t\t\t\t\texcept: pass\n\t\t\t\t\t\t\treturn False\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tresult.append(attempt)\t\n\t\t\t\texcept:\n\t\t\t\t\tif len(result) != 0:\n\t\t\t\t\t\tfor r in result:\n\t\t\t\t\t\t\ttry: r.Dispose()\n\t\t\t\t\t\t\texcept: pass\n\t\t\t\t\t\tresult = []\n\t\t\t\t\t\tbreak\n\t\tif len(result) == 0:\n\t\t\treturn False\n\t\telse:\n\t\t\tnewresult = []\n\t\t\tfor e in result:\n\t\t\t\tif e != None:\n\t\t\t\t\tnewresult.append(e)\n\t\t\tif len(newresult) == 0:\n\t\t\t\treturn False\n\t\t\telse:\n\t\t\t\treturn newresult\n\texcept:\n\t\treturn \"Fail\"\n\ngeom = UnwrapElement(IN[0])\ndetail_level = UnwrapElement(IN[1])\nincludehiddengeom = IN[2]\n\nif geom != None:\n\tgeom = tolist(geom)\nelse:\n\tpass\n\ntemp_path = System.IO.Path.GetTempPath()\nsatOpt = SATExportOptions()\nopt1 = Options()\n\nif includehiddengeom == True:\n\topt1.IncludeNonVisibleObjects = True\ndetail = detail_level.ToString()\nif detail == \"Coarse\":\n\topt1.DetailLevel = ViewDetailLevel.Coarse\nelif detail == \"Medium\":\n\topt1.DetailLevel = ViewDetailLevel.Medium\nelif detail == \"Fine\":\n\topt1.DetailLevel = ViewDetailLevel.Fine\n\nresult = []\nfor g in geom:\n\tresult.append(analgeom(g))\n\nOUT = result\nsatOpt.Dispose()\nopt1.Dispose()",
      "VariableInputPorts": true,
      "Id": "bbe005eab13e4cf286d52c3e60234af6",
      "Inputs": [
        {
          "Id": "739b3a39d2b94d13890ca9dc1f0aa0c8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7fc563e351f54b278a4c583c3ffb83e7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69b6c95830244f07a7f7c8053211a233",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65a7c9aac973443bb1bd899a8723eb16",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARElements",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "26d7f804a1374a64a4e4f99ec826b3e6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d1481628ff849a59702bc98fd184143",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VAROut",
      "Id": "9f8ceee19786484aaa2014043ac674f4",
      "Inputs": [
        {
          "Id": "b4e1208a24894a3ebee0d5b59aa72677",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARDetailLevel",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "4c8c1e934cac419fb9918aa463c4d87e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "44be3c255fee41e099db509a03b6cd2f",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARIncludeHiddenGeometry",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": ""
      },
      "Id": "65318140bbb444fd80b613a6234c6518",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f1c01d813984c2093434863698c71a3",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "65a7c9aac973443bb1bd899a8723eb16",
      "End": "b4e1208a24894a3ebee0d5b59aa72677",
      "Id": "1b7b308810174d648eaa4c79789c0a46"
    },
    {
      "Start": "0d1481628ff849a59702bc98fd184143",
      "End": "739b3a39d2b94d13890ca9dc1f0aa0c8",
      "Id": "ff46720c60b04568a229aa0c87062e5a"
    },
    {
      "Start": "44be3c255fee41e099db509a03b6cd2f",
      "End": "7fc563e351f54b278a4c583c3ffb83e7",
      "Id": "f7933e32d0074a6ba1fed783c90519f6"
    },
    {
      "Start": "7f1c01d813984c2093434863698c71a3",
      "End": "69b6c95830244f07a7f7c8053211a233",
      "Id": "c4f6722907f442009965431ca286351e"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -266.70199584960938,
      "EyeY": 80.576728820800781,
      "EyeZ": 158.23513793945313,
      "LookX": 62.164787292480469,
      "LookY": -80.576728820800781,
      "LookZ": -110.82452392578125,
      "UpX": 0.16732330620288849,
      "UpY": 0.93969261646270752,
      "UpZ": -0.29829630255699158
    },
    "NodeViews": [
      {
        "Id": "bbe005eab13e4cf286d52c3e60234af6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 757.948008178928,
        "Y": 40.0070131781725
      },
      {
        "Id": "26d7f804a1374a64a4e4f99ec826b3e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 305.088053455817,
        "Y": 19.6831002229559
      },
      {
        "Id": "9f8ceee19786484aaa2014043ac674f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 957.748008178928,
        "Y": 0.0
      },
      {
        "Id": "4c8c1e934cac419fb9918aa463c4d87e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 265.392470061411,
        "Y": 128.289961552264
      },
      {
        "Id": "65318140bbb444fd80b613a6234c6518",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 156.349539376541,
        "Y": 248.306157208974
      }
    ],
    "Annotations": [],
    "X": -109.742631839384,
    "Y": 134.347829595397,
    "Zoom": 0.894168083312076
  }
}
{
  "Uuid": "3fa33a60-7628-4b10-a4a9-f42fae77d910",
  "IsCustomNode": true,
  "Category": "Synthesize.Packages.LunchBox.Archive.Geometry.Panel",
  "Description": "Create a Diamond XYZ grid on a face.  The face surface must have an untrimmed UV parameter space.",
  "Name": "LB.LunchBox Diamond Grid by Face",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "bf01bba54ea54bc4aa4980150afa9994",
      "Name": "Number",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number."
    },
    {
      "Id": "58e117ca0d7b4f43af572aa50e01dd94",
      "Name": "Number",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number."
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARSurface",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "8d85fb30bc8643bd92882a1ced4469d7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "612540432dfb4c5299e0a4a5d1208ce5",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARU",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "5b620cf9cc7c44559c07c693d820aef8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4097d9c0693140c6a5bf29c9111bfb77",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARV",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "d3b4a7b77a5844b89aec60e61cd9bcf6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8f7d58ff9cac4f929aa0638b6d942d82",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARAPanelPts",
      "Id": "de1e1cf3a58c411cb29250763e6bf743",
      "Inputs": [
        {
          "Id": "086003537c0e4c82a1d08cacd4c782f3",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a2ac0681eed444648e366e4a96f5472f",
      "Inputs": [
        {
          "Id": "2e0ff79109844632a7528efaebebae95",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e93860ff1fe74c9dace23c42a868b81a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39546d9425384bada1a2833855071e1d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "bf01bba54ea54bc4aa4980150afa9994",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1ea566fd33c34777a103a9b941f434ed",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Nathan Miller, 2013\n# The Proving Ground, http://theprovingground.org\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n\n# Panel division class\nclass PanelDivision:\n\t\n\t# divide surface\n\tdef DiamondEdgeDivision(self, srf, udiv, vdiv):\n\t\tustep = 1.0/udiv\n\t\tvstep = 1.0/vdiv\n\t\t\n\t\tquads = []\n\t\tpolys = []\n\t\tpanels = []\n\t\tfor i in range(0,int(udiv+1)):\n\t\t\tfor j in range(0,int(vdiv+1)):\n\t\t\t\tif (i+j)%2 == 0:\n\t\t\t\t\tptA = srf.PointAtParameter(0,0)\n\t\t\t\t\tptB = srf.PointAtParameter(0,0)\n\t\t\t\t\tptC = srf.PointAtParameter(0,0)\n\t\t\t\t\tptD = srf.PointAtParameter(0,0)\n\t\t\t\t\n\t\t\t\t\tif i>0:\n\t\t\t\t\t\tptA = srf.PointAtParameter((i-1)*ustep,j*vstep)\n\t\t\t\t\telse:\n\t\t\t\t\t\tptB = srf.PointAtParameter(i*ustep,j*vstep)\n\t\t\t\t\t\n\t\t\t\t\tif j>0:\n\t\t\t\t\t\tptB = srf.PointAtParameter(i*ustep,(j-1)*vstep)\n\t\t\t\t\telse:\n\t\t\t\t\t\tptB = srf.PointAtParameter(i*ustep,j*vstep)\n\t\t\t\t\t\t\n\t\t\t\t\tif i<udiv:\n\t\t\t\t\t\tptC = srf.PointAtParameter((i+1)*ustep,j*vstep)\n\t\t\t\t\telse:\n\t\t\t\t\t\tptC = srf.PointAtParameter(i*ustep,j*vstep)\n\t\t\t\t\t\n\t\t\t\t\tif j<=(vdiv -1):\n\t\t\t\t\t\tptD = srf.PointAtParameter(i*ustep,(j+1)*vstep)\n\t\t\t\t\telse:\n\t\t\t\t\t\tptD = srf.PointAtParameter(i*ustep,j*vstep)\n\t\t\t\t\t\t\n\t\t\t\t\tif i>0 and j>0 and i<udiv and j<vdiv:\n\t\t\t\t\t\tquad = []\n\t\t\t\t\telse:\n\t\t\t\t\t\tif i==0 and j==0:\n\t\t\t\t\t\t\tquad = []\n\t\t\t\t\t\t\t#Append to quad\n\t\t\t\t\t\t\tquad.append(ptB)\n\t\t\t\t\t\t\tquad.append(ptC)\n\t\t\t\t\t\t\tquad.append(ptD)\n\t\t\t\t\t\t\t#Append quads\n\t\t\t\t\t\t\tquads.append(quad)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#polygons\n\t\t\t\t\t\t\tpoly = Polygon.ByPoints(quad)\n\t\t\t\t\t\t\tpolys.append(poly)\n\t\t\t\t\n\t\t\t\t\t\t\t#panels\n\t\t\t\t\t\t\tpanel = Surface.ByPerimeterPoints(quad)\n\t\t\t\t\t\t\tpanels.append(panel)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif i==0 and j==vdiv:\n\t\t\t\t\t\t\tquad = []\n\t\t\t\t\t\t\t#Append to quad\n\t\t\t\t\t\t\tquad.append(ptB)\n\t\t\t\t\t\t\tquad.append(ptC)\n\t\t\t\t\t\t\tquad.append(ptD)\n\t\t\t\t\t\t\t#Append quads\n\t\t\t\t\t\t\tquads.append(quad)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#polygons\n\t\t\t\t\t\t\tpoly = Polygon.ByPoints(quad)\n\t\t\t\t\t\t\tpolys.append(poly)\n\t\t\t\t\n\t\t\t\t\t\t\t#panels\n\t\t\t\t\t\t\tpanel = Surface.ByPerimeterPoints(quad)\n\t\t\t\t\t\t\tpanels.append(panel)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif i==udiv and j==0:\n\t\t\t\t\t\t\tquad = []\n\t\t\t\t\t\t\t#Append to quad\n\t\t\t\t\t\t\tquad.append(ptC)\n\t\t\t\t\t\t\tquad.append(ptD)\n\t\t\t\t\t\t\tquad.append(ptA)\n\t\t\t\t\t\t\t#Append quads\n\t\t\t\t\t\t\tquads.append(quad)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#polygons\n\t\t\t\t\t\t\tpoly = Polygon.ByPoints(quad)\n\t\t\t\t\t\t\tpolys.append(poly)\n\t\t\t\t\n\t\t\t\t\t\t\t#panels\n\t\t\t\t\t\t\tpanel = Surface.ByPerimeterPoints(quad)\n\t\t\t\t\t\t\tpanels.append(panel)\n\t\t\t\t\t\t\n\t\t\t\t\t\tif i==udiv and j==vdiv:\n\t\t\t\t\t\t\tquad = []\n\t\t\t\t\t\t\t#Append to quad\n\t\t\t\t\t\t\tquad.append(ptA)\n\t\t\t\t\t\t\tquad.append(ptB)\n\t\t\t\t\t\t\tquad.append(ptC)\n\t\t\t\t\t\t\t#Append quads\n\t\t\t\t\t\t\tquads.append(quad)\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#polygons\n\t\t\t\t\t\t\tpoly = Polygon.ByPoints(quad)\n\t\t\t\t\t\t\tpolys.append(poly)\n\t\t\t\t\n\t\t\t\t\t\t\t#panels\n\t\t\t\t\t\t\tpanel = Surface.ByPerimeterPoints(quad)\n\t\t\t\t\t\t\tpanels.append(panel)\n\t\t\t\t\t\t\n\t\t\t\t\t\tif i == 0 and j > 0 and j < vdiv:\n\t\t\t\t\t\t\tquad = []\n\t\t\t\t\t\t\t#Append to quad\n\t\t\t\t\t\t\tquad.append(ptB)\n\t\t\t\t\t\t\tquad.append(ptC)\n\t\t\t\t\t\t\tquad.append(ptD)\n\t\t\t\t\t\t\t#Append quads\n\t\t\t\t\t\t\tquads.append(quad)\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#polygons\n\t\t\t\t\t\t\tpoly = Polygon.ByPoints(quad)\n\t\t\t\t\t\t\tpolys.append(poly)\n\t\t\t\t\n\t\t\t\t\t\t\t#panels\n\t\t\t\t\t\t\tpanel = Surface.ByPerimeterPoints(quad)\n\t\t\t\t\t\t\tpanels.append(panel)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif i == udiv and j > 0 and j < vdiv:\n\t\t\t\t\t\t\tquad = []\n\t\t\t\t\t\t\t#Append to quad\n\t\t\t\t\t\t\tquad.append(ptA)\n\t\t\t\t\t\t\tquad.append(ptB)\n\t\t\t\t\t\t\tquad.append(ptD)\n\t\t\t\t\t\t\t#Append quads\n\t\t\t\t\t\t\tquads.append(quad)\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#polygons\n\t\t\t\t\t\t\tpoly = Polygon.ByPoints(quad)\n\t\t\t\t\t\t\tpolys.append(poly)\n\t\t\t\t\n\t\t\t\t\t\t\t#panels\n\t\t\t\t\t\t\tpanel = Surface.ByPerimeterPoints(quad)\n\t\t\t\t\t\t\tpanels.append(panel)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif j == 0 and i > 0 and i < udiv:\n\t\t\t\t\t\t\tquad = []\n\t\t\t\t\t\t\t#Append to quad\n\t\t\t\t\t\t\tquad.append(ptA)\n\t\t\t\t\t\t\tquad.append(ptC)\n\t\t\t\t\t\t\tquad.append(ptD)\n\t\t\t\t\t\t\t#Append quads\n\t\t\t\t\t\t\tquads.append(quad)\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#polygons\n\t\t\t\t\t\t\tpoly = Polygon.ByPoints(quad)\n\t\t\t\t\t\t\tpolys.append(poly)\n\t\t\t\t\n\t\t\t\t\t\t\t#panels\n\t\t\t\t\t\t\tpanel = Surface.ByPerimeterPoints(quad)\n\t\t\t\t\t\t\tpanels.append(panel)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif j == vdiv and i > 0 and i < udiv:\n\t\t\t\t\t\t\tquad = []\n\t\t\t\t\t\t\t#Append to quad\n\t\t\t\t\t\t\tquad.append(ptA)\n\t\t\t\t\t\t\tquad.append(ptB)\n\t\t\t\t\t\t\tquad.append(ptC)\n\t\t\t\t\t\t\t#Append quads\n\t\t\t\t\t\t\tquads.append(quad)\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#polygons\n\t\t\t\t\t\t\tpoly = Polygon.ByPoints(quad)\n\t\t\t\t\t\t\tpolys.append(poly)\n\t\t\t\t\n\t\t\t\t\t\t\t#panels\n\t\t\t\t\t\t\tpanel = Surface.ByPerimeterPoints(quad)\n\t\t\t\t\t\t\tpanels.append(panel)\n\t\tself.panels = panels\n\t\tself.quads = quads\n\t\tself.polys = polys\n\n#Main code\nsrf = IN[0]\nudiv = IN[1]\nvdiv = IN[2]\n\nquads = []\npolys = []\npanels = []\n\nfor k in range(0, len(srf)):\n\ts = srf[k]\n\tu = udiv[k]\n\tv = vdiv[k]\n\t\t\t\n\tdivide = PanelDivision()\n\tdivide.DiamondEdgeDivision(s,u,v)\n\t\t\t\t\t\n\tquads.append(divide.quads)\n\tpanels.append(divide.panels)\n\tpolys.append(divide.polys)\n\t\noutput = []\noutput.append(quads)\noutput.append(polys)\noutput.append(panels)\n\n#Assign your output to the OUT variable\nOUT = output",
      "VariableInputPorts": true,
      "Id": "1f5855decde84de3a356d6c95fdef150",
      "Inputs": [
        {
          "Id": "6fb376b484af4b789791c0192a71dee6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f96e6e9159ad4d5781cf463876e940a7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dfd0081e802941ed9a311d241e5aa65d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4d103c69eb542dabfbf3019aac7c516",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright(c) 2014, Nathan Miller\n# The Proving Ground, http://theprovingground.org\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Panel division class\nclass PanelDivision:\n\t\n\t# divide surface\n\tdef DiamondDivision(self, srf, udiv, vdiv):\n\t\tustep = 1.0/udiv\n\t\tvstep = 1.0/vdiv\n\t\t\n\t\tquads = []\n\t\tpolys = []\n\t\tpanels = []\n\t\tfor i in range(0,int(udiv+1)):\n\t\t\tfor j in range(0,int(vdiv+1)):\n\t\t\t\tif (i+j)%2 == 0:\n\t\t\t\t\tptA = srf.PointAtParameter(0,0)\n\t\t\t\t\tptB = srf.PointAtParameter(0,0)\n\t\t\t\t\tptC = srf.PointAtParameter(0,0)\n\t\t\t\t\tptD = srf.PointAtParameter(0,0)\n\t\t\t\n\t\t\t\t\tif i>0:\n\t\t\t\t\t\tptA = srf.PointAtParameter((i-1)*ustep,j*vstep)\n\t\t\t\t\telse:\n\t\t\t\t\t\tptB = srf.PointAtParameter(i*ustep,j*vstep)\n\t\t\t\t\n\t\t\t\t\tif j>0:\n\t\t\t\t\t\tptB = srf.PointAtParameter(i*ustep,(j-1)*vstep)\n\t\t\t\t\telse:\n\t\t\t\t\t\tptB = srf.PointAtParameter(i*ustep,j*vstep)\n\t\t\t\t\t\n\t\t\t\t\tif i<udiv:\n\t\t\t\t\t\tptC = srf.PointAtParameter((i+1)*ustep,j*vstep)\n\t\t\t\t\telse:\n\t\t\t\t\t\tptC = srf.PointAtParameter(i*ustep,j*vstep)\n\t\t\t\t\n\t\t\t\t\tif j<=(vdiv -1):\n\t\t\t\t\t\tptD = srf.PointAtParameter(i*ustep,(j+1)*vstep)\n\t\t\t\t\telse:\n\t\t\t\t\t\tptD = srf.PointAtParameter(i*ustep,j*vstep)\n\t\t\t\t\t\n\t\t\t\t\tif i>0 and j>0 and i<udiv and j<=(vdiv-1):\n\t\t\t\t\t\tquad = []\n\t\t\t\t\t\t#Append to quad\n\t\t\t\t\t\tquad.append(ptA)\n\t\t\t\t\t\tquad.append(ptB)\n\t\t\t\t\t\tquad.append(ptC)\n\t\t\t\t\t\tquad.append(ptD)\n\t\t\t\t\t\t#Append quads\n\t\t\t\t\t\tquads.append(quad)\n\t\t\t\t\t\n\t\t\t\t\t\t#polygons\n\t\t\t\t\t\t#poly = Polygon.ByPoints(quad)\n\t\t\t\t\t\t#polys.append(poly)\n\t\t\t\n\t\t\t\t\t\t#panels\n\t\t\t\t\t\t#panel = Surface.ByPerimeterPoints(quad)\n\t\t\t\t\t\t#panels.append(panel)\n\t\tself.quads = quads\n\t\t#self.polys = polys\n\t\t#self.panels = panels\n\n#Main code\nsrf = IN[0]\nudiv = IN[1]\nvdiv = IN[2]\n\nquads = []\n#polys = []\n#panels = []\n\nfor k in range(0, len(srf)):\n\ts = srf[k]\n\tu = udiv[k]\n\tv = vdiv[k]\n\t\t\t\n\tdivide = PanelDivision()\n\tdivide.DiamondDivision(s,u,v)\n\t\t\t\t\t\n\tquads.append(divide.quads)\n\t#panels.append(divide.panels)\n\t#polys.append(divide.polys)\n\t\t\noutput = []\noutput.append(quads)\n#output.append(polys)\n#output.append(panels)\n\n#Assign your output to the OUT variable\nOUT = output",
      "VariableInputPorts": true,
      "Id": "f1269f76e8124f3391090b0fdd3e2e09",
      "Inputs": [
        {
          "Id": "14e6dacf594e4bfdb6a01178d89b08b3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50d55c389c1146f1b59ef0498a015069",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aaa6689a6be14cd3926e9194f2325c75",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9335c7af00f49948bf18cccd1083af3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "bbb0e80352c94516a0176ec3d680d546",
      "Inputs": [
        {
          "Id": "8364ca0b3ddf412589b41c4f4fe36224",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "491337277cfa43b28db6a0a0e90bdb28",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90fb3be1df26418d9f433b4f033e731d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "58e117ca0d7b4f43af572aa50e01dd94",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b2fb45d5e9a54dab834c505760349f2c",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARBPanelsPts",
      "Id": "413bc673a72e4cb8a9872145b02b8b78",
      "Inputs": [
        {
          "Id": "c84d59b5b46f434f9ebbe3d55008ac79",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "3f6186b6-21c3-4885-bd79-4bd795fa1327",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "d087871a7cda4b68815eb0bda552551f",
      "Inputs": [
        {
          "Id": "ccdcca5086b04ca8b47d4d4c51c7fa2c",
          "Name": "VARListA",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "176a9b6a43b54de98b3ebb0b176c29e8",
          "Name": "VARListB",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "992d5f0167454ddda35303150e966bb5",
          "Name": "VARListA",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcc09c41910d4a2788c85e29bd8ef688",
          "Name": "VARMatchListB",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares a List A against a List B and matches length of List A.  If ListA > ListB, ListB will be extended.  If ListA < ListB, ListB will be truncated."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "3f6186b6-21c3-4885-bd79-4bd795fa1327",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "683280e2445f4fe0941672c13bad9d70",
      "Inputs": [
        {
          "Id": "46f0e224fd6f4882871ef974e7a9729b",
          "Name": "VARListA",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a152acd37c44f88af8a32cba8e21c04",
          "Name": "VARListB",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc5fa83c5c0e4a5a9047dba17134c6b1",
          "Name": "VARListA",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fcac14340df4defafd22b723035a643",
          "Name": "VARMatchListB",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares a List A against a List B and matches length of List A.  If ListA > ListB, ListB will be extended.  If ListA < ListB, ListB will be truncated."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARShowPolygons",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": ""
      },
      "Id": "bfff78b90cd14b1887724c06e5c3684d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "696f5f8ad0d44e46bf9d099215a7a844",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Polygon.ByPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "08b95b13f66a45aa91c4d2a247c902b4",
      "Inputs": [
        {
          "Id": "089cb40759f74d37805e261c5324d1a7",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce0e87914e5b4bd7a24a14fafc9da6a1",
          "Name": "Polygon",
          "Description": "Polygon",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Construct a Polygon Curve by connecting Points.\n\nPolygon.ByPoints (points: Point[]): Polygon"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "597def74-6997-4484-bb18-67a97819c8bd",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "e237ba92377147f684de85828cafe04b",
      "Inputs": [
        {
          "Id": "e3c9500fcf424da8a1670374babd5e8a",
          "Name": "VARtest",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9bd0515184a3412a8a3e86a44d02b4b2",
          "Name": "VARtrue",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0493283c628d4f8d9f4578c934781623",
          "Name": "VARfalse",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc93e6f912d44e789d688fefe0e2cc24",
          "Name": "VARresult",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "A (hopefully) more robust implementation of ScopeIf. Tests a single boolean and returns a value accordingly."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Empty",
      "Id": "128b6417a4ed49ea90c306642700abc6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "90ba61da110d467c86cdbe9923e91cde",
          "Name": "list",
          "Description": "Empty list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an Empty List.\n\nList.Empty: var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "597def74-6997-4484-bb18-67a97819c8bd",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "70bdc16b0e3a4f9fb6da7fac0252de37",
      "Inputs": [
        {
          "Id": "1d278487fc1647a39c6935a5671b5bf9",
          "Name": "VARtest",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fb3601d4b2d4c8ab4fc971dbdd93835",
          "Name": "VARtrue",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d9222c2d29048429c354ebc82eaf1c9",
          "Name": "VARfalse",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "636c4c36d33e45618f4f54f8ab40f5e7",
          "Name": "VARresult",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "A (hopefully) more robust implementation of ScopeIf. Tests a single boolean and returns a value accordingly."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Polygon.ByPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "69aa14bb74ea42d88dc9f2768febc591",
      "Inputs": [
        {
          "Id": "7702d70cf5b746069172fe55dd57c14e",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88be408439ce4fb3a21f038c611f9a0a",
          "Name": "Polygon",
          "Description": "Polygon",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Construct a Polygon Curve by connecting Points.\n\nPolygon.ByPoints (points: Point[]): Polygon"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARAPolygons",
      "Id": "b78e24bb39a64178b6200412fbc88a79",
      "Inputs": [
        {
          "Id": "a4f354884ece4f87a4c9c4df2a2d2a51",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARBPolygons",
      "Id": "59c9de6384b149b6acc74423e5791ec5",
      "Inputs": [
        {
          "Id": "a0e8dd0e38464f50b2f30b303ee4c4c5",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "612540432dfb4c5299e0a4a5d1208ce5",
      "End": "46f0e224fd6f4882871ef974e7a9729b",
      "Id": "f3aec025950841d580a7ac9f08adc3dd"
    },
    {
      "Start": "612540432dfb4c5299e0a4a5d1208ce5",
      "End": "ccdcca5086b04ca8b47d4d4c51c7fa2c",
      "Id": "6d49655d620a44a1bb710be8edde0935"
    },
    {
      "Start": "4097d9c0693140c6a5bf29c9111bfb77",
      "End": "176a9b6a43b54de98b3ebb0b176c29e8",
      "Id": "12e88361b83e41688c7ba07d91de649d"
    },
    {
      "Start": "8f7d58ff9cac4f929aa0638b6d942d82",
      "End": "1a152acd37c44f88af8a32cba8e21c04",
      "Id": "2aa70c3c40824c87aff6fca943e431a3"
    },
    {
      "Start": "39546d9425384bada1a2833855071e1d",
      "End": "c84d59b5b46f434f9ebbe3d55008ac79",
      "Id": "d60721627d0a4eb3ab38b63243492a16"
    },
    {
      "Start": "39546d9425384bada1a2833855071e1d",
      "End": "3fb3601d4b2d4c8ab4fc971dbdd93835",
      "Id": "b7d41e61fd154efd99f0c92a9f7efeaa"
    },
    {
      "Start": "1ea566fd33c34777a103a9b941f434ed",
      "End": "e93860ff1fe74c9dace23c42a868b81a",
      "Id": "08e32bb8a62d4d17aa071a7bb93b0a6e"
    },
    {
      "Start": "c4d103c69eb542dabfbf3019aac7c516",
      "End": "2e0ff79109844632a7528efaebebae95",
      "Id": "97d95b5d73784bea9a97f4d81e6ff3ba"
    },
    {
      "Start": "a9335c7af00f49948bf18cccd1083af3",
      "End": "8364ca0b3ddf412589b41c4f4fe36224",
      "Id": "c44f7f77b7b448b3a81d9a7c73dd6826"
    },
    {
      "Start": "90fb3be1df26418d9f433b4f033e731d",
      "End": "086003537c0e4c82a1d08cacd4c782f3",
      "Id": "806ea3a07c97446eb127d93ce777b2cf"
    },
    {
      "Start": "90fb3be1df26418d9f433b4f033e731d",
      "End": "9bd0515184a3412a8a3e86a44d02b4b2",
      "Id": "9006c209bdfe479bbc009f62027dc31c"
    },
    {
      "Start": "b2fb45d5e9a54dab834c505760349f2c",
      "End": "491337277cfa43b28db6a0a0e90bdb28",
      "Id": "81f13ec1be10467e8f4a5c58804484ed"
    },
    {
      "Start": "992d5f0167454ddda35303150e966bb5",
      "End": "14e6dacf594e4bfdb6a01178d89b08b3",
      "Id": "eafdf59a80c54c83b1cfa55ac791f429"
    },
    {
      "Start": "992d5f0167454ddda35303150e966bb5",
      "End": "6fb376b484af4b789791c0192a71dee6",
      "Id": "ab7cd13a6c1d4eb2ac91c2e17e264940"
    },
    {
      "Start": "dcc09c41910d4a2788c85e29bd8ef688",
      "End": "50d55c389c1146f1b59ef0498a015069",
      "Id": "c3f5eddcc1e4446a87c957987f73cc0f"
    },
    {
      "Start": "dcc09c41910d4a2788c85e29bd8ef688",
      "End": "f96e6e9159ad4d5781cf463876e940a7",
      "Id": "89ba52ffce854f8ca1abc986b8361276"
    },
    {
      "Start": "1fcac14340df4defafd22b723035a643",
      "End": "aaa6689a6be14cd3926e9194f2325c75",
      "Id": "204e882c31894f0fbefff3936dd4340d"
    },
    {
      "Start": "1fcac14340df4defafd22b723035a643",
      "End": "dfd0081e802941ed9a311d241e5aa65d",
      "Id": "b143ef1416924a31b84617650f05ee98"
    },
    {
      "Start": "696f5f8ad0d44e46bf9d099215a7a844",
      "End": "e3c9500fcf424da8a1670374babd5e8a",
      "Id": "52d8fe2793dc4635a00d094eff55ecc0"
    },
    {
      "Start": "696f5f8ad0d44e46bf9d099215a7a844",
      "End": "1d278487fc1647a39c6935a5671b5bf9",
      "Id": "fcee324c074c4041bc2137233a9788b8"
    },
    {
      "Start": "ce0e87914e5b4bd7a24a14fafc9da6a1",
      "End": "a4f354884ece4f87a4c9c4df2a2d2a51",
      "Id": "d77c69ebf146409b9ecceff9090a4d9c"
    },
    {
      "Start": "dc93e6f912d44e789d688fefe0e2cc24",
      "End": "089cb40759f74d37805e261c5324d1a7",
      "Id": "19753bcc3f184d67af0972fec847844d"
    },
    {
      "Start": "90ba61da110d467c86cdbe9923e91cde",
      "End": "0493283c628d4f8d9f4578c934781623",
      "Id": "ea10e229166d4fb789f2ffb4ea60b670"
    },
    {
      "Start": "90ba61da110d467c86cdbe9923e91cde",
      "End": "0d9222c2d29048429c354ebc82eaf1c9",
      "Id": "df96b3ea1ee7478fae101b6ecb2611c2"
    },
    {
      "Start": "636c4c36d33e45618f4f54f8ab40f5e7",
      "End": "7702d70cf5b746069172fe55dd57c14e",
      "Id": "941ad557c64b4fdb9eebe394ab3f35e6"
    },
    {
      "Start": "88be408439ce4fb3a21f038c611f9a0a",
      "End": "a0e8dd0e38464f50b2f30b303ee4c4c5",
      "Id": "bc1d53cc74e345f1b420914bc44dc353"
    }
  ],
  "Dependencies": [
    "3f6186b6-21c3-4885-bd79-4bd795fa1327",
    "597def74-6997-4484-bb18-67a97819c8bd"
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "8d85fb30bc8643bd92882a1ced4469d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -276.386669147415,
        "Y": 166.938560067086
      },
      {
        "Id": "5b620cf9cc7c44559c07c693d820aef8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -275.463392774763,
        "Y": 259.599913450005
      },
      {
        "Id": "d3b4a7b77a5844b89aec60e61cd9bcf6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -276.463392774763,
        "Y": 327.349913450005
      },
      {
        "Id": "de1e1cf3a58c411cb29250763e6bf743",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1925.7478739576,
        "Y": 136.442307872402
      },
      {
        "Id": "a2ac0681eed444648e366e4a96f5472f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 614.096379120078,
        "Y": 301.093361462285
      },
      {
        "Id": "bf01bba54ea54bc4aa4980150afa9994",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "Number",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 493.437108505072,
        "Y": 351.77636132086
      },
      {
        "Id": "1f5855decde84de3a356d6c95fdef150",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 283.644143949628,
        "Y": 394.930198774451
      },
      {
        "Id": "f1269f76e8124f3391090b0fdd3e2e09",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 284.799859222421,
        "Y": 43.820004221231
      },
      {
        "Id": "bbb0e80352c94516a0176ec3d680d546",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 621.505056642393,
        "Y": 139.212507999618
      },
      {
        "Id": "58e117ca0d7b4f43af572aa50e01dd94",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "Number",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 493.437108505072,
        "Y": -29.8952586371457
      },
      {
        "Id": "413bc673a72e4cb8a9872145b02b8b78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1912.72190322545,
        "Y": 494.592136110077
      },
      {
        "Id": "d087871a7cda4b68815eb0bda552551f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "LB.LunchBox List Matcher",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1.15210625504201,
        "Y": 29.6017673182463
      },
      {
        "Id": "683280e2445f4fe0941672c13bad9d70",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "LB.LunchBox List Matcher",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -60.7672982211563,
        "Y": 367.897312908352
      },
      {
        "Id": "bfff78b90cd14b1887724c06e5c3684d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -257.788355175408,
        "Y": 787.445311049646
      },
      {
        "Id": "08b95b13f66a45aa91c4d2a247c902b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Polygon.ByPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1338.2039661594,
        "Y": 446.308630105722
      },
      {
        "Id": "e237ba92377147f684de85828cafe04b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "CW.ScopeIf+",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 982.800819270009,
        "Y": 391.540155961143
      },
      {
        "Id": "128b6417a4ed49ea90c306642700abc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Empty",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 748.269961790274,
        "Y": 652.312105870752
      },
      {
        "Id": "70bdc16b0e3a4f9fb6da7fac0252de37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "CW.ScopeIf+",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1167.6757618649,
        "Y": 745.462611210214
      },
      {
        "Id": "69aa14bb74ea42d88dc9f2768febc591",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Polygon.ByPoints",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1540.37365064363,
        "Y": 814.965501626457
      },
      {
        "Id": "b78e24bb39a64178b6200412fbc88a79",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1918.40614506083,
        "Y": 693.061808625176
      },
      {
        "Id": "59c9de6384b149b6acc74423e5791ec5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1941.02080354592,
        "Y": 938.893135502687
      }
    ],
    "Annotations": [],
    "X": 146.868611973599,
    "Y": 136.719954962599,
    "Zoom": 0.275509545608174
  }
}
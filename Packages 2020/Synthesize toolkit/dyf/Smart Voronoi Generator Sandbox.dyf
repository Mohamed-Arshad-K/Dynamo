{
  "Uuid": "8868a38e-3595-43ff-80ad-4b863daedc1c",
  "IsCustomNode": true,
  "Category": "Synthesize.Automate.Geometry",
  "Description": "Smart Voronoi Generator",
  "Name": "Smart Voronoi Generator Sandbox",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "607350e41d524b89a13a2e835e0d5d66",
      "Inputs": [
        {
          "Id": "9f4eb6fe0e5744e0a2dbc09af8d59a81",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 4,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "767e7518d795407090dd10a5eed3ff55",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ef3756fdeff455eac46a06628e92c71",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "53bd10548d9d4cddb71d1c996eff51a7",
      "Inputs": [
        {
          "Id": "afd284ac4d454887b4b2319fbf3c1f90",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7800e6c223c04a31af647458d4f6b856",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75f56ca4c45541bebedb78a39b03f626",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0];\na[1];",
      "Id": "fee45a7a941847de80e9d684601a8463",
      "Inputs": [
        {
          "Id": "d90a348d933c4338ab99e67cb32c2526",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fcdbdace97e043668ef58712e16404af",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2b3238d746a4eeb94074b1db47df89c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# IMPORTANT : ALL DYNAMO DESIGN SCRIPT NODES ARE AS (dg)\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript import Geometry as dg\nclr.AddReference('Tessellation')\nimport Tessellation\n\nimport System\npf_path = System.Environment.GetFolderPath(System.Environment.SpecialFolder.ProgramFilesX86)\nimport sys\nsys.path.append('%s\\IronPython 2.7\\Lib' %pf_path)\nimport random\n\ndef tolist(obj1):\n\tif hasattr(obj1,'__iter__'): return obj1\n\telse: return [obj1]\n\ndef flatten(x):\n    result = []\n    for el in x:\n        if hasattr(el, \"__iter__\") and not isinstance(el, basestring):\n            result.extend(flatten(el))\n        else:\n            result.append(el)\n    return result\n\ndef normalize(length,nostartend = False,twominonly = False):\n\tif length != None:\n\t\tif length <= 3 and twominonly == False:\n\t\t\tlength = 4\n\t\telif length <= 3 and twominonly == True:\n\t\t\tif length < 2:\n\t\t\t\tlength = 2\n\t\tif nostartend:\n\t\t\tlength += 2\n\t\ta = range(0,int(length))\n\t\tpoints = []\n\t\tamin, amax = min(a), max(a)\n\t\titem = []\n\t\tfor val in a:\n\t\t\titem.append(float(val-amin) / float(amax-amin))\n\telse:\n\t\titem = [None]\n\tif nostartend == True:\n\t\titem.pop(0)\n\t\titem.pop(-1)\n\treturn item\n\ndef dangeruv(uv):\n\tif uv.U <= 0 or uv.U >= 1 or uv.V <= 0 or uv.V >= 1:\n\t\treturn True\n\telse:\n\t\treturn False\n\treturn False\n\ndef tranlist(list,x,y,z):\n\ttranned = []\n\tfor l in list:\n\t\ttranned.append(dg.Geometry.Translate(l,x,y,z))\n\treturn tranned\n\ndef borderOP(uvs,trans_up_down,param,avgU,avgV,strength):\n\tcount = 0\n\tfor trans in trans_up_down:\n\t\tfor tran in trans:\n\t\t\tc = dg.Circle.ByCenterPointRadius(tran,min([avgU/2,avgV/2])/strength)\n\t\t\tuv = dg.Surface.UVParameterAtPoint(proxysurf,dg.Curve.PointAtParameter(c,param[count]))\n\t\t\tuvs.append(uv)\n\t\tcount += 1\n\treturn uvs\n\ndef borderOP_static(uvs,trans_up_down,param,avgU,avgV,strength):\n\tfor trans in trans_up_down:\n\t\tfor tran in trans:\n\t\t\t#c = dg.Circle.ByCenterPointRadius(tran,min([avgU/2,avgV/2])/strength)\n\t\t\tc = dg.Circle.ByCenterPointRadius(tran,min([avgU/2,avgV/2]))\n\t\t\tuv = dg.Surface.UVParameterAtPoint(proxysurf,dg.Curve.PointAtParameter(c,param))\n\t\t\tuvs.append(uv)\n\treturn uvs\n\ndef average(num):\n    sum_num = 0\n    for t in num:\n        sum_num = sum_num + t           \n\n    avg = sum_num / len(num)\n    return avg\n\ndef get_trans(up_down,disU,switch):\n\tif switch:\n\t\tup_down.insert(0,tranlist(up_down[0],0,-disU,0))\n\t\tup_down.insert(3,tranlist(up_down[-1],0,disU,0))\n\telse:\n\t\tup_down.insert(0,tranlist(up_down[0],-disU,0,0))\n\t\tup_down.insert(3,tranlist(up_down[-1],disU,0,0))\n\ttrans_up_down = [list(x) for x in zip(*up_down)]\n\treturn trans_up_down\n\ndef joinsurfs(surfs):\n\tdef surf_doesinter(a,b,tollerance = 0.00001):\n\t\tif round(dg.Geometry.DistanceTo(a,b),2) < tollerance:\n\t\t\treturn True\n\t\telse:\n\t\t\treturn False\n\tsurfacesflatten = flatten(surfs)\n\tsurfacesflatten = [x for x in surfacesflatten if x]\n\tif surfacesflatten != None and surfacesflatten != []:\n\t\tcrvs = flatten(tolist(surfs))\n\t\tcrvGroup = [-1 for x in range(len(crvs))]\n\t\tcrvGroup[0] = 0\n\t\tmaxGroupNum = 1\n\t\tfor i in range(len(crvs)):\n\t\t\tif (crvGroup[i] == -1):\n\t\t\t\tcrvGroup[i] = i\n\t\t\tfor j in range(len(crvs)):\n\t\t\t\ttry:\n\t\t\t\t\tif i != j and surf_doesinter(crvs[i], crvs[j]):\n\t\t\t\t\t\tif (crvGroup[j] == -1):\n\t\t\t\t\t\t\tcrvGroup[j] = crvGroup[i]\n\t\t\t\t\t\telif (crvGroup[i] != crvGroup[j]):\n\t\t\t\t\t\t\toldNum = crvGroup[j]\n\t\t\t\t\t\t\tfor k in range(len(crvs)):\n\t\t\t\t\t\t\t\tif (crvGroup[k] == oldNum):\n\t\t\t\t\t\t\t\t\tcrvGroup[k] = crvGroup[i]\n\t\t\t\texcept:\n\t\t\t\t\tpass\n\t\tgroups = []\n\t\texcluded = []\n\t\tfor n in crvGroup:\n\t\t\tinnercount = 0\n\t\t\ttmp = []\n\t\t\tfor n2 in crvGroup:\n\t\t\t\tif n == n2 and n2 not in excluded:\n\t\t\t\t\ttmp.append(crvs[innercount])\n\t\t\t\tinnercount += 1\n\t\t\tif len(tmp) == 0:\n\t\t\t\tcontinue\n\t\t\ttry:\n\t\t\t\ttmp = dg.Surface.ByUnion(tmp)\n\t\t\t\tgroups.append(tmp)\n\t\t\texcept:\n\t\t\t\ttry:\n\t\t\t\t\ttmp = dg.PolySurface.ByJoinedSurfaces(tmp)\n\t\t\t\t\tgroups.append(tmp)\n\t\t\t\texcept:\n\t\t\t\t\tfor t in tmp:\n\t\t\t\t\t\tgroups.append(t)\n\t\t\texcluded.append(n)\n\t\tjoinedsurfs = groups\n\t\treturn joinedsurfs\n\telse:\n\t\treturn surfs\n\ndef flipuv(uv,attempts):\n\tif attempts == 1:\n\t\tU = 1-uv.U\n\t\tV = 1-uv.V\n\t\treturn dg.UV.ByCoordinates(U,V)\n\tif attempts == 2:\n\t\tU = uv.U\n\t\tV = uv.V\n\t\treturn dg.UV.ByCoordinates(V,U)\n\tif attempts == 3:\n\t\tU = 1-uv.U\n\t\tV = 1-uv.V\n\t\treturn dg.UV.ByCoordinates(V,U)\n\ninputfaces = joinsurfs(flatten(tolist(IN[0])))\nbydistance = IN[1]\ndisUinput = IN[2]\ndisVinput = IN[3]\nstrength = IN[4]\nxscale = IN[5]\nyscale = IN[6]\nzscale = IN[7]\n\nif strength < 1:\n\tstrength = 1\n\nif len(inputfaces) > 1:\n\tstatic_factor = 0.5\nelse:\n\tstatic_factor = random.uniform(0, 1)\n\nbigresult = []\nbigresultfaces = []\nexplodedinputfaces = []\nfor input in inputfaces:\n\texploded = dg.Geometry.Explode(input)\n\tdisesU = []\n\tdisesV = []\n\tptslists = []\n\tproxysurfs = []\n\tfor face in exploded:\n\t\tl = dg.Curve.ByIsoCurveOnSurface(face,0,0.5).Length\n\t\tw = dg.Curve.ByIsoCurveOnSurface(face,1,0.5).Length\n\t\tproxysurf = dg.Surface.ByPatch(dg.Rectangle.ByWidthLength(l,w))\n\t\tif bydistance:\n\t\t\tU = round(l/disUinput)\n\t\t\tV = round(w/disVinput)\n\t\telse:\n\t\t\tU = disUinput\n\t\t\tV = disVinput\n\t\tnormU = normalize(U)\n\t\tnormV=  normalize(V)\n\t\tpts = []\n\t\tfor nU in normU:\n\t\t\ttmp  = []\n\t\t\tfor nV in normV:\n\t\t\t\ttmp.append(dg.Surface.PointAtParameter(proxysurf,nU,nV))\n\t\t\tpts.append(tmp)\n\t\tdisU = dg.Geometry.DistanceTo(pts[0][0],pts[1][0])\n\t\tdisV = dg.Geometry.DistanceTo(pts[0][0],pts[0][1])\n\t\tdisesU.append(disU)\n\t\tdisesV.append(disV)\n\t\tptslists.append(pts)\n\t\tproxysurfs.append(proxysurf)\n\t\n\tparam = False\n\tparam_static = random.uniform(0, 1)\n\tresult = []\n\tresultfaces = []\n\tcount = 0\n\tfor face in exploded:\n\t\tdisU = disesU[count]\n\t\tdisV = disesV[count]\n\t\tpts = ptslists[count]\n\t\t#otherlist = others[count]\n\t\totherlist = [] #########\n\t\tproxysurf = proxysurfs[count]\n\t\t\n\t\ttranspts = [list(x) for x in zip(*pts)]\n\t\t\n\t\tup_down = [pts[0],pts[-1]]\n\t\tleft_right = [transpts[0][1:-1],transpts[-1][1:-1]]\n\t\t\n\t\tcorner = []\n\t\tfor udlist in up_down:\n\t\t\tcorner.append(dg.Geometry.Translate(udlist[0],0,-disV,0))\n\t\t\tcorner.append(dg.Geometry.Translate(udlist[-1],0,disV,0))\n\t\tcorner = [corner]\n\t\ttrans_corner = get_trans(corner,disU,False)\n\t\n\t\ttrans_up_down = get_trans(up_down,disU,False)\n\t\ttrans_left_right = get_trans(left_right,disV,True)\n\t\n\t\tptstoremove = flatten(up_down + left_right)\n\t\tpts = list(set(flatten(pts)) - set(ptstoremove))\n\t\n\t\tuvs = []\n\t\tfor p in pts:\n\t\t\tc = dg.Circle.ByCenterPointRadius(p,min([disU/2,disV/2])/strength)\n\t\t\tuv = dg.Surface.UVParameterAtPoint(proxysurf,dg.Curve.PointAtParameter(c,random.uniform(0, 1)))\n\t\t\twhile dangeruv(uv):\n\t\t\t\tuv = dg.Surface.UVParameterAtPoint(proxysurf,dg.Curve.PointAtParameter(c,random.uniform(0, 1)))\n\t\t\tuvs.append(uv)\n\t\t\n\t\t#param = False\n\t\tuvs = borderOP_static(uvs,trans_up_down,static_factor,disU,disV,strength)\n\t\tuvs = borderOP_static(uvs,trans_left_right,static_factor,disU,disV,strength)\n\t\t\n\t\t#param = random.uniform(0, 1)\n\t\tuvs = borderOP_static(uvs,trans_corner,static_factor,disU,disV,strength)\n\t\n\t\tvorocurves = Tessellation.Voronoi.ByParametersOnSurface(uvs,proxysurf)\n\t\tcleancurves = []\n\t\tfor vc in vorocurves:\n\t\t\ttry:\n\t\t\t\tcleancurves.append(dg.Geometry.Translate(vc,0,0,-0.5))\n\t\t\texcept:\n\t\t\t\tpass\n\t\t\t\t\n\t\tthicken = []\n\t\tfor clean in cleancurves:\n\t\t\tthicken.append(dg.Curve.Extrude(clean,dg.Vector.ByCoordinates(0,0,1),1))\n\t\t\t\n\t\tjoinedsurfs = dg.PolySurface.ByJoinedSurfaces(thicken)\n\t\tsplits = dg.Geometry.Split(proxysurf,joinedsurfs)\n\t\tjoinedsurfs.Dispose()\n\t\tfor t in thicken:\n\t\t\tt.Dispose()\n\t\t\t\n\t\tallfaces = [face] + otherlist\n\t\tworks = False\n\t\tswitch = False\n\t\tattempts = 0\n\t\twhile not works and attempts < 4:\n\t\t\tfinalcurves = []\n\t\t\tfor s in splits:\n\t\t\t\tperms = s.PerimeterCurves()\n\t\t\t\tpts = []\n\t\t\t\ttmp = []\n\t\t\t\tstTmp = []\n\t\t\t\tenTmp = []\n\t\t\t\tfor p in perms:\n\t\t\t\t\tstUV = dg.Surface.UVParameterAtPoint(proxysurf,p.StartPoint)\n\t\t\t\t\tenUV = dg.Surface.UVParameterAtPoint(proxysurf,p.EndPoint)\n\t\t\t\t\ttmpf = []\n\t\t\t\t\tfor f in allfaces:\n\t\t\t\t\t\ttry:\n\t\t\t\t\t\t\tfperms = f.PerimeterCurves()\n\t\t\t\t\t\t\tstUVnew = False\n\t\t\t\t\t\t\tenUVnew = False\n\t\t\t\t\t\t\tif switch: \n\t\t\t\t\t\t\t\tstUVnew = flipuv(stUV,attempts)\n\t\t\t\t\t\t\t\tenUVnew = flipuv(enUV,attempts)\n\t\t\t\t\t\t\tif stUVnew == False:\n\t\t\t\t\t\t\t\tnewcurve = dg.Curve.ByParameterLineOnSurface(f,stUV,enUV)\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tnewcurve = dg.Curve.ByParameterLineOnSurface(f,stUVnew,enUVnew)\n\t\t\t\t\t\t\tif xscale == 1 and yscale == 1 and zscale == 1:\n\t\t\t\t\t\t\t\tpass\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tnewcurve = dg.Geometry.Scale(newcurve,xscale,yscale,zscale)\n\t\t\t\t\t\t\t\tnewcurve = dg.Curve.PullOntoSurface(newcurve,f)\n\t\t\t\t\t\t\ttestpoint = dg.Curve.PointAtParameter(newcurve,0.5)\n\t\t\t\t\t\t\tisgood = True\n\t\t\t\t\t\t\tfor fperm in fperms:\n\t\t\t\t\t\t\t\tif dg.Geometry.DistanceTo(fperm, testpoint) < 0.01:\n\t\t\t\t\t\t\t\t\tisgood = False\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tif isgood:\n\t\t\t\t\t\t\t\tintersects = dg.Geometry.Intersect(newcurve,f)\n\t\t\t\t\t\t\t\tcleanintersects = []\n\t\t\t\t\t\t\t\tfor i in intersects:\n\t\t\t\t\t\t\t\t\tif isinstance(i, dg.Point) == False and isinstance(i, dg.Arc) == False:\n\t\t\t\t\t\t\t\t\t\tcleanintersects.append(i)\n\t\t\t\t\t\t\t\t\tif isinstance(i, dg.Arc):\n\t\t\t\t\t\t\t\t\t\tpulled = dg.Curve.PullOntoSurface(dg.Line.ByStartPointEndPoint(i.StartPoint,i.EndPoint),f)\n\t\t\t\t\t\t\t\t\t\tcleanintersects.append(pulled)\n\t\t\t\t\t\t\t\ttmpf.append(cleanintersects)\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\ttmpf.append(None)\n\t\t\t\t\t\texcept:\n\t\t\t\t\t\t\ttmpf.append(None)\n\t\t\t\t\ttmp.append(tmpf)\n\t\t\t\tfinalcurves.append([list(x) for x in zip(*tmp)])\n\t\t\tto_out = [list(x) for x in zip(*finalcurves)]\n\t\t\tif len(result) == 0:\n\t\t\t\tworks = True\n\t\t\telse:\n\t\t\t\ttestlist = flatten(result)\n\t\t\t\ttestlist2 = flatten(to_out)\n\t\t\t\ttestlist = [i for i in testlist if i]\n\t\t\t\ttestlist2 = [i for i in testlist2 if i]\n\t\t\t\tfor test in testlist:\n\t\t\t\t\tfor test2 in testlist2:\n\t\t\t\t\t\tif dg.Geometry.DistanceTo(test,test2) < 0.1:\n\t\t\t\t\t\t\tswitch = False\n\t\t\t\t\t\t\tworks = True\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\tif works == True:\n\t\t\t\t\t\tbreak\n\t\t\t\t\tswitch = True\n\t\t\tattempts += 1\n\t\tresult.append(to_out)\n\t\tif len(to_out) != 0:\n\t\t\tresultfaces.append(allfaces)\n\t\tcount += 1\n\tbigresult.append(result)\n\tbigresultfaces.append(resultfaces)\nOUT = bigresult,bigresultfaces",
      "VariableInputPorts": true,
      "Id": "3cd0f14739454c5f8b7429d8b4d3976a",
      "Inputs": [
        {
          "Id": "8efb6c5d57124a5a8b68acfbac74bec4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15cc225405b14a73b1e48a6b98b2b14b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "081a8abf40ea4fcd9b8b07f94795956e",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89282f1a708d411a822fe5f42749b5c0",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f42377e533ef4bd39d0f04c37aeb963f",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a50308ea525463fb1ccb86d8ca02d45",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "babe553d43814c3e8be545903862ebb4",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e69cdde4feb74da5b741dd52472fdbd6",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b1a6924398f4697938b5dac266a78c0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARSurfaces",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "7d1bf226549a4cb9934810c86aedc935",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "32f5a8da251149fabef9a6889de2472d",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARDistancingMethodFalseIsNumbers",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false",
        "Description": ""
      },
      "Id": "d9112496c3e1422da325261a1866ea7a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f4d03935b319447d9c4e4906b5c4c3ba",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARUDensity",
        "TypeName": "int",
        "TypeRank": 0,
        "DefaultValue": "6",
        "Description": ""
      },
      "Id": "6000beb8e6b5438e9e1bbdc36a7aca83",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6c462d1a42354ae69f8ed7b22d6e5efc",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARVDensity",
        "TypeName": "int",
        "TypeRank": 0,
        "DefaultValue": "6",
        "Description": ""
      },
      "Id": "063483905e354babaa61d1fadc4b8db6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fd92aff9d31246aa8ad6f1b120eda355",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARStraightness",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "1",
        "Description": ""
      },
      "Id": "9b429481f8ff4b95ace40b07ce7c72c2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "adc3f151972246fcb6785ec9f262fc62",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARJoinedCurves",
      "Id": "4ca0bbaba87a492288bc2f02b5acd676",
      "Inputs": [
        {
          "Id": "82a8e18e73d64ef8ad510302cb8a5126",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARSurfaces",
      "Id": "f0cea7f1086d477aa54f5832ea945723",
      "Inputs": [
        {
          "Id": "c670bcf95dc8490dada7a66fc07cc5f0",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "5f2c953938ca4d12bf480bae671ba835",
      "Inputs": [
        {
          "Id": "580616a85c064385b8bec34f43d5b931",
          "Name": "list",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28854bc9af4946fca444e3a0129e0fd6",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data such that non-trailing nulls may not be filtered out\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52371a71475046e9b020c4a2fc64d92c",
          "Name": "var[]..[]",
          "Description": "A list cleaned of nulls and empty lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "361e2f5e1e3d468e9ea7bb47f83fac46",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2e370c9cf26a4223a8db2b563888163c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9c4ab8a515fb40f480f0ef7cd5c6afd4",
      "Inputs": [
        {
          "Id": "74e171a090c445b9b41987fbe566fd54",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "9ea7ef72d36f4f298ead67926eb0db9f",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92cd0f25a07a488ea785b440a9de1685",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "4f2ce29d-6510-45df-83c8-21c78b6538c9",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "35852c673e1a467d996450ec0ce62a16",
      "Inputs": [
        {
          "Id": "2c74966d17014ff58c8e3ceaaede1d8c",
          "Name": "VARcurves",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca475057251e482da5cf98c80f5b2f85",
          "Name": "VARpolyCurve",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47b6b3d2d551459ea3747be056dc5cb1",
          "Name": "VARFailures",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create polycurves from an unordered list of curves."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARXscale",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "1",
        "Description": ""
      },
      "Id": "29f1dca2cfd2424a913038d4a4b467a8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1c4bf07a85514fdb8d596973dc48b782",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARYscale",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "1",
        "Description": ""
      },
      "Id": "9db0824efb6e4921a64be878e1d9d792",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c24f4cdca31e416a851a5a130f6c40d0",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARZscale",
        "TypeName": "double",
        "TypeRank": 0,
        "DefaultValue": "1",
        "Description": ""
      },
      "Id": "25279e04cdce418e8cd53ff3959cd6c8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1ee1544a651c4bf8b8fe3881efe30392",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "0ef3756fdeff455eac46a06628e92c71",
      "End": "82a8e18e73d64ef8ad510302cb8a5126",
      "Id": "d6910f55a0144afca3fd954f32a2355b"
    },
    {
      "Start": "75f56ca4c45541bebedb78a39b03f626",
      "End": "c670bcf95dc8490dada7a66fc07cc5f0",
      "Id": "cdd2c514d9aa4e65a73a0edd9f5b721e"
    },
    {
      "Start": "fcdbdace97e043668ef58712e16404af",
      "End": "580616a85c064385b8bec34f43d5b931",
      "Id": "5928abd7a032484b960b5aa41752293d"
    },
    {
      "Start": "e2b3238d746a4eeb94074b1db47df89c",
      "End": "afd284ac4d454887b4b2319fbf3c1f90",
      "Id": "6e6ce986ec194423b33f99d550da4df0"
    },
    {
      "Start": "8b1a6924398f4697938b5dac266a78c0",
      "End": "d90a348d933c4338ab99e67cb32c2526",
      "Id": "800ed4da37b54eefbf6af06da64e8161"
    },
    {
      "Start": "32f5a8da251149fabef9a6889de2472d",
      "End": "8efb6c5d57124a5a8b68acfbac74bec4",
      "Id": "b0e2d3431b0e47aeadcc48b51e13e011"
    },
    {
      "Start": "f4d03935b319447d9c4e4906b5c4c3ba",
      "End": "15cc225405b14a73b1e48a6b98b2b14b",
      "Id": "ce93a13f9dae4698ac3b26d36b5f873e"
    },
    {
      "Start": "6c462d1a42354ae69f8ed7b22d6e5efc",
      "End": "081a8abf40ea4fcd9b8b07f94795956e",
      "Id": "8f2516a3336b420da4b1674c7bf53cf7"
    },
    {
      "Start": "fd92aff9d31246aa8ad6f1b120eda355",
      "End": "89282f1a708d411a822fe5f42749b5c0",
      "Id": "ad80673f8cc947f2a4bb1ae4e6293041"
    },
    {
      "Start": "adc3f151972246fcb6785ec9f262fc62",
      "End": "f42377e533ef4bd39d0f04c37aeb963f",
      "Id": "c483ee34f0bc44dd9da59b6418a8a521"
    },
    {
      "Start": "52371a71475046e9b020c4a2fc64d92c",
      "End": "74e171a090c445b9b41987fbe566fd54",
      "Id": "e36e7820f7724d50ad842e83c02b7971"
    },
    {
      "Start": "2e370c9cf26a4223a8db2b563888163c",
      "End": "28854bc9af4946fca444e3a0129e0fd6",
      "Id": "702da853fb9d4e2fb0fc2fc0621f9afe"
    },
    {
      "Start": "92cd0f25a07a488ea785b440a9de1685",
      "End": "2c74966d17014ff58c8e3ceaaede1d8c",
      "Id": "b2c06d1bfa1547ca96bed19544e860ee"
    },
    {
      "Start": "ca475057251e482da5cf98c80f5b2f85",
      "End": "9f4eb6fe0e5744e0a2dbc09af8d59a81",
      "Id": "3b3366c8f430482fb475bc4ef9a6e1d6"
    },
    {
      "Start": "1c4bf07a85514fdb8d596973dc48b782",
      "End": "0a50308ea525463fb1ccb86d8ca02d45",
      "Id": "56eb8e6512284b0082c1e4539137c540"
    },
    {
      "Start": "c24f4cdca31e416a851a5a130f6c40d0",
      "End": "babe553d43814c3e8be545903862ebb4",
      "Id": "8e4f7a96a30a422882d3b8707edb4ed3"
    },
    {
      "Start": "1ee1544a651c4bf8b8fe3881efe30392",
      "End": "e69cdde4feb74da5b741dd52472fdbd6",
      "Id": "465543f555144b09a05ee60456d467f4"
    }
  ],
  "Dependencies": [
    "4f2ce29d-6510-45df-83c8-21c78b6538c9"
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "607350e41d524b89a13a2e835e0d5d66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1649.21329312386,
        "Y": 94.9133930372356
      },
      {
        "Id": "53bd10548d9d4cddb71d1c996eff51a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1666.73207919282,
        "Y": 307.132871074672
      },
      {
        "Id": "fee45a7a941847de80e9d684601a8463",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 448.094856602818,
        "Y": 210.778145577217
      },
      {
        "Id": "3cd0f14739454c5f8b7429d8b4d3976a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": false,
        "Excluded": false,
        "X": 251.551940904578,
        "Y": 219.934008906326
      },
      {
        "Id": "7d1bf226549a4cb9934810c86aedc935",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -303.694527730291,
        "Y": -33.2704840969495
      },
      {
        "Id": "d9112496c3e1422da325261a1866ea7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -454.094527730291,
        "Y": 110.32951590305
      },
      {
        "Id": "6000beb8e6b5438e9e1bbdc36a7aca83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -349.503731606695,
        "Y": 265.382186377273
      },
      {
        "Id": "063483905e354babaa61d1fadc4b8db6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -349.503731606695,
        "Y": 415.382186377273
      },
      {
        "Id": "9b429481f8ff4b95ace40b07ce7c72c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -379.797685085831,
        "Y": 523.597422957775
      },
      {
        "Id": "4ca0bbaba87a492288bc2f02b5acd676",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1920.93207919282,
        "Y": 94.9133930372356
      },
      {
        "Id": "f0cea7f1086d477aa54f5832ea945723",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1986.74308157853,
        "Y": 255.35958389211
      },
      {
        "Id": "5f2c953938ca4d12bf480bae671ba835",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Clean",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 729.274602348724,
        "Y": 46.7082629256644
      },
      {
        "Id": "361e2f5e1e3d468e9ea7bb47f83fac46",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 589.013380129179,
        "Y": 30.9493595041789
      },
      {
        "Id": "9c4ab8a515fb40f480f0ef7cd5c6afd4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1037.7397745045,
        "Y": 139.729927106768
      },
      {
        "Id": "35852c673e1a467d996450ec0ce62a16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "AS.[&] PolyCurve.ByCurves With Failures Sandbox",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1291.69348055124,
        "Y": 40.7462403734789
      },
      {
        "Id": "29f1dca2cfd2424a913038d4a4b467a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -368.52374948234,
        "Y": 594.044025435755
      },
      {
        "Id": "9db0824efb6e4921a64be878e1d9d792",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -365.739243786018,
        "Y": 670.691594769919
      },
      {
        "Id": "25279e04cdce418e8cd53ff3959cd6c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -359.368778873143,
        "Y": 742.178704070479
      }
    ],
    "Annotations": [],
    "X": 248.446563099616,
    "Y": 122.341465873769,
    "Zoom": 0.413831438261564
  }
}
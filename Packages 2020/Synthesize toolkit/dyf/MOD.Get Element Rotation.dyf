{
  "Uuid": "07583c44-dcff-4a2a-8a6e-0bc196a2f603",
  "IsCustomNode": true,
  "Category": "Synthesize.Packages.Modelical.Elements",
  "Description": "Get the rotation of a family instance whose location is a point.",
  "Name": "MOD.Get Element Rotation",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "50800932ffee404a8456a5ae9d942cdc",
      "Inputs": [
        {
          "Id": "52c955852fc049acab0fbfe6d7392d42",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4570429700f74b8a9a5c952bb14121fc",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c208fde1c9254e79931fb39b17eca173",
      "Inputs": [
        {
          "Id": "4f9d830c73804befa63f7745e008afd0",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e8c7c34a1a94540901f2a74eb470c07",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# This node has been made by Modelical\r\n# www.modelical.com\r\n\r\nimport clr\r\nfrom math import *\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n#The inputs to this node will be stored as a list in the IN variable.\r\ndataEnteringNode = IN\r\nX=IN[0]\r\nY=IN[1]\r\noutlist = []\r\ntemplist = []\r\ntemplist2 = []\r\ncount = 0\r\n\r\n\r\nfor e in X:\r\n\ttemplist.append((acos(e)))\r\n\r\n\r\nwhile count < len(templist):\r\n#for item in templist:\r\n\tif Y[count] >= 0:\r\n\t\ttemplist2.append(degrees(templist[count]))\r\n\telif Y[count] < 0:\r\n\t\ttemplist2.append((degrees(templist[count])) + (2*(180-(degrees(templist[count])))))\r\n\tcount = count + 1\r\n\r\nfor e in templist2:\r\n\tif e == 0:\r\n\t\toutlist.append(0)\r\n\telse:\r\n\t\toutlist.append(360 - e)\r\n\r\n#Assign your output to the OUT variable\r\nOUT = outlist",
      "VariableInputPorts": true,
      "Id": "046a5a5d566d48de81d7a1fa2296f65e",
      "Inputs": [
        {
          "Id": "b302c34a117d45838e4cf198ec1c64f0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28da32100cb444958bad968d2b31a1c5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1ca8d17fde6482b858cfb9724440d18",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "9df942c0b4b74d89b59b6204ce9b3780",
      "Inputs": [
        {
          "Id": "2d9c1b5a94ac44ddbf69feedfcbea2d6",
          "Name": "str",
          "Description": "String to be converted.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b5c466f3a5248bfb3bd6b7488611d42",
          "Name": "number",
          "Description": "Integer or double-type number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "IN=List.Transpose(inputlist);\nX=IN[0];\nY=IN[1];\nZ=IN[2];",
      "Id": "c59cb780cf1e478eb1d05ba6f1045304",
      "Inputs": [
        {
          "Id": "18f7b0f4031542f79a7f5214cbc71ea5",
          "Name": "inputlist",
          "Description": "inputlist",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e24260792d34708aefa13c0de3c8d3f",
          "Name": "",
          "Description": "IN",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa885a8ed18b4f0d8cc4fa2d09fc3098",
          "Name": "",
          "Description": "X",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e205da2eb2e41e1b266c2d7cc9e7701",
          "Name": "",
          "Description": "Y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7fea2d50e6246d9b57530d4eee1f134",
          "Name": "",
          "Description": "Z",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "d61ef86638054754aeb4a774da2a086d",
      "Inputs": [
        {
          "Id": "b319ae24193742a5a49a9d4131d0d49d",
          "Name": "str",
          "Description": "String to be converted.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "940f0b64707b4f54ac13732fd168d0a0",
          "Name": "number",
          "Description": "Integer or double-type number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n#The inputs to this node will be stored as a list in the IN variable.\r\nvect = IN[0]\r\noutlist = []\r\ntemplist = []\r\n\r\nfor e in vect:\r\n\te = str(e)\r\n\te = e.replace('(', '')\r\n\te = e.replace(')', '')\r\n\te = e.replace(',', '')\r\n\ttemplist.append(e)\r\n\r\nfor i in templist:\r\n\toutlist.append(i.split(\" \"))\r\n\t\r\nfor e in outlist:\r\n\tfor i in e:\r\n\t\ti = float(i)\r\n\r\n#Assign your output to the OUT variable\r\nOUT = outlist",
      "VariableInputPorts": true,
      "Id": "9dd87da2f0af43d99479ed76e2146dd9",
      "Inputs": [
        {
          "Id": "cd9390fb487446ceaa493d5c21146cae",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0736bc5ee7a947dab3285483c8ab17d1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "XYZvectorHand = list[0];\nxMirrored = list[1];\nyMirrored = list[2];",
      "Id": "e5445a5089f342ccb3b3fe85c70acea5",
      "Inputs": [
        {
          "Id": "96e6a2503fd649239176102703f10bca",
          "Name": "list",
          "Description": "list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0c942f7d1154ac690a6608927cbc524",
          "Name": "",
          "Description": "XYZvectorHand",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b54dae22a8354963b98e523e903e59ac",
          "Name": "",
          "Description": "xMirrored",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "593ba836aa5647c2bfaba5e90129f925",
          "Name": "",
          "Description": "yMirrored",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "f67550fe2379412090711a8d5f73bca6",
      "Inputs": [
        {
          "Id": "abbf562b2fce4907be5b930a2a86f507",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1de0b7d7e0e0476b950c3c4564e6e404",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# This node has been made by Modelical\r\n# www.modelical.com\r\n\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Import RevitAPI\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n#The inputs to this node will be stored as a list in the IN variable.\r\n\r\ndef toList(input):\r\n\tif isinstance(input,list) == False:\r\n\t\treturn [input]\r\n\telse:\r\n\t\treturn input\r\n\r\nelements = toList(UnwrapElement(IN[0]))\r\n\r\noutlist = [] #export list\r\ntemplist = [] #temporary list to group attributes by element\r\nfor i in elements:\r\n\ttemplist.append(i.HandOrientation) #vector XYZ Hand\r\n\ttemplist.append(i.FacingFlipped) #is mirrored over X axis?\r\n\ttemplist.append(i.HandFlipped) #is mirrored over Y axis?\r\n\toutlist.append(templist[:])\r\n\r\n\tdel templist[:] #clear the templist\r\n\r\n#Assign your output to the OUT variable\r\nOUT = outlist",
      "VariableInputPorts": true,
      "Id": "c5860fdba57842fe8304a2dbe3df6263",
      "Inputs": [
        {
          "Id": "52d14cf48ada4d38a994e37e13de3332",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "839febc894f34c0cb615dfd86d2d2781",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "VARFamInstance",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "1a4ba093220e4ffb97f0bb728ed28ebd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7bb1a7d3905a4d7e95bf7405a82de073",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARRotation",
      "Id": "5a647a9e94144c07b2809ddfc828efce",
      "Inputs": [
        {
          "Id": "62f8b2758492413484d5d1fc06b63c7d",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARisXmirrored",
      "Id": "8e3c8f5bb1b2466883f31b8e60856b08",
      "Inputs": [
        {
          "Id": "dbe20d6cb6ae4fc8b76fb6aa761e628f",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "VARisYmirrored",
      "Id": "41560683c1604cd4aad8319e14faefce",
      "Inputs": [
        {
          "Id": "9242aab18243464cb02725e99516e7de",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "4570429700f74b8a9a5c952bb14121fc",
      "End": "9242aab18243464cb02725e99516e7de",
      "Id": "9c6f630919e24d33be02565a087368cc"
    },
    {
      "Start": "9e8c7c34a1a94540901f2a74eb470c07",
      "End": "dbe20d6cb6ae4fc8b76fb6aa761e628f",
      "Id": "bbec2bea7f0b4b10bb790aa67d2cc9ad"
    },
    {
      "Start": "b1ca8d17fde6482b858cfb9724440d18",
      "End": "62f8b2758492413484d5d1fc06b63c7d",
      "Id": "8f9ad067734043289fe6925d7acf5541"
    },
    {
      "Start": "9b5c466f3a5248bfb3bd6b7488611d42",
      "End": "28da32100cb444958bad968d2b31a1c5",
      "Id": "419233d194e3427e809af4f56da4457e"
    },
    {
      "Start": "aa885a8ed18b4f0d8cc4fa2d09fc3098",
      "End": "b319ae24193742a5a49a9d4131d0d49d",
      "Id": "af7dafa3379d4f6c9ba8dd3c2aba5c9f"
    },
    {
      "Start": "3e205da2eb2e41e1b266c2d7cc9e7701",
      "End": "2d9c1b5a94ac44ddbf69feedfcbea2d6",
      "Id": "fc7de3eb4fb24594abd6897db44017c1"
    },
    {
      "Start": "940f0b64707b4f54ac13732fd168d0a0",
      "End": "b302c34a117d45838e4cf198ec1c64f0",
      "Id": "74a09fd37d3a48a794076b43f3b4c789"
    },
    {
      "Start": "0736bc5ee7a947dab3285483c8ab17d1",
      "End": "18f7b0f4031542f79a7f5214cbc71ea5",
      "Id": "e20f429184fe45e29557459ef7e37f3d"
    },
    {
      "Start": "d0c942f7d1154ac690a6608927cbc524",
      "End": "cd9390fb487446ceaa493d5c21146cae",
      "Id": "5e4de085753b4906b5799735207bdb91"
    },
    {
      "Start": "b54dae22a8354963b98e523e903e59ac",
      "End": "4f9d830c73804befa63f7745e008afd0",
      "Id": "0eb41f59db0d48eb9c3a819b98d0dd2a"
    },
    {
      "Start": "593ba836aa5647c2bfaba5e90129f925",
      "End": "52c955852fc049acab0fbfe6d7392d42",
      "Id": "86e81118c6e8406bbd23b32d7f0479e7"
    },
    {
      "Start": "1de0b7d7e0e0476b950c3c4564e6e404",
      "End": "96e6a2503fd649239176102703f10bca",
      "Id": "761a08ff931041fca6605f83f59ff746"
    },
    {
      "Start": "839febc894f34c0cb615dfd86d2d2781",
      "End": "abbf562b2fce4907be5b930a2a86f507",
      "Id": "740a0bbbb7f748ddaacce84f5793850b"
    },
    {
      "Start": "7bb1a7d3905a4d7e95bf7405a82de073",
      "End": "52d14cf48ada4d38a994e37e13de3332",
      "Id": "558bc9da0ee8401abe159ad293bd2fc5"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "50800932ffee404a8456a5ae9d942cdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Watch(isYMirrored)",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1649.13481827148,
        "Y": 371.620104238699
      },
      {
        "Id": "c208fde1c9254e79931fb39b17eca173",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Watch(isXMirrored)",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1651.11703608815,
        "Y": 204.210424692959
      },
      {
        "Id": "046a5a5d566d48de81d7a1fa2296f65e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1682.83080071306,
        "Y": 23.8683177727529
      },
      {
        "Id": "9df942c0b4b74d89b59b6204ce9b3780",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1455.57089975417,
        "Y": 107.027328564059
      },
      {
        "Id": "c59cb780cf1e478eb1d05ba6f1045304",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "transpose list and split output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1052.1232714753,
        "Y": 14.6134440565843
      },
      {
        "Id": "d61ef86638054754aeb4a774da2a086d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1454.96951687665,
        "Y": 27.0059272013882
      },
      {
        "Id": "9dd87da2f0af43d99479ed76e2146dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 872.620670110247,
        "Y": 10.9822082366936
      },
      {
        "Id": "e5445a5089f342ccb3b3fe85c70acea5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 556.533678566456,
        "Y": 15.8196712103979
      },
      {
        "Id": "f67550fe2379412090711a8d5f73bca6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 365.596153811093,
        "Y": 12.5382527261297
      },
      {
        "Id": "c5860fdba57842fe8304a2dbe3df6263",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 206.685580670203,
        "Y": 11.5749932643729
      },
      {
        "Id": "1a4ba093220e4ffb97f0bb728ed28ebd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 51.0366551814334,
        "Y": 10.9881519038709
      },
      {
        "Id": "5a647a9e94144c07b2809ddfc828efce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1942.83810445947,
        "Y": 24.5888734372654
      },
      {
        "Id": "8e3c8f5bb1b2466883f31b8e60856b08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1934.4320985725,
        "Y": 205.91842899919
      },
      {
        "Id": "41560683c1604cd4aad8319e14faefce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1935.21837083084,
        "Y": 377.226534964769
      }
    ],
    "Annotations": [],
    "X": 3.85181659016234,
    "Y": 199.407860185048,
    "Zoom": 0.579653943154792
  }
}